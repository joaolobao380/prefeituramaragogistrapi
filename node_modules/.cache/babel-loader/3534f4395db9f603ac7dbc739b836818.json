{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _CollapseLabel = _interopRequireDefault(require(\"../CollapseLabel\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar RowLabelWithCheckbox = function RowLabelWithCheckbox(_ref) {\n  var children = _ref.children,\n      isCollapsable = _ref.isCollapsable,\n      isFormDisabled = _ref.isFormDisabled,\n      label = _ref.label,\n      onChange = _ref.onChange,\n      onClick = _ref.onClick,\n      checkboxName = _ref.checkboxName,\n      someChecked = _ref.someChecked,\n      textColor = _ref.textColor,\n      value = _ref.value,\n      width = _ref.width;\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], {\n    width: width,\n    disabled: isFormDisabled\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Checkbox, {\n    name: checkboxName,\n    disabled: isFormDisabled,\n    onChange: onChange,\n    someChecked: someChecked,\n    value: value\n  }), /*#__PURE__*/_react[\"default\"].createElement(_CollapseLabel[\"default\"], {\n    title: label,\n    alignItems: \"center\",\n    isCollapsable: isCollapsable,\n    onClick: onClick\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    color: textColor,\n    ellipsis: true,\n    fontSize: \"xs\",\n    fontWeight: \"bold\",\n    lineHeight: \"20px\",\n    textTransform: \"uppercase\"\n  }, label), children));\n};\n\nRowLabelWithCheckbox.defaultProps = {\n  children: null,\n  checkboxName: '',\n  onChange: function onChange() {},\n  value: false,\n  someChecked: false,\n  isCollapsable: false,\n  textColor: 'grey',\n  width: '18rem'\n};\nRowLabelWithCheckbox.propTypes = {\n  checkboxName: _propTypes[\"default\"].string,\n  children: _propTypes[\"default\"].node,\n  label: _propTypes[\"default\"].string.isRequired,\n  isCollapsable: _propTypes[\"default\"].bool,\n  isFormDisabled: _propTypes[\"default\"].bool.isRequired,\n  onChange: _propTypes[\"default\"].func,\n  onClick: _propTypes[\"default\"].func.isRequired,\n  someChecked: _propTypes[\"default\"].bool,\n  textColor: _propTypes[\"default\"].string,\n  value: _propTypes[\"default\"].bool,\n  width: _propTypes[\"default\"].string\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(RowLabelWithCheckbox);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/components/Roles/RowLabelWithCheckbox/index.js"],"names":["RowLabelWithCheckbox","children","isCollapsable","isFormDisabled","label","onChange","onClick","checkboxName","someChecked","textColor","value","width","defaultProps","propTypes","PropTypes","string","node","isRequired","bool","func"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,OAYvB;AAAA,MAXJC,QAWI,QAXJA,QAWI;AAAA,MAVJC,aAUI,QAVJA,aAUI;AAAA,MATJC,cASI,QATJA,cASI;AAAA,MARJC,KAQI,QARJA,KAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,OAMI,QANJA,OAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,KACI,QADJA,KACI;AACJ,sBACE,gCAAC,mBAAD;AAAS,IAAA,KAAK,EAAEA,KAAhB;AAAuB,IAAA,QAAQ,EAAER;AAAjC,kBACE,gCAAC,cAAD;AACE,IAAA,IAAI,EAAEI,YADR;AAEE,IAAA,QAAQ,EAAEJ,cAFZ;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,WAAW,EAAEG,WAJf;AAKE,IAAA,KAAK,EAAEE;AALT,IADF,eAQE,gCAAC,yBAAD;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,aAAa,EAAEF,aAHjB;AAIE,IAAA,OAAO,EAAEI;AAJX,kBAME,gCAAC,UAAD;AACE,IAAA,KAAK,EAAEG,SADT;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,QAAQ,EAAC,IAHX;AAIE,IAAA,UAAU,EAAC,MAJb;AAKE,IAAA,UAAU,EAAC,MALb;AAME,IAAA,aAAa,EAAC;AANhB,KAQGL,KARH,CANF,EAgBGH,QAhBH,CARF,CADF;AA6BD,CA1CD;;AA4CAD,oBAAoB,CAACY,YAArB,GAAoC;AAClCX,EAAAA,QAAQ,EAAE,IADwB;AAElCM,EAAAA,YAAY,EAAE,EAFoB;AAGlCF,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CAHgB;AAIlCK,EAAAA,KAAK,EAAE,KAJ2B;AAKlCF,EAAAA,WAAW,EAAE,KALqB;AAMlCN,EAAAA,aAAa,EAAE,KANmB;AAOlCO,EAAAA,SAAS,EAAE,MAPuB;AAQlCE,EAAAA,KAAK,EAAE;AAR2B,CAApC;AAWAX,oBAAoB,CAACa,SAArB,GAAiC;AAC/BN,EAAAA,YAAY,EAAEO,sBAAUC,MADO;AAE/Bd,EAAAA,QAAQ,EAAEa,sBAAUE,IAFW;AAG/BZ,EAAAA,KAAK,EAAEU,sBAAUC,MAAV,CAAiBE,UAHO;AAI/Bf,EAAAA,aAAa,EAAEY,sBAAUI,IAJM;AAK/Bf,EAAAA,cAAc,EAAEW,sBAAUI,IAAV,CAAeD,UALA;AAM/BZ,EAAAA,QAAQ,EAAES,sBAAUK,IANW;AAO/Bb,EAAAA,OAAO,EAAEQ,sBAAUK,IAAV,CAAeF,UAPO;AAQ/BT,EAAAA,WAAW,EAAEM,sBAAUI,IARQ;AAS/BT,EAAAA,SAAS,EAAEK,sBAAUC,MATU;AAU/BL,EAAAA,KAAK,EAAEI,sBAAUI,IAVc;AAW/BP,EAAAA,KAAK,EAAEG,sBAAUC;AAXc,CAAjC;;4BAce,iBAAKf,oBAAL,C","sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, Text } from '@buffetjs/core';\nimport CollapseLabel from '../CollapseLabel';\nimport Wrapper from './Wrapper';\n\nconst RowLabelWithCheckbox = ({\n  children,\n  isCollapsable,\n  isFormDisabled,\n  label,\n  onChange,\n  onClick,\n  checkboxName,\n  someChecked,\n  textColor,\n  value,\n  width,\n}) => {\n  return (\n    <Wrapper width={width} disabled={isFormDisabled}>\n      <Checkbox\n        name={checkboxName}\n        disabled={isFormDisabled}\n        onChange={onChange}\n        someChecked={someChecked}\n        value={value}\n      />\n      <CollapseLabel\n        title={label}\n        alignItems=\"center\"\n        isCollapsable={isCollapsable}\n        onClick={onClick}\n      >\n        <Text\n          color={textColor}\n          ellipsis\n          fontSize=\"xs\"\n          fontWeight=\"bold\"\n          lineHeight=\"20px\"\n          textTransform=\"uppercase\"\n        >\n          {label}\n        </Text>\n        {children}\n      </CollapseLabel>\n    </Wrapper>\n  );\n};\n\nRowLabelWithCheckbox.defaultProps = {\n  children: null,\n  checkboxName: '',\n  onChange: () => {},\n  value: false,\n  someChecked: false,\n  isCollapsable: false,\n  textColor: 'grey',\n  width: '18rem',\n};\n\nRowLabelWithCheckbox.propTypes = {\n  checkboxName: PropTypes.string,\n  children: PropTypes.node,\n  label: PropTypes.string.isRequired,\n  isCollapsable: PropTypes.bool,\n  isFormDisabled: PropTypes.bool.isRequired,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func.isRequired,\n  someChecked: PropTypes.bool,\n  textColor: PropTypes.string,\n  value: PropTypes.bool,\n  width: PropTypes.string,\n};\n\nexport default memo(RowLabelWithCheckbox);\n"]},"metadata":{},"sourceType":"script"}