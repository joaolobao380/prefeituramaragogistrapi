{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _styles = require(\"@buffetjs/styles\");\n\nvar _utils = require(\"../../utils\");\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\n/**\n *\n * The input is made so we can handle a custom descritption\n *\n */\nvar CustomTextInput = function CustomTextInput(_ref) {\n  var description = _ref.description,\n      inputError = _ref.error,\n      label = _ref.label,\n      name = _ref.name,\n      _onChange = _ref.onChange,\n      validations = _ref.validations,\n      value = _ref.value,\n      rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"description\", \"error\", \"label\", \"name\", \"onChange\", \"validations\", \"value\"]);\n  var inputId = name;\n  var descriptionId = \"description-\".concat(inputId);\n  var errorId = \"error-\".concat(inputId);\n\n  var link = /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n    href: \"https://strapi.io/documentation/developer-docs/latest/development/plugins/users-permissions.html#templating-emails\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n    id: \"users-permissions.PopUpForm.Email.link.documentation\"\n  }));\n\n  var descriptionCompo = /*#__PURE__*/_react[\"default\"].createElement(_styles.Description, {\n    id: descriptionId\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n    id: (0, _utils.getTrad)('PopUpForm.Email.email_templates.inputDescription'),\n    values: {\n      link: link\n    }\n  }));\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_core.Error, {\n    inputError: inputError,\n    name: name,\n    type: \"text\",\n    validations: validations\n  }, function (_ref2) {\n    var canCheck = _ref2.canCheck,\n        onBlur = _ref2.onBlur,\n        error = _ref2.error,\n        dispatch = _ref2.dispatch;\n    return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], {\n      error: error\n    }, /*#__PURE__*/_react[\"default\"].createElement(_core.Label, {\n      htmlFor: inputId\n    }, label), /*#__PURE__*/_react[\"default\"].createElement(_core.InputText, (0, _extends2[\"default\"])({}, rest, {\n      name: name,\n      id: inputId,\n      \"aria-invalid\": error ? 'true' : 'false',\n      onBlur: onBlur,\n      onChange: function onChange(e) {\n        if (!canCheck) {\n          dispatch({\n            type: 'SET_CHECK'\n          });\n        }\n\n        dispatch({\n          type: 'SET_ERROR',\n          error: null\n        });\n\n        _onChange(e);\n      },\n      value: value\n    })), !error ? descriptionCompo : /*#__PURE__*/_react[\"default\"].createElement(_styles.ErrorMessage, {\n      id: errorId\n    }, error));\n  });\n};\n\nCustomTextInput.defaultProps = {\n  description: null,\n  id: null,\n  error: null,\n  label: null,\n  onBlur: null,\n  onChange: function onChange() {},\n  validations: {},\n  value: ''\n};\nCustomTextInput.propTypes = {\n  description: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].object]),\n  error: _propTypes[\"default\"].string,\n  id: _propTypes[\"default\"].string,\n  label: _propTypes[\"default\"].string,\n  name: _propTypes[\"default\"].string.isRequired,\n  onBlur: _propTypes[\"default\"].func,\n  onChange: function onChange() {},\n  validations: _propTypes[\"default\"].object,\n  value: _propTypes[\"default\"].any\n};\nvar _default = CustomTextInput;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-users-permissions/admin/src/containers/EmailTemplates/CustomTextInput.js"],"names":["CustomTextInput","description","inputError","error","label","name","onChange","validations","value","rest","inputId","descriptionId","errorId","link","descriptionCompo","canCheck","onBlur","dispatch","e","type","defaultProps","id","propTypes","PropTypes","oneOfType","string","object","isRequired","func","any"],"mappings":"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","sourcesContent":["/**\n *\n * The input is made so we can handle a custom descritption\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Error, Label, InputText } from '@buffetjs/core';\nimport { FormattedMessage } from 'react-intl';\nimport { Description, ErrorMessage } from '@buffetjs/styles';\nimport { getTrad } from '../../utils';\nimport Wrapper from './Wrapper';\n\nconst CustomTextInput = ({\n  description,\n  error: inputError,\n  label,\n  name,\n  onChange,\n  validations,\n  value,\n  ...rest\n}) => {\n  const inputId = name;\n  const descriptionId = `description-${inputId}`;\n  const errorId = `error-${inputId}`;\n\n  const link = (\n    <a\n      href=\"https://strapi.io/documentation/developer-docs/latest/development/plugins/users-permissions.html#templating-emails\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <FormattedMessage id=\"users-permissions.PopUpForm.Email.link.documentation\" />\n    </a>\n  );\n\n  const descriptionCompo = (\n    <Description id={descriptionId}>\n      <FormattedMessage\n        id={getTrad('PopUpForm.Email.email_templates.inputDescription')}\n        values={{ link }}\n      />\n    </Description>\n  );\n\n  return (\n    <Error inputError={inputError} name={name} type=\"text\" validations={validations}>\n      {({ canCheck, onBlur, error, dispatch }) => (\n        <Wrapper error={error}>\n          <Label htmlFor={inputId}>{label}</Label>\n          <InputText\n            {...rest}\n            name={name}\n            id={inputId}\n            aria-invalid={error ? 'true' : 'false'}\n            onBlur={onBlur}\n            onChange={e => {\n              if (!canCheck) {\n                dispatch({\n                  type: 'SET_CHECK',\n                });\n              }\n\n              dispatch({\n                type: 'SET_ERROR',\n                error: null,\n              });\n              onChange(e);\n            }}\n            value={value}\n          />\n          {!error ? descriptionCompo : <ErrorMessage id={errorId}>{error}</ErrorMessage>}\n        </Wrapper>\n      )}\n    </Error>\n  );\n};\n\nCustomTextInput.defaultProps = {\n  description: null,\n  id: null,\n  error: null,\n  label: null,\n  onBlur: null,\n  onChange: () => {},\n  validations: {},\n  value: '',\n};\n\nCustomTextInput.propTypes = {\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  error: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onBlur: PropTypes.func,\n  onChange: () => {},\n\n  validations: PropTypes.object,\n  value: PropTypes.any,\n};\n\nexport default CustomTextInput;\n"]},"metadata":{},"sourceType":"script"}