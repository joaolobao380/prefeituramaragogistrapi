{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"../../utils\");\n\nvar _reducer = require(\"./reducer\");\n\nvar _init = _interopRequireDefault(require(\"./init\"));\n\nvar useSettingsForm = function useSettingsForm(endPoint, schema, cbSuccess, fieldsToPick) {\n  var _useReducer = (0, _react.useReducer)(_reducer.reducer, _reducer.initialState, function () {\n    return (0, _init[\"default\"])(_reducer.initialState, fieldsToPick);\n  }),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      formErrors = _useReducer2$.formErrors,\n      initialData = _useReducer2$.initialData,\n      isLoading = _useReducer2$.isLoading,\n      modifiedData = _useReducer2$.modifiedData,\n      showHeaderButtonLoader = _useReducer2$.showHeaderButtonLoader,\n      showHeaderLoader = _useReducer2$.showHeaderLoader,\n      dispatch = _useReducer2[1];\n\n  (0, _react.useEffect)(function () {\n    var getData = /*#__PURE__*/function () {\n      var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n        var _yield$request, data;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return (0, _strapiHelperPlugin.request)(endPoint, {\n                  method: 'GET'\n                });\n\n              case 3:\n                _yield$request = _context.sent;\n                data = _yield$request.data;\n                dispatch({\n                  type: 'GET_DATA_SUCCEEDED',\n                  data: data,\n                  fieldsToPick: fieldsToPick\n                });\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0.response);\n                strapi.notification.toggle({\n                  type: 'warning',\n                  message: {\n                    id: 'notification.error'\n                  }\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function getData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    if (endPoint) {\n      getData();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [endPoint]);\n\n  var handleCancel = function handleCancel() {\n    dispatch({\n      type: 'ON_CANCEL'\n    });\n  };\n\n  var handleChange = function handleChange(_ref2) {\n    var _ref2$target = _ref2.target,\n        name = _ref2$target.name,\n        value = _ref2$target.value,\n        inputType = _ref2$target.type;\n    dispatch({\n      type: 'ON_CHANGE',\n      inputType: inputType,\n      keys: name,\n      value: value\n    });\n  };\n\n  var setField = function setField(fieldName, value) {\n    dispatch({\n      type: 'ON_CHANGE',\n      keys: fieldName,\n      value: value\n    });\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(e) {\n      var errors, cleanedData, _yield$request2, data, _data, apiErrors;\n\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              _context2.next = 3;\n              return (0, _utils.checkFormValidity)(modifiedData, schema);\n\n            case 3:\n              errors = _context2.sent;\n              dispatch({\n                type: 'SET_ERRORS',\n                errors: errors || {}\n              });\n\n              if (errors) {\n                _context2.next = 29;\n                break;\n              }\n\n              _context2.prev = 6;\n              strapi.lockAppWithOverlay();\n              dispatch({\n                type: 'ON_SUBMIT'\n              });\n              cleanedData = (0, _lodash.omit)(modifiedData, ['confirmPassword', 'registrationToken']);\n\n              if (cleanedData.roles) {\n                cleanedData.roles = cleanedData.roles.map(function (role) {\n                  return role.id;\n                });\n              }\n\n              _context2.next = 13;\n              return (0, _strapiHelperPlugin.request)(endPoint, {\n                method: 'PUT',\n                body: cleanedData\n              });\n\n            case 13:\n              _yield$request2 = _context2.sent;\n              data = _yield$request2.data;\n              cbSuccess(data);\n              dispatch({\n                type: 'ON_SUBMIT_SUCCEEDED',\n                data: data\n              });\n              strapi.notification.toggle({\n                type: 'success',\n                message: {\n                  id: 'notification.success.saved'\n                }\n              });\n              _context2.next = 26;\n              break;\n\n            case 20:\n              _context2.prev = 20;\n              _context2.t0 = _context2[\"catch\"](6);\n              _data = (0, _lodash.get)(_context2.t0, 'response.payload', {\n                data: {}\n              });\n\n              if ((0, _lodash.has)(_data, 'data') && typeof _data.data === 'string') {\n                strapi.notification.toggle({\n                  type: 'warning',\n                  message: _data.data\n                });\n              } else {\n                strapi.notification.toggle({\n                  type: 'warning',\n                  message: _data.message\n                });\n              }\n\n              apiErrors = (0, _utils.formatAPIErrors)(_data);\n              dispatch({\n                type: 'SET_ERRORS',\n                errors: apiErrors\n              });\n\n            case 26:\n              _context2.prev = 26;\n              strapi.unlockApp();\n              return _context2.finish(26);\n\n            case 29:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[6, 20, 26, 29]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return [{\n    formErrors: formErrors,\n    initialData: initialData,\n    isLoading: isLoading,\n    modifiedData: modifiedData,\n    showHeaderButtonLoader: showHeaderButtonLoader,\n    showHeaderLoader: showHeaderLoader\n  }, dispatch, {\n    handleCancel: handleCancel,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    setField: setField\n  }];\n};\n\nvar _default = useSettingsForm;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/hooks/useSettingsForm/index.js"],"names":["useSettingsForm","endPoint","schema","cbSuccess","fieldsToPick","reducer","initialState","formErrors","initialData","isLoading","modifiedData","showHeaderButtonLoader","showHeaderLoader","dispatch","getData","method","data","type","console","error","response","strapi","notification","toggle","message","id","handleCancel","handleChange","target","name","value","inputType","keys","setField","fieldName","handleSubmit","e","preventDefault","errors","lockAppWithOverlay","cleanedData","roles","map","role","body","apiErrors","unlockApp"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAWC,MAAX,EAAmBC,SAAnB,EAA8BC,YAA9B,EAA+C;AACrE,oBAGI,uBAAWC,gBAAX,EAAoBC,qBAApB,EAAkC;AAAA,WAAM,sBAAKA,qBAAL,EAAmBF,YAAnB,CAAN;AAAA,GAAlC,CAHJ;AAAA;AAAA;AAAA,MACIG,UADJ,iBACIA,UADJ;AAAA,MACgBC,WADhB,iBACgBA,WADhB;AAAA,MAC6BC,SAD7B,iBAC6BA,SAD7B;AAAA,MACwCC,YADxC,iBACwCA,YADxC;AAAA,MACsDC,sBADtD,iBACsDA,sBADtD;AAAA,MAC8EC,gBAD9E,iBAC8EA,gBAD9E;AAAA,MAEEC,QAFF;;AAKA,wBAAU,YAAM;AACd,QAAMC,OAAO;AAAA,+FAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEW,iCAAQb,QAAR,EAAkB;AAAEc,kBAAAA,MAAM,EAAE;AAAV,iBAAlB,CAFX;;AAAA;AAAA;AAEJC,gBAAAA,IAFI,kBAEJA,IAFI;AAIZH,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAE,oBADC;AAEPD,kBAAAA,IAAI,EAAJA,IAFO;AAGPZ,kBAAAA,YAAY,EAAZA;AAHO,iBAAD,CAAR;AAJY;AAAA;;AAAA;AAAA;AAAA;AAUZc,gBAAAA,OAAO,CAACC,KAAR,CAAc,YAAIC,QAAlB;AACAC,gBAAAA,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2B;AACzBN,kBAAAA,IAAI,EAAE,SADmB;AAEzBO,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,EAAE,EAAE;AAAN;AAFgB,iBAA3B;;AAXY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAPX,OAAO;AAAA;AAAA;AAAA,OAAb;;AAkBA,QAAIb,QAAJ,EAAc;AACZa,MAAAA,OAAO;AACR,KArBa,CAsBd;;AACD,GAvBD,EAuBG,CAACb,QAAD,CAvBH;;AAyBA,MAAMyB,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBb,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,MAAMU,YAAY,GAAG,SAAfA,YAAe,QAAkD;AAAA,6BAA/CC,MAA+C;AAAA,QAArCC,IAAqC,gBAArCA,IAAqC;AAAA,QAA/BC,KAA+B,gBAA/BA,KAA+B;AAAA,QAAlBC,SAAkB,gBAAxBd,IAAwB;AACrEJ,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,WADC;AAEPc,MAAAA,SAAS,EAATA,SAFO;AAGPC,MAAAA,IAAI,EAAEH,IAHC;AAIPC,MAAAA,KAAK,EAALA;AAJO,KAAD,CAAR;AAMD,GAPD;;AASA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAYJ,KAAZ,EAAsB;AACrCjB,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,WADC;AAEPe,MAAAA,IAAI,EAAEE,SAFC;AAGPJ,MAAAA,KAAK,EAALA;AAHO,KAAD,CAAR;AAKD,GAND;;AAQA,MAAMK,YAAY;AAAA,8FAAG,kBAAMC,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACC,cAAF;AADmB;AAAA,qBAGE,8BAAkB3B,YAAlB,EAAgCR,MAAhC,CAHF;;AAAA;AAGboC,cAAAA,MAHa;AAKnBzB,cAAAA,QAAQ,CAAC;AACPI,gBAAAA,IAAI,EAAE,YADC;AAEPqB,gBAAAA,MAAM,EAAEA,MAAM,IAAI;AAFX,eAAD,CAAR;;AALmB,kBAUdA,MAVc;AAAA;AAAA;AAAA;;AAAA;AAYfjB,cAAAA,MAAM,CAACkB,kBAAP;AAEA1B,cAAAA,QAAQ,CAAC;AACPI,gBAAAA,IAAI,EAAE;AADC,eAAD,CAAR;AAIMuB,cAAAA,WAlBS,GAkBK,kBAAK9B,YAAL,EAAmB,CAAC,iBAAD,EAAoB,mBAApB,CAAnB,CAlBL;;AAoBf,kBAAI8B,WAAW,CAACC,KAAhB,EAAuB;AACrBD,gBAAAA,WAAW,CAACC,KAAZ,GAAoBD,WAAW,CAACC,KAAZ,CAAkBC,GAAlB,CAAsB,UAAAC,IAAI;AAAA,yBAAIA,IAAI,CAAClB,EAAT;AAAA,iBAA1B,CAApB;AACD;;AAtBc;AAAA,qBAwBQ,iCAAQxB,QAAR,EAAkB;AACvCc,gBAAAA,MAAM,EAAE,KAD+B;AAEvC6B,gBAAAA,IAAI,EAAEJ;AAFiC,eAAlB,CAxBR;;AAAA;AAAA;AAwBPxB,cAAAA,IAxBO,mBAwBPA,IAxBO;AA6Bfb,cAAAA,SAAS,CAACa,IAAD,CAAT;AAEAH,cAAAA,QAAQ,CAAC;AACPI,gBAAAA,IAAI,EAAE,qBADC;AAEPD,gBAAAA,IAAI,EAAJA;AAFO,eAAD,CAAR;AAKAK,cAAAA,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2B;AACzBN,gBAAAA,IAAI,EAAE,SADmB;AAEzBO,gBAAAA,OAAO,EAAE;AAAEC,kBAAAA,EAAE,EAAE;AAAN;AAFgB,eAA3B;AApCe;AAAA;;AAAA;AAAA;AAAA;AAyCTT,cAAAA,KAzCS,GAyCF,+BAAS,kBAAT,EAA6B;AAAEA,gBAAAA,IAAI,EAAE;AAAR,eAA7B,CAzCE;;AA2Cf,kBAAI,iBAAIA,KAAJ,EAAU,MAAV,KAAqB,OAAOA,KAAI,CAACA,IAAZ,KAAqB,QAA9C,EAAwD;AACtDK,gBAAAA,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2B;AACzBN,kBAAAA,IAAI,EAAE,SADmB;AAEzBO,kBAAAA,OAAO,EAAER,KAAI,CAACA;AAFW,iBAA3B;AAID,eALD,MAKO;AACLK,gBAAAA,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2B;AACzBN,kBAAAA,IAAI,EAAE,SADmB;AAEzBO,kBAAAA,OAAO,EAAER,KAAI,CAACQ;AAFW,iBAA3B;AAID;;AAEKqB,cAAAA,SAvDS,GAuDG,4BAAgB7B,KAAhB,CAvDH;AAyDfH,cAAAA,QAAQ,CAAC;AACPI,gBAAAA,IAAI,EAAE,YADC;AAEPqB,gBAAAA,MAAM,EAAEO;AAFD,eAAD,CAAR;;AAzDe;AAAA;AA8DfxB,cAAAA,MAAM,CAACyB,SAAP;AA9De;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZX,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAmEA,SAAO,CACL;AAAE5B,IAAAA,UAAU,EAAVA,UAAF;AAAcC,IAAAA,WAAW,EAAXA,WAAd;AAA2BC,IAAAA,SAAS,EAATA,SAA3B;AAAsCC,IAAAA,YAAY,EAAZA,YAAtC;AAAoDC,IAAAA,sBAAsB,EAAtBA,sBAApD;AAA4EC,IAAAA,gBAAgB,EAAhBA;AAA5E,GADK,EAELC,QAFK,EAGL;AAAEa,IAAAA,YAAY,EAAZA,YAAF;AAAgBC,IAAAA,YAAY,EAAZA,YAAhB;AAA8BQ,IAAAA,YAAY,EAAZA,YAA9B;AAA4CF,IAAAA,QAAQ,EAARA;AAA5C,GAHK,CAAP;AAKD,CA9HD;;eAgIejC,e","sourcesContent":["import { useEffect, useReducer } from 'react';\nimport { request } from 'strapi-helper-plugin';\nimport { get, has, omit } from 'lodash';\nimport { checkFormValidity, formatAPIErrors } from '../../utils';\nimport { initialState, reducer } from './reducer';\nimport init from './init';\n\nconst useSettingsForm = (endPoint, schema, cbSuccess, fieldsToPick) => {\n  const [\n    { formErrors, initialData, isLoading, modifiedData, showHeaderButtonLoader, showHeaderLoader },\n    dispatch,\n  ] = useReducer(reducer, initialState, () => init(initialState, fieldsToPick));\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const { data } = await request(endPoint, { method: 'GET' });\n\n        dispatch({\n          type: 'GET_DATA_SUCCEEDED',\n          data,\n          fieldsToPick,\n        });\n      } catch (err) {\n        console.error(err.response);\n        strapi.notification.toggle({\n          type: 'warning',\n          message: { id: 'notification.error' },\n        });\n      }\n    };\n\n    if (endPoint) {\n      getData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [endPoint]);\n\n  const handleCancel = () => {\n    dispatch({\n      type: 'ON_CANCEL',\n    });\n  };\n\n  const handleChange = ({ target: { name, value, type: inputType } }) => {\n    dispatch({\n      type: 'ON_CHANGE',\n      inputType,\n      keys: name,\n      value,\n    });\n  };\n\n  const setField = (fieldName, value) => {\n    dispatch({\n      type: 'ON_CHANGE',\n      keys: fieldName,\n      value,\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const errors = await checkFormValidity(modifiedData, schema);\n\n    dispatch({\n      type: 'SET_ERRORS',\n      errors: errors || {},\n    });\n\n    if (!errors) {\n      try {\n        strapi.lockAppWithOverlay();\n\n        dispatch({\n          type: 'ON_SUBMIT',\n        });\n\n        const cleanedData = omit(modifiedData, ['confirmPassword', 'registrationToken']);\n\n        if (cleanedData.roles) {\n          cleanedData.roles = cleanedData.roles.map(role => role.id);\n        }\n\n        const { data } = await request(endPoint, {\n          method: 'PUT',\n          body: cleanedData,\n        });\n\n        cbSuccess(data);\n\n        dispatch({\n          type: 'ON_SUBMIT_SUCCEEDED',\n          data,\n        });\n\n        strapi.notification.toggle({\n          type: 'success',\n          message: { id: 'notification.success.saved' },\n        });\n      } catch (err) {\n        const data = get(err, 'response.payload', { data: {} });\n\n        if (has(data, 'data') && typeof data.data === 'string') {\n          strapi.notification.toggle({\n            type: 'warning',\n            message: data.data,\n          });\n        } else {\n          strapi.notification.toggle({\n            type: 'warning',\n            message: data.message,\n          });\n        }\n\n        const apiErrors = formatAPIErrors(data);\n\n        dispatch({\n          type: 'SET_ERRORS',\n          errors: apiErrors,\n        });\n      } finally {\n        strapi.unlockApp();\n      }\n    }\n  };\n\n  return [\n    { formErrors, initialData, isLoading, modifiedData, showHeaderButtonLoader, showHeaderLoader },\n    dispatch,\n    { handleCancel, handleChange, handleSubmit, setField },\n  ];\n};\n\nexport default useSettingsForm;\n"]},"metadata":{},"sourceType":"script"}