{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _formatLayouts = _interopRequireDefault(require(\"./utils/formatLayouts\"));\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nvar _selectors = require(\"../../containers/Main/selectors\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar useFetchContentTypeLayout = function useFetchContentTypeLayout(contentTypeUID) {\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      error = _useReducer2$.error,\n      isLoading = _useReducer2$.isLoading,\n      layout = _useReducer2$.layout,\n      layouts = _useReducer2$.layouts,\n      dispatch = _useReducer2[1];\n\n  var schemasSelector = (0, _react.useMemo)(_selectors.makeSelectModelAndComponentSchemas, []);\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n    return schemasSelector(state);\n  }, _reactRedux.shallowEqual),\n      schemas = _useSelector.schemas;\n\n  var isMounted = (0, _react.useRef)(true);\n  var getData = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(uid) {\n      var abortSignal,\n          signal,\n          _yield$request,\n          data,\n          _args = arguments;\n\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              abortSignal = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n              signal = abortSignal || new AbortController().signal;\n\n              if (!layouts[uid]) {\n                _context.next = 5;\n                break;\n              }\n\n              dispatch({\n                type: 'SET_LAYOUT_FROM_STATE',\n                uid: uid\n              });\n              return _context.abrupt(\"return\");\n\n            case 5:\n              dispatch({\n                type: 'GET_DATA'\n              });\n              _context.prev = 6;\n              _context.next = 9;\n              return (0, _strapiHelperPlugin.request)(\"/content-manager/content-types/\".concat(uid, \"/configuration\"), {\n                method: 'GET',\n                signal: signal\n              });\n\n            case 9:\n              _yield$request = _context.sent;\n              data = _yield$request.data;\n              dispatch({\n                type: 'GET_DATA_SUCCEEDED',\n                data: (0, _formatLayouts[\"default\"])(data, schemas)\n              });\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](6);\n\n              if (isMounted.current) {\n                console.error(_context.t0);\n              }\n\n              if (isMounted.current && _context.t0.name !== 'AbortError') {\n                dispatch({\n                  type: 'GET_DATA_ERROR',\n                  error: _context.t0\n                });\n              }\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 14]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [layouts, schemas]);\n  (0, _react.useEffect)(function () {\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  (0, _react.useEffect)(function () {\n    var abortController = new AbortController();\n    var signal = abortController.signal;\n    getData(contentTypeUID, signal);\n    return function () {\n      abortController.abort();\n    };\n  }, [contentTypeUID, getData]);\n  var updateLayout = (0, _react.useCallback)(function (newLayout) {\n    dispatch({\n      type: 'UPDATE_LAYOUT',\n      newLayout: (0, _formatLayouts[\"default\"])({\n        contentType: newLayout,\n        components: {}\n      }, schemas)\n    });\n  }, [schemas]);\n  return {\n    error: error,\n    isLoading: isLoading,\n    layout: layout,\n    updateLayout: updateLayout\n  };\n};\n\nvar _default = useFetchContentTypeLayout;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/hooks/useFetchContentTypeLayout/index.js"],"names":["useFetchContentTypeLayout","contentTypeUID","reducer","initialState","error","isLoading","layout","layouts","dispatch","schemasSelector","makeSelectModelAndComponentSchemas","state","shallowEqual","schemas","isMounted","getData","uid","abortSignal","signal","AbortController","type","method","data","current","console","name","abortController","abort","updateLayout","newLayout","contentType","components"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo, useReducer, useRef } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { request } from 'strapi-helper-plugin';\nimport formatLayouts from './utils/formatLayouts';\nimport reducer, { initialState } from './reducer';\nimport { makeSelectModelAndComponentSchemas } from '../../containers/Main/selectors';\n\nconst useFetchContentTypeLayout = contentTypeUID => {\n  const [{ error, isLoading, layout, layouts }, dispatch] = useReducer(reducer, initialState);\n  const schemasSelector = useMemo(makeSelectModelAndComponentSchemas, []);\n  const { schemas } = useSelector(state => schemasSelector(state), shallowEqual);\n  const isMounted = useRef(true);\n\n  const getData = useCallback(\n    async (uid, abortSignal = false) => {\n      let signal = abortSignal || new AbortController().signal;\n\n      if (layouts[uid]) {\n        dispatch({ type: 'SET_LAYOUT_FROM_STATE', uid });\n\n        return;\n      }\n      dispatch({ type: 'GET_DATA' });\n\n      try {\n        const { data } = await request(`/content-manager/content-types/${uid}/configuration`, {\n          method: 'GET',\n          signal,\n        });\n\n        dispatch({\n          type: 'GET_DATA_SUCCEEDED',\n          data: formatLayouts(data, schemas),\n        });\n      } catch (error) {\n        if (isMounted.current) {\n          console.error(error);\n        }\n\n        if (isMounted.current && error.name !== 'AbortError') {\n          dispatch({ type: 'GET_DATA_ERROR', error });\n        }\n      }\n    },\n    [layouts, schemas]\n  );\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const { signal } = abortController;\n\n    getData(contentTypeUID, signal);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [contentTypeUID, getData]);\n\n  const updateLayout = useCallback(\n    newLayout => {\n      dispatch({\n        type: 'UPDATE_LAYOUT',\n        newLayout: formatLayouts({ contentType: newLayout, components: {} }, schemas),\n      });\n    },\n    [schemas]\n  );\n\n  return {\n    error,\n    isLoading,\n    layout,\n    updateLayout,\n  };\n};\n\nexport default useFetchContentTypeLayout;\n"]},"metadata":{},"sourceType":"script"}