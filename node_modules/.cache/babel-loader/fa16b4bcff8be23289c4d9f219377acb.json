{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _utils = require(\"../../utils\");\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar CheckboxConfirmation = function CheckboxConfirmation(_ref) {\n  var description = _ref.description,\n      isCreating = _ref.isCreating,\n      label = _ref.label,\n      name = _ref.name,\n      onChange = _ref.onChange,\n      rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"description\", \"isCreating\", \"label\", \"name\", \"onChange\"]);\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    if (isCreating || e.target.value) {\n      return onChange(e);\n    }\n\n    if (!e.target.value) {\n      return setIsOpen(true);\n    }\n\n    return null;\n  };\n\n  var handleConfirm = function handleConfirm() {\n    onChange({\n      target: {\n        name: name,\n        value: false,\n        type: 'checkbox'\n      }\n    });\n    setIsOpen(false);\n  };\n\n  var handleToggle = function handleToggle() {\n    return setIsOpen(function (prev) {\n      return !prev;\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_core.Checkbox, (0, _extends2[\"default\"])({}, rest, {\n    message: label,\n    name: name,\n    onChange: handleChange,\n    type: \"checkbox\"\n  })), description && /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    color: \"grey\",\n    title: description,\n    fontSize: \"sm\",\n    ellipsis: true\n  }, description)), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.ModalConfirm, {\n    confirmButtonLabel: {\n      id: (0, _utils.getTrad)('CheckboxConfirmation.Modal.button-confirm')\n    },\n    content: {\n      id: (0, _utils.getTrad)('CheckboxConfirmation.Modal.content')\n    },\n    isOpen: isOpen,\n    toggle: handleToggle,\n    onConfirm: handleConfirm\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    fontWeight: \"bold\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('CheckboxConfirmation.Modal.body')\n  }))));\n};\n\nCheckboxConfirmation.defaultProps = {\n  description: null,\n  isCreating: false\n};\nCheckboxConfirmation.propTypes = {\n  description: _propTypes[\"default\"].string,\n  label: _propTypes[\"default\"].string.isRequired,\n  isCreating: _propTypes[\"default\"].bool,\n  name: _propTypes[\"default\"].string.isRequired,\n  onChange: _propTypes[\"default\"].func.isRequired\n};\nvar _default = CheckboxConfirmation;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/components/CheckboxConfirmation/index.js"],"names":["CheckboxConfirmation","description","isCreating","label","name","onChange","rest","formatMessage","isOpen","setIsOpen","handleChange","e","target","value","handleConfirm","type","handleToggle","prev","id","defaultProps","propTypes","PropTypes","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Checkbox, Text } from '@buffetjs/core';\nimport { ModalConfirm } from 'strapi-helper-plugin';\nimport { getTrad } from '../../utils';\nimport Wrapper from './Wrapper';\n\nconst CheckboxConfirmation = ({ description, isCreating, label, name, onChange, ...rest }) => {\n  const { formatMessage } = useIntl();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleChange = e => {\n    if (isCreating || e.target.value) {\n      return onChange(e);\n    }\n\n    if (!e.target.value) {\n      return setIsOpen(true);\n    }\n\n    return null;\n  };\n\n  const handleConfirm = () => {\n    onChange({ target: { name, value: false, type: 'checkbox' } });\n    setIsOpen(false);\n  };\n\n  const handleToggle = () => setIsOpen(prev => !prev);\n\n  return (\n    <>\n      <Wrapper>\n        <Checkbox {...rest} message={label} name={name} onChange={handleChange} type=\"checkbox\" />\n        {description && (\n          <Text color=\"grey\" title={description} fontSize=\"sm\" ellipsis>\n            {description}\n          </Text>\n        )}\n      </Wrapper>\n      <ModalConfirm\n        confirmButtonLabel={{ id: getTrad('CheckboxConfirmation.Modal.button-confirm') }}\n        content={{ id: getTrad('CheckboxConfirmation.Modal.content') }}\n        isOpen={isOpen}\n        toggle={handleToggle}\n        onConfirm={handleConfirm}\n      >\n        <Text fontWeight=\"bold\">\n          {formatMessage({ id: getTrad('CheckboxConfirmation.Modal.body') })}\n        </Text>\n      </ModalConfirm>\n    </>\n  );\n};\n\nCheckboxConfirmation.defaultProps = {\n  description: null,\n  isCreating: false,\n};\n\nCheckboxConfirmation.propTypes = {\n  description: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  isCreating: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default CheckboxConfirmation;\n"]},"metadata":{},"sourceType":"script"}