{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDisplayedModels = exports.generateRelationQueryInfosForComponents = exports.generateRelationQueryInfos = exports.formatListLayoutWithMetas = exports.formatLayoutWithMetas = exports.formatEditRelationsLayoutWithMetas = exports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../../pluginId\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar getRelationModel = function getRelationModel(targetModel, models) {\n  return models.find(function (model) {\n    return model.uid === targetModel;\n  });\n}; // editRelations is an array of strings...\n\n\nvar formatEditRelationsLayoutWithMetas = function formatEditRelationsLayoutWithMetas(contentTypeConfiguration, models) {\n  var formatted = contentTypeConfiguration.layouts.editRelations.reduce(function (acc, current) {\n    var fieldSchema = (0, _lodash.get)(contentTypeConfiguration, ['attributes', current], {});\n    var targetModelUID = (0, _lodash.get)(contentTypeConfiguration, ['attributes', current, 'targetModel'], null);\n    var targetModelSchema = getRelationModel(targetModelUID, models);\n    var targetModelPluginOptions = targetModelSchema.pluginOptions || {};\n    var metadatas = (0, _lodash.get)(contentTypeConfiguration, ['metadatas', current, 'edit'], {});\n    var size = 6;\n    var queryInfos = generateRelationQueryInfos(contentTypeConfiguration, current, models);\n    acc.push({\n      name: current,\n      size: size,\n      fieldSchema: fieldSchema,\n      metadatas: metadatas,\n      queryInfos: queryInfos,\n      targetModelPluginOptions: targetModelPluginOptions\n    });\n    return acc;\n  }, []);\n  return formatted;\n};\n\nexports.formatEditRelationsLayoutWithMetas = formatEditRelationsLayoutWithMetas;\n\nvar formatLayouts = function formatLayouts(initialData, models) {\n  var data = createMetasSchema(initialData, models);\n  var formattedCTEditLayout = formatLayoutWithMetas(data.contentType, null, models);\n  var ctUid = data.contentType.uid;\n  var formattedEditRelationsLayout = formatEditRelationsLayoutWithMetas(data.contentType, models);\n  var formattedListLayout = formatListLayoutWithMetas(data.contentType, models);\n  (0, _lodash.set)(data, ['contentType', 'layouts', 'edit'], formattedCTEditLayout);\n  (0, _lodash.set)(data, ['contentType', 'layouts', 'editRelations'], formattedEditRelationsLayout);\n  (0, _lodash.set)(data, ['contentType', 'layouts', 'list'], formattedListLayout);\n  Object.keys(data.components).forEach(function (compoUID) {\n    var formattedCompoEditLayout = formatLayoutWithMetas(data.components[compoUID], ctUid, models);\n    (0, _lodash.set)(data, ['components', compoUID, 'layouts', 'edit'], formattedCompoEditLayout);\n  });\n  return data;\n};\n\nvar createMetasSchema = function createMetasSchema(initialData, models) {\n  var data = (0, _utils.mergeMetasWithSchema)((0, _lodash.cloneDeep)(initialData), models, 'contentType');\n  var components = data.components,\n      contentType = data.contentType;\n\n  var formatMetadatas = function formatMetadatas(targetSchema) {\n    return Object.keys(targetSchema.metadatas).reduce(function (acc, current) {\n      var schema = (0, _lodash.get)(targetSchema, ['attributes', current], {});\n      var metadatas = targetSchema.metadatas[current];\n\n      if (schema.type === 'relation') {\n        var relationModel = getRelationModel(schema.targetModel, models);\n        var mainFieldName = metadatas.edit.mainField;\n        var mainField = {\n          name: mainFieldName,\n          schema: (0, _lodash.get)(relationModel, ['attributes', mainFieldName])\n        };\n        metadatas = {\n          list: _objectSpread(_objectSpread({}, metadatas.list), {}, {\n            mainField: mainField\n          }),\n          edit: _objectSpread(_objectSpread({}, metadatas.edit), {}, {\n            mainField: mainField\n          })\n        };\n      }\n\n      acc[current] = metadatas;\n      return acc;\n    }, {});\n  };\n\n  (0, _lodash.set)(data, ['contentType', 'metadatas'], formatMetadatas(contentType));\n  Object.keys(components).forEach(function (compoUID) {\n    var currentCompo = components[compoUID];\n    var updatedMetas = formatMetadatas(currentCompo);\n    (0, _lodash.set)(data, ['components', compoUID, 'metadatas'], updatedMetas);\n  });\n  return data;\n};\n\nvar formatLayoutWithMetas = function formatLayoutWithMetas(contentTypeConfiguration, ctUid, models) {\n  var formatted = contentTypeConfiguration.layouts.edit.reduce(function (acc, current) {\n    var row = current.map(function (attribute) {\n      var fieldSchema = (0, _lodash.get)(contentTypeConfiguration, ['attributes', attribute.name], {});\n\n      var data = _objectSpread(_objectSpread({}, attribute), {}, {\n        fieldSchema: fieldSchema,\n        metadatas: (0, _lodash.get)(contentTypeConfiguration, ['metadatas', attribute.name, 'edit'], {})\n      });\n\n      if (fieldSchema.type === 'relation') {\n        var targetModelUID = fieldSchema.targetModel;\n        var targetModelSchema = getRelationModel(targetModelUID, models);\n        var targetModelPluginOptions = targetModelSchema.pluginOptions || {};\n        var queryInfos = ctUid ? generateRelationQueryInfosForComponents(contentTypeConfiguration, attribute.name, ctUid, models) : generateRelationQueryInfos(contentTypeConfiguration, attribute.name, models);\n        (0, _lodash.set)(data, 'targetModelPluginOptions', targetModelPluginOptions);\n        (0, _lodash.set)(data, 'queryInfos', queryInfos);\n      }\n\n      return data;\n    });\n    acc.push(row);\n    return acc;\n  }, []);\n  return formatted;\n};\n\nexports.formatLayoutWithMetas = formatLayoutWithMetas;\n\nvar formatListLayoutWithMetas = function formatListLayoutWithMetas(contentTypeConfiguration) {\n  var formatted = contentTypeConfiguration.layouts.list.reduce(function (acc, current) {\n    var fieldSchema = (0, _lodash.get)(contentTypeConfiguration, ['attributes', current], {});\n    var metadatas = (0, _lodash.get)(contentTypeConfiguration, ['metadatas', current, 'list'], {});\n    var type = fieldSchema.type;\n\n    if (type === 'relation') {\n      var queryInfos = {\n        endPoint: \"collection-types/\".concat(contentTypeConfiguration.uid),\n        defaultParams: {}\n      };\n      acc.push({\n        key: \"__\".concat(current, \"_key__\"),\n        name: current,\n        fieldSchema: fieldSchema,\n        metadatas: metadatas,\n        queryInfos: queryInfos\n      });\n      return acc;\n    }\n\n    acc.push({\n      key: \"__\".concat(current, \"_key__\"),\n      name: current,\n      fieldSchema: fieldSchema,\n      metadatas: metadatas\n    });\n    return acc;\n  }, []);\n  return formatted;\n};\n\nexports.formatListLayoutWithMetas = formatListLayoutWithMetas;\n\nvar generateRelationQueryInfos = function generateRelationQueryInfos(contentTypeConfiguration, fieldName, models) {\n  var uid = contentTypeConfiguration.uid;\n  var endPoint = \"/\".concat(_pluginId[\"default\"], \"/relations/\").concat(uid, \"/\").concat(fieldName);\n  var mainField = (0, _lodash.get)(contentTypeConfiguration, ['metadatas', fieldName, 'edit', 'mainField', 'name'], '');\n  var targetModel = (0, _lodash.get)(contentTypeConfiguration, ['attributes', fieldName, 'targetModel'], '');\n  var shouldDisplayRelationLink = getDisplayedModels(models).indexOf(targetModel) !== -1;\n  var queryInfos = {\n    endPoint: endPoint,\n    containsKey: \"\".concat(mainField, \"_contains\"),\n    defaultParams: {},\n    shouldDisplayRelationLink: shouldDisplayRelationLink\n  };\n  return queryInfos;\n};\n\nexports.generateRelationQueryInfos = generateRelationQueryInfos;\n\nvar generateRelationQueryInfosForComponents = function generateRelationQueryInfosForComponents(contentTypeConfiguration, fieldName, ctUid, models) {\n  var endPoint = \"/\".concat(_pluginId[\"default\"], \"/relations/\").concat(ctUid, \"/\").concat(fieldName);\n  var mainField = (0, _lodash.get)(contentTypeConfiguration, ['metadatas', fieldName, 'edit', 'mainField', 'name'], '');\n  var targetModel = (0, _lodash.get)(contentTypeConfiguration, ['attributes', fieldName, 'targetModel'], '');\n  var shouldDisplayRelationLink = getDisplayedModels(models).indexOf(targetModel) !== -1;\n  var queryInfos = {\n    endPoint: endPoint,\n    containsKey: \"\".concat(mainField, \"_contains\"),\n    defaultParams: {\n      _component: contentTypeConfiguration.uid\n    },\n    shouldDisplayRelationLink: shouldDisplayRelationLink\n  };\n  return queryInfos;\n};\n\nexports.generateRelationQueryInfosForComponents = generateRelationQueryInfosForComponents;\n\nvar getDisplayedModels = function getDisplayedModels(models) {\n  return models.filter(function (model) {\n    return model.isDisplayed;\n  }).map(function (_ref) {\n    var uid = _ref.uid;\n    return uid;\n  });\n};\n\nexports.getDisplayedModels = getDisplayedModels;\nvar _default = formatLayouts;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/hooks/useFetchContentTypeLayout/utils/formatLayouts.js"],"names":["getRelationModel","targetModel","models","find","model","uid","formatEditRelationsLayoutWithMetas","contentTypeConfiguration","formatted","layouts","editRelations","reduce","acc","current","fieldSchema","targetModelUID","targetModelSchema","targetModelPluginOptions","pluginOptions","metadatas","size","queryInfos","generateRelationQueryInfos","push","name","formatLayouts","initialData","data","createMetasSchema","formattedCTEditLayout","formatLayoutWithMetas","contentType","ctUid","formattedEditRelationsLayout","formattedListLayout","formatListLayoutWithMetas","Object","keys","components","forEach","compoUID","formattedCompoEditLayout","formatMetadatas","targetSchema","schema","type","relationModel","mainFieldName","edit","mainField","list","currentCompo","updatedMetas","row","map","attribute","generateRelationQueryInfosForComponents","endPoint","defaultParams","key","fieldName","pluginId","shouldDisplayRelationLink","getDisplayedModels","indexOf","containsKey","_component","filter","isDisplayed"],"mappings":"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","sourcesContent":["import { cloneDeep, get, set } from 'lodash';\nimport { mergeMetasWithSchema } from '../../../utils';\nimport pluginId from '../../../pluginId';\n\nconst getRelationModel = (targetModel, models) => models.find(model => model.uid === targetModel);\n\n// editRelations is an array of strings...\nconst formatEditRelationsLayoutWithMetas = (contentTypeConfiguration, models) => {\n  const formatted = contentTypeConfiguration.layouts.editRelations.reduce((acc, current) => {\n    const fieldSchema = get(contentTypeConfiguration, ['attributes', current], {});\n    const targetModelUID = get(\n      contentTypeConfiguration,\n      ['attributes', current, 'targetModel'],\n      null\n    );\n    const targetModelSchema = getRelationModel(targetModelUID, models);\n    const targetModelPluginOptions = targetModelSchema.pluginOptions || {};\n    const metadatas = get(contentTypeConfiguration, ['metadatas', current, 'edit'], {});\n    const size = 6;\n\n    const queryInfos = generateRelationQueryInfos(contentTypeConfiguration, current, models);\n\n    acc.push({\n      name: current,\n      size,\n      fieldSchema,\n      metadatas,\n      queryInfos,\n      targetModelPluginOptions,\n    });\n\n    return acc;\n  }, []);\n\n  return formatted;\n};\n\nconst formatLayouts = (initialData, models) => {\n  const data = createMetasSchema(initialData, models);\n\n  const formattedCTEditLayout = formatLayoutWithMetas(data.contentType, null, models);\n  const ctUid = data.contentType.uid;\n  const formattedEditRelationsLayout = formatEditRelationsLayoutWithMetas(data.contentType, models);\n  const formattedListLayout = formatListLayoutWithMetas(data.contentType, models);\n\n  set(data, ['contentType', 'layouts', 'edit'], formattedCTEditLayout);\n  set(data, ['contentType', 'layouts', 'editRelations'], formattedEditRelationsLayout);\n  set(data, ['contentType', 'layouts', 'list'], formattedListLayout);\n\n  Object.keys(data.components).forEach(compoUID => {\n    const formattedCompoEditLayout = formatLayoutWithMetas(\n      data.components[compoUID],\n      ctUid,\n      models\n    );\n\n    set(data, ['components', compoUID, 'layouts', 'edit'], formattedCompoEditLayout);\n  });\n\n  return data;\n};\n\nconst createMetasSchema = (initialData, models) => {\n  const data = mergeMetasWithSchema(cloneDeep(initialData), models, 'contentType');\n  const { components, contentType } = data;\n\n  const formatMetadatas = targetSchema => {\n    return Object.keys(targetSchema.metadatas).reduce((acc, current) => {\n      const schema = get(targetSchema, ['attributes', current], {});\n      let metadatas = targetSchema.metadatas[current];\n\n      if (schema.type === 'relation') {\n        const relationModel = getRelationModel(schema.targetModel, models);\n        const mainFieldName = metadatas.edit.mainField;\n        const mainField = {\n          name: mainFieldName,\n          schema: get(relationModel, ['attributes', mainFieldName]),\n        };\n\n        metadatas = {\n          list: {\n            ...metadatas.list,\n            mainField,\n          },\n          edit: {\n            ...metadatas.edit,\n            mainField,\n          },\n        };\n      }\n\n      acc[current] = metadatas;\n\n      return acc;\n    }, {});\n  };\n\n  set(data, ['contentType', 'metadatas'], formatMetadatas(contentType));\n\n  Object.keys(components).forEach(compoUID => {\n    const currentCompo = components[compoUID];\n    const updatedMetas = formatMetadatas(currentCompo);\n\n    set(data, ['components', compoUID, 'metadatas'], updatedMetas);\n  });\n\n  return data;\n};\n\nconst formatLayoutWithMetas = (contentTypeConfiguration, ctUid, models) => {\n  const formatted = contentTypeConfiguration.layouts.edit.reduce((acc, current) => {\n    const row = current.map(attribute => {\n      const fieldSchema = get(contentTypeConfiguration, ['attributes', attribute.name], {});\n\n      const data = {\n        ...attribute,\n        fieldSchema,\n        metadatas: get(contentTypeConfiguration, ['metadatas', attribute.name, 'edit'], {}),\n      };\n\n      if (fieldSchema.type === 'relation') {\n        const targetModelUID = fieldSchema.targetModel;\n        const targetModelSchema = getRelationModel(targetModelUID, models);\n        const targetModelPluginOptions = targetModelSchema.pluginOptions || {};\n\n        const queryInfos = ctUid\n          ? generateRelationQueryInfosForComponents(\n              contentTypeConfiguration,\n              attribute.name,\n              ctUid,\n              models\n            )\n          : generateRelationQueryInfos(contentTypeConfiguration, attribute.name, models);\n\n        set(data, 'targetModelPluginOptions', targetModelPluginOptions);\n        set(data, 'queryInfos', queryInfos);\n      }\n\n      return data;\n    });\n\n    acc.push(row);\n\n    return acc;\n  }, []);\n\n  return formatted;\n};\n\nconst formatListLayoutWithMetas = contentTypeConfiguration => {\n  const formatted = contentTypeConfiguration.layouts.list.reduce((acc, current) => {\n    const fieldSchema = get(contentTypeConfiguration, ['attributes', current], {});\n    const metadatas = get(contentTypeConfiguration, ['metadatas', current, 'list'], {});\n\n    const type = fieldSchema.type;\n\n    if (type === 'relation') {\n      const queryInfos = {\n        endPoint: `collection-types/${contentTypeConfiguration.uid}`,\n        defaultParams: {},\n      };\n\n      acc.push({ key: `__${current}_key__`, name: current, fieldSchema, metadatas, queryInfos });\n\n      return acc;\n    }\n\n    acc.push({ key: `__${current}_key__`, name: current, fieldSchema, metadatas });\n\n    return acc;\n  }, []);\n\n  return formatted;\n};\n\nconst generateRelationQueryInfos = (contentTypeConfiguration, fieldName, models) => {\n  const uid = contentTypeConfiguration.uid;\n  const endPoint = `/${pluginId}/relations/${uid}/${fieldName}`;\n  const mainField = get(\n    contentTypeConfiguration,\n    ['metadatas', fieldName, 'edit', 'mainField', 'name'],\n    ''\n  );\n  const targetModel = get(contentTypeConfiguration, ['attributes', fieldName, 'targetModel'], '');\n  const shouldDisplayRelationLink = getDisplayedModels(models).indexOf(targetModel) !== -1;\n\n  const queryInfos = {\n    endPoint,\n    containsKey: `${mainField}_contains`,\n    defaultParams: {},\n    shouldDisplayRelationLink,\n  };\n\n  return queryInfos;\n};\n\nconst generateRelationQueryInfosForComponents = (\n  contentTypeConfiguration,\n  fieldName,\n  ctUid,\n  models\n) => {\n  const endPoint = `/${pluginId}/relations/${ctUid}/${fieldName}`;\n  const mainField = get(\n    contentTypeConfiguration,\n    ['metadatas', fieldName, 'edit', 'mainField', 'name'],\n    ''\n  );\n  const targetModel = get(contentTypeConfiguration, ['attributes', fieldName, 'targetModel'], '');\n  const shouldDisplayRelationLink = getDisplayedModels(models).indexOf(targetModel) !== -1;\n\n  const queryInfos = {\n    endPoint,\n    containsKey: `${mainField}_contains`,\n    defaultParams: {\n      _component: contentTypeConfiguration.uid,\n    },\n    shouldDisplayRelationLink,\n  };\n\n  return queryInfos;\n};\n\nconst getDisplayedModels = models =>\n  models.filter(model => model.isDisplayed).map(({ uid }) => uid);\n\nexport default formatLayouts;\nexport {\n  formatEditRelationsLayoutWithMetas,\n  formatLayoutWithMetas,\n  formatListLayoutWithMetas,\n  generateRelationQueryInfos,\n  generateRelationQueryInfosForComponents,\n  getDisplayedModels,\n};\n"]},"metadata":{},"sourceType":"script"}