{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar extendCTBAttributeInitialDataMiddleware = function extendCTBAttributeInitialDataMiddleware() {\n  return function (_ref) {\n    var getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        var enhanceAction = function enhanceAction() {\n          // the block here is to catch the error when trying to access the state\n          // of the ctb when the plugin is not mounted\n          try {\n            var hasi18nEnabled = getState().getIn(['content-type-builder_dataManagerProvider', 'modifiedData', 'contentType', 'schema', 'pluginOptions', 'i18n', 'localized']);\n\n            if (hasi18nEnabled) {\n              var pluginOptions = action.options ? _objectSpread(_objectSpread({}, action.options.pluginOptions), {}, {\n                i18n: {\n                  localized: true\n                }\n              }) : {\n                i18n: {\n                  localized: true\n                }\n              };\n              return next(_objectSpread(_objectSpread({}, action), {}, {\n                options: {\n                  pluginOptions: pluginOptions\n                }\n              }));\n            }\n\n            return next(action);\n          } catch (err) {\n            return next(action);\n          }\n        };\n\n        if (action.type === 'ContentTypeBuilder/FormModal/SET_ATTRIBUTE_DATA_SCHEMA' && action.forTarget === 'contentType' && !['relation', 'component'].includes(action.attributeType) && !action.isEditing) {\n          return enhanceAction();\n        }\n\n        if ((action.type === 'ContentTypeBuilder/FormModal/RESET_PROPS_AND_SET_FORM_FOR_ADDING_AN_EXISTING_COMPO' || action.type === 'ContentTypeBuilder/FormModal/RESET_PROPS_AND_SAVE_CURRENT_DATA') && action.forTarget === 'contentType') {\n          return enhanceAction();\n        }\n\n        return next(action);\n      };\n    };\n  };\n};\n\nvar _default = extendCTBAttributeInitialDataMiddleware;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/middlewares/extendCTBAttributeInitialDataMiddleware.js"],"names":["extendCTBAttributeInitialDataMiddleware","getState","next","action","enhanceAction","hasi18nEnabled","getIn","pluginOptions","options","i18n","localized","err","type","forTarget","includes","attributeType","isEditing"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAMA,uCAAuC,GAAG,SAA1CA,uCAA0C,GAAM;AACpD,SAAO;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,WAAkB,UAAAC,IAAI;AAAA,aAAI,UAAAC,MAAM,EAAI;AACzC,YAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B;AACA;AACA,cAAI;AACF,gBAAMC,cAAc,GAAGJ,QAAQ,GAAGK,KAAX,CAAiB,CACtC,0CADsC,EAEtC,cAFsC,EAGtC,aAHsC,EAItC,QAJsC,EAKtC,eALsC,EAMtC,MANsC,EAOtC,WAPsC,CAAjB,CAAvB;;AAUA,gBAAID,cAAJ,EAAoB;AAClB,kBAAME,aAAa,GAAGJ,MAAM,CAACK,OAAP,mCACbL,MAAM,CAACK,OAAP,CAAeD,aADF;AACiBE,gBAAAA,IAAI,EAAE;AAAEC,kBAAAA,SAAS,EAAE;AAAb;AADvB,mBAElB;AAAED,gBAAAA,IAAI,EAAE;AAAEC,kBAAAA,SAAS,EAAE;AAAb;AAAR,eAFJ;AAIA,qBAAOR,IAAI,iCACNC,MADM;AAETK,gBAAAA,OAAO,EAAE;AACPD,kBAAAA,aAAa,EAAbA;AADO;AAFA,iBAAX;AAMD;;AAED,mBAAOL,IAAI,CAACC,MAAD,CAAX;AACD,WAzBD,CAyBE,OAAOQ,GAAP,EAAY;AACZ,mBAAOT,IAAI,CAACC,MAAD,CAAX;AACD;AACF,SA/BD;;AAiCA,YACEA,MAAM,CAACS,IAAP,KAAgB,wDAAhB,IACAT,MAAM,CAACU,SAAP,KAAqB,aADrB,IAEA,CAAC,CAAC,UAAD,EAAa,WAAb,EAA0BC,QAA1B,CAAmCX,MAAM,CAACY,aAA1C,CAFD,IAGA,CAACZ,MAAM,CAACa,SAJV,EAKE;AACA,iBAAOZ,aAAa,EAApB;AACD;;AAED,YACE,CAACD,MAAM,CAACS,IAAP,KACC,oFADD,IAECT,MAAM,CAACS,IAAP,KAAgB,gEAFlB,KAGAT,MAAM,CAACU,SAAP,KAAqB,aAJvB,EAKE;AACA,iBAAOT,aAAa,EAApB;AACD;;AAED,eAAOF,IAAI,CAACC,MAAD,CAAX;AACD,OArD4B;AAAA,KAAtB;AAAA,GAAP;AAsDD,CAvDD;;eAyDeH,uC","sourcesContent":["const extendCTBAttributeInitialDataMiddleware = () => {\n  return ({ getState }) => next => action => {\n    const enhanceAction = () => {\n      // the block here is to catch the error when trying to access the state\n      // of the ctb when the plugin is not mounted\n      try {\n        const hasi18nEnabled = getState().getIn([\n          'content-type-builder_dataManagerProvider',\n          'modifiedData',\n          'contentType',\n          'schema',\n          'pluginOptions',\n          'i18n',\n          'localized',\n        ]);\n\n        if (hasi18nEnabled) {\n          const pluginOptions = action.options\n            ? { ...action.options.pluginOptions, i18n: { localized: true } }\n            : { i18n: { localized: true } };\n\n          return next({\n            ...action,\n            options: {\n              pluginOptions,\n            },\n          });\n        }\n\n        return next(action);\n      } catch (err) {\n        return next(action);\n      }\n    };\n\n    if (\n      action.type === 'ContentTypeBuilder/FormModal/SET_ATTRIBUTE_DATA_SCHEMA' &&\n      action.forTarget === 'contentType' &&\n      !['relation', 'component'].includes(action.attributeType) &&\n      !action.isEditing\n    ) {\n      return enhanceAction();\n    }\n\n    if (\n      (action.type ===\n        'ContentTypeBuilder/FormModal/RESET_PROPS_AND_SET_FORM_FOR_ADDING_AN_EXISTING_COMPO' ||\n        action.type === 'ContentTypeBuilder/FormModal/RESET_PROPS_AND_SAVE_CURRENT_DATA') &&\n      action.forTarget === 'contentType'\n    ) {\n      return enhanceAction();\n    }\n\n    return next(action);\n  };\n};\n\nexport default extendCTBAttributeInitialDataMiddleware;\n"]},"metadata":{},"sourceType":"script"}