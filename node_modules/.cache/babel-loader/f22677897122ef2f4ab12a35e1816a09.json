{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactCopyToClipboard = require(\"react-copy-to-clipboard\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactstrap = require(\"reactstrap\");\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _cropperjs = _interopRequireDefault(require(\"cropperjs\"));\n\nrequire(\"cropperjs/dist/cropper.css\");\n\nvar _utils = require(\"../../utils\");\n\nvar _CardControl = _interopRequireDefault(require(\"../CardControl\"));\n\nvar _CardControlsWrapper = _interopRequireDefault(require(\"../CardControlsWrapper\"));\n\nvar _CardPreview = _interopRequireDefault(require(\"../CardPreview\"));\n\nvar _InfiniteLoadingIndicator = _interopRequireDefault(require(\"../InfiniteLoadingIndicator\"));\n\nvar _ModalSection = _interopRequireDefault(require(\"../ModalSection\"));\n\nvar _VideoPlayer = _interopRequireDefault(require(\"../VideoPlayer\"));\n\nvar _CropWrapper = _interopRequireDefault(require(\"./CropWrapper\"));\n\nvar _FileDetailsBox = _interopRequireDefault(require(\"./FileDetailsBox\"));\n\nvar _FileWrapper = _interopRequireDefault(require(\"./FileWrapper\"));\n\nvar _FormWrapper = _interopRequireDefault(require(\"./FormWrapper\"));\n\nvar _SizeBox = _interopRequireDefault(require(\"./SizeBox\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nvar _ErrorMessage = _interopRequireDefault(require(\"./ErrorMessage\"));\n\nvar _form = _interopRequireDefault(require(\"./utils/form\"));\n\nvar _isImageType = _interopRequireDefault(require(\"./utils/isImageType\"));\n\nvar _isVideoType = _interopRequireDefault(require(\"./utils/isVideoType\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable react/jsx-fragments */\nvar EditForm = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {\n  var canCopyLink = _ref.canCopyLink,\n      canDownload = _ref.canDownload,\n      components = _ref.components,\n      fileToEdit = _ref.fileToEdit,\n      isEditingUploadedFile = _ref.isEditingUploadedFile,\n      isFormDisabled = _ref.isFormDisabled,\n      onAbortUpload = _ref.onAbortUpload,\n      onChange = _ref.onChange,\n      onClickDeleteFileToUpload = _ref.onClickDeleteFileToUpload,\n      onSubmitEdit = _ref.onSubmitEdit,\n      setCropResult = _ref.setCropResult,\n      toggleDisableForm = _ref.toggleDisableForm;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      formatMessage = _useGlobalContext.formatMessage;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isCropping = _useState2[0],\n      setIsCropping = _useState2[1];\n\n  var _useState3 = (0, _react.useState)({\n    width: null,\n    height: null\n  }),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      infos = _useState4[0],\n      setInfos = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(null),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      src = _useState6[0],\n      setSrc = _useState6[1];\n\n  var cacheRef = (0, _react.useRef)(performance.now());\n  var fileURL = (0, _lodash.get)(fileToEdit, ['file', 'url'], null);\n  var prefixedFileURL = fileURL ? (0, _strapiHelperPlugin.prefixFileUrlWithBackendUrl)(\"\".concat(fileURL, \"?\").concat(cacheRef.current)) : null;\n  var downloadFileName = (0, _utils.createFileToDownloadName)(fileToEdit);\n  var mimeType = (0, _lodash.get)(fileToEdit, ['file', 'type'], null) || (0, _lodash.get)(fileToEdit, ['file', 'mime'], '');\n  var isImg = (0, _isImageType[\"default\"])(mimeType);\n  var isVideo = (0, _isVideoType[\"default\"])(mimeType);\n  var canCrop = isImg && !mimeType.includes('svg') && !mimeType.includes('gif');\n  var aRef = (0, _react.useRef)();\n  var imgRef = (0, _react.useRef)();\n  var inputRef = (0, _react.useRef)();\n  var cropper = (0, _react.useRef)();\n  (0, _react.useImperativeHandle)(ref, function () {\n    return {\n      click: function click() {\n        inputRef.current.click();\n        setIsCropping(false);\n      }\n    };\n  });\n  (0, _react.useEffect)(function () {\n    if (isImg || isVideo) {\n      if (prefixedFileURL) {\n        setSrc(prefixedFileURL);\n      } else {\n        setSrc(URL.createObjectURL(fileToEdit.file));\n      }\n    }\n  }, [isImg, isVideo, fileToEdit, prefixedFileURL]);\n  (0, _react.useEffect)(function () {\n    if (isCropping) {\n      cropper.current = new _cropperjs[\"default\"](imgRef.current, {\n        modal: true,\n        initialAspectRatio: 16 / 9,\n        movable: true,\n        zoomable: false,\n        cropBoxResizable: true,\n        background: false,\n        crop: handleResize\n      });\n    } else if (cropper.current) {\n      cropper.current.destroy();\n      setInfos({\n        width: null,\n        height: null\n      });\n      toggleDisableForm(false);\n    }\n\n    return function () {\n      if (cropper.current) {\n        cropper.current.destroy();\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cropper, isCropping]);\n\n  var handleResize = function handleResize(_ref2) {\n    var _ref2$detail = _ref2.detail,\n        height = _ref2$detail.height,\n        width = _ref2$detail.width;\n    var roundedDataHeight = Math.round(height);\n    var roundedDataWidth = Math.round(width);\n    setInfos({\n      width: roundedDataWidth,\n      height: roundedDataHeight\n    });\n  };\n\n  var handleToggleCropMode = function handleToggleCropMode() {\n    setIsCropping(function (prev) {\n      if (!prev && isEditingUploadedFile) {\n        toggleDisableForm(true);\n      }\n\n      return !prev;\n    });\n  };\n\n  var handleChange = function handleChange(_ref3) {\n    var files = _ref3.target.files;\n\n    if (files[0]) {\n      onChange({\n        target: {\n          name: 'file',\n          value: files[0]\n        }\n      });\n    }\n  };\n\n  var handleClick = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var cropResult;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getCroppedResult();\n\n            case 2:\n              cropResult = _context.sent;\n              setCropResult(cropResult);\n              setIsCropping(false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleClick() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var getCroppedResult = function getCroppedResult() {\n    return new Promise(function (resolve, reject) {\n      try {\n        var canvas = cropper.current.getCroppedCanvas();\n        canvas.toBlob( /*#__PURE__*/function () {\n          var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(blob) {\n            var _fileToEdit$file, lastModifiedDate, lastModified, name;\n\n            return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _fileToEdit$file = fileToEdit.file, lastModifiedDate = _fileToEdit$file.lastModifiedDate, lastModified = _fileToEdit$file.lastModified, name = _fileToEdit$file.name;\n                    resolve(new File([blob], name, {\n                      type: mimeType,\n                      lastModified: lastModified,\n                      lastModifiedDate: lastModifiedDate\n                    }));\n\n                  case 2:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x) {\n            return _ref5.apply(this, arguments);\n          };\n        }(), mimeType, 1);\n      } catch (err) {\n        reject();\n      }\n    });\n  };\n\n  var handleClickEditCroppedFile = /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(e) {\n      var shouldDuplicate,\n          file,\n          _args3 = arguments;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              shouldDuplicate = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : false;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return getCroppedResult();\n\n            case 4:\n              file = _context3.sent;\n              onSubmitEdit(e, shouldDuplicate, file, true);\n              _context3.next = 10;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n\n            case 10:\n              _context3.prev = 10;\n              setIsCropping(false);\n              return _context3.finish(10);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8, 10, 13]]);\n    }));\n\n    return function handleClickEditCroppedFile(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var handleClickDelete = function handleClickDelete() {\n    onClickDeleteFileToUpload(fileToEdit.originalIndex);\n  };\n\n  var handleCopy = function handleCopy() {\n    strapi.notification.toggle({\n      type: 'info',\n      message: {\n        id: 'notification.link-copied'\n      }\n    });\n  };\n\n  var handleClickDownload = function handleClickDownload() {\n    _axios[\"default\"].get((0, _strapiHelperPlugin.prefixFileUrlWithBackendUrl)(fileURL), {\n      responseType: 'blob'\n    }).then(function (_ref7) {\n      var data = _ref7.data;\n      var blobUrl = URL.createObjectURL(data);\n      aRef.current.download = downloadFileName;\n      aRef.current.href = blobUrl;\n      aRef.current.click();\n    })[\"catch\"](function (err) {\n      console.error(err);\n    });\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    onSubmitEdit(e);\n  };\n\n  var CheckButton = components.CheckControl;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/_react[\"default\"].createElement(_ModalSection[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"row\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_FileWrapper[\"default\"], {\n    hasError: fileToEdit.hasError\n  }, fileToEdit.isUploading ? /*#__PURE__*/_react[\"default\"].createElement(_InfiniteLoadingIndicator[\"default\"], {\n    onClick: onAbortUpload\n  }) : /*#__PURE__*/_react[\"default\"].createElement(_react.Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_CardControlsWrapper[\"default\"], {\n    className: \"card-control-wrapper-displayed\"\n  }, !isCropping ? /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_CardControl[\"default\"], {\n    color: \"#9EA7B8\",\n    type: \"trash-alt\",\n    onClick: handleClickDelete,\n    title: \"delete\"\n  }), fileURL && /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, canDownload && /*#__PURE__*/_react[\"default\"].createElement(_CardControl[\"default\"], {\n    color: \"#9EA7B8\",\n    onClick: handleClickDownload,\n    type: \"download\",\n    title: \"download\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n    title: fileToEdit.fileInfo.name,\n    style: {\n      display: 'none'\n    },\n    ref: aRef\n  }, \"hidden\"), canCopyLink && /*#__PURE__*/_react[\"default\"].createElement(_reactCopyToClipboard.CopyToClipboard, {\n    onCopy: handleCopy,\n    text: (0, _strapiHelperPlugin.prefixFileUrlWithBackendUrl)(fileURL)\n  }, /*#__PURE__*/_react[\"default\"].createElement(_CardControl[\"default\"], {\n    color: \"#9EA7B8\",\n    type: \"link\",\n    title: \"copy-link\"\n  }))), canCrop && /*#__PURE__*/_react[\"default\"].createElement(_CardControl[\"default\"], {\n    color: \"#9EA7B8\",\n    onClick: handleToggleCropMode,\n    type: \"crop\",\n    title: \"crop\"\n  })) : /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_CardControl[\"default\"], {\n    color: \"#F64D0A\",\n    onClick: handleToggleCropMode,\n    type: \"times\",\n    title: \"cancel\",\n    iconStyle: {\n      height: '1.6rem',\n      width: '1.6rem'\n    }\n  }), /*#__PURE__*/_react[\"default\"].createElement(CheckButton, {\n    color: \"#6DBB1A\",\n    onClick: handleClick,\n    onSubmitEdit: handleClickEditCroppedFile,\n    type: \"check\",\n    title: \"save\"\n  }))), isImg ? /*#__PURE__*/_react[\"default\"].createElement(_CropWrapper[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(\"img\", {\n    src: src,\n    alt: (0, _lodash.get)(fileToEdit, ['file', 'name'], ''),\n    ref: isCropping ? imgRef : null\n  })) : /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, isVideo ? /*#__PURE__*/_react[\"default\"].createElement(_VideoPlayer[\"default\"], {\n    src: src\n  }) : /*#__PURE__*/_react[\"default\"].createElement(_CardPreview[\"default\"], {\n    type: mimeType,\n    url: src\n  })), isCropping && infos.width !== null && /*#__PURE__*/_react[\"default\"].createElement(_SizeBox[\"default\"], null, \"\\xA0\", infos.width, \" x \", infos.height, \"\\xA0\"))), fileToEdit.hasError && /*#__PURE__*/_react[\"default\"].createElement(_ErrorMessage[\"default\"], {\n    title: fileToEdit.errorMessage\n  }, fileToEdit.errorMessage)), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_FileDetailsBox[\"default\"], {\n    file: fileToEdit.file\n  }), /*#__PURE__*/_react[\"default\"].createElement(_FormWrapper[\"default\"], null, _form[\"default\"].map(function (_ref8) {\n    var key = _ref8.key,\n        inputs = _ref8.inputs;\n    return /*#__PURE__*/_react[\"default\"].createElement(_reactstrap.Row, {\n      key: key\n    }, inputs.map(function (input) {\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"col-12\",\n        key: input.name\n      }, /*#__PURE__*/_react[\"default\"].createElement(_custom.Inputs, (0, _extends2[\"default\"])({}, input, {\n        disabled: isFormDisabled,\n        description: input.description ? formatMessage(input.description) : null,\n        label: formatMessage(input.label),\n        onChange: onChange,\n        type: \"text\",\n        value: (0, _lodash.get)(fileToEdit, input.name, '')\n      })));\n    }));\n  }))))), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n    ref: inputRef,\n    type: \"file\",\n    multiple: false,\n    onChange: handleChange,\n    style: {\n      display: 'none'\n    },\n    accept: mimeType.split('/').map(function (v, i) {\n      if (i === 1) {\n        return '*';\n      }\n\n      return v;\n    }).join('/')\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      display: 'none'\n    }\n  }, \"hidden button to make to get the native form event\")));\n});\nEditForm.defaultProps = {\n  canCopyLink: true,\n  canDownload: true,\n  components: {\n    CheckControl: _CardControl[\"default\"]\n  },\n  fileToEdit: null,\n  isEditingUploadedFile: false,\n  isFormDisabled: false,\n  onAbortUpload: function onAbortUpload() {},\n  onChange: function onChange() {},\n  onClickDeleteFileToUpload: function onClickDeleteFileToUpload() {},\n  onSubmitEdit: function onSubmitEdit(e) {\n    return e.preventDefault();\n  },\n  setCropResult: function setCropResult() {},\n  toggleDisableForm: function toggleDisableForm() {}\n};\nEditForm.propTypes = {\n  canCopyLink: _propTypes[\"default\"].bool,\n  canDownload: _propTypes[\"default\"].bool,\n  onAbortUpload: _propTypes[\"default\"].func,\n  components: _propTypes[\"default\"].object,\n  fileToEdit: _propTypes[\"default\"].object,\n  isEditingUploadedFile: _propTypes[\"default\"].bool,\n  isFormDisabled: _propTypes[\"default\"].bool,\n  onChange: _propTypes[\"default\"].func,\n  onClickDeleteFileToUpload: _propTypes[\"default\"].func,\n  onSubmitEdit: _propTypes[\"default\"].func,\n  setCropResult: _propTypes[\"default\"].func,\n  toggleDisableForm: _propTypes[\"default\"].func\n};\nvar _default = EditForm;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/components/EditForm/index.js"],"names":["EditForm","ref","canCopyLink","canDownload","components","fileToEdit","isEditingUploadedFile","isFormDisabled","onAbortUpload","onChange","onClickDeleteFileToUpload","onSubmitEdit","setCropResult","toggleDisableForm","formatMessage","isCropping","setIsCropping","width","height","infos","setInfos","src","setSrc","cacheRef","performance","now","fileURL","prefixedFileURL","current","downloadFileName","mimeType","isImg","isVideo","canCrop","includes","aRef","imgRef","inputRef","cropper","click","URL","createObjectURL","file","Cropper","modal","initialAspectRatio","movable","zoomable","cropBoxResizable","background","crop","handleResize","destroy","detail","roundedDataHeight","Math","round","roundedDataWidth","handleToggleCropMode","prev","handleChange","files","target","name","value","handleClick","getCroppedResult","cropResult","Promise","resolve","reject","canvas","getCroppedCanvas","toBlob","blob","lastModifiedDate","lastModified","File","type","err","handleClickEditCroppedFile","e","shouldDuplicate","handleClickDelete","originalIndex","handleCopy","strapi","notification","toggle","message","id","handleClickDownload","axios","get","responseType","then","data","blobUrl","download","href","console","error","handleSubmit","preventDefault","CheckButton","CheckControl","hasError","isUploading","fileInfo","display","errorMessage","form","map","key","inputs","input","description","label","split","v","i","join","defaultProps","CardControl","propTypes","PropTypes","bool","func","object"],"mappings":";;;;;;;;;;;;;;;;;;;AAEA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAnCA;;AACA;AAoCA,IAAMA,QAAQ,gBAAG,uBACf,gBAeEC,GAfF,EAgBK;AAAA,MAdDC,WAcC,QAdDA,WAcC;AAAA,MAbDC,WAaC,QAbDA,WAaC;AAAA,MAZDC,UAYC,QAZDA,UAYC;AAAA,MAXDC,UAWC,QAXDA,UAWC;AAAA,MAVDC,qBAUC,QAVDA,qBAUC;AAAA,MATDC,cASC,QATDA,cASC;AAAA,MARDC,aAQC,QARDA,aAQC;AAAA,MAPDC,QAOC,QAPDA,QAOC;AAAA,MANDC,yBAMC,QANDA,yBAMC;AAAA,MALDC,YAKC,QALDA,YAKC;AAAA,MAJDC,aAIC,QAJDA,aAIC;AAAA,MAHDC,iBAGC,QAHDA,iBAGC;;AACH,0BAA0B,2CAA1B;AAAA,MAAQC,aAAR,qBAAQA,aAAR;;AACA,kBAAoC,qBAAS,KAAT,CAApC;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA0B,qBAAS;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAAT,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAsB,qBAAS,IAAT,CAAtB;AAAA;AAAA,MAAOC,GAAP;AAAA,MAAYC,MAAZ;;AACA,MAAMC,QAAQ,GAAG,mBAAOC,WAAW,CAACC,GAAZ,EAAP,CAAjB;AAEA,MAAMC,OAAO,GAAG,iBAAIrB,UAAJ,EAAgB,CAAC,MAAD,EAAS,KAAT,CAAhB,EAAiC,IAAjC,CAAhB;AACA,MAAMsB,eAAe,GAAGD,OAAO,GAC3B,+DAA+BA,OAA/B,cAA0CH,QAAQ,CAACK,OAAnD,EAD2B,GAE3B,IAFJ;AAGA,MAAMC,gBAAgB,GAAG,qCAAyBxB,UAAzB,CAAzB;AACA,MAAMyB,QAAQ,GACZ,iBAAIzB,UAAJ,EAAgB,CAAC,MAAD,EAAS,MAAT,CAAhB,EAAkC,IAAlC,KAA2C,iBAAIA,UAAJ,EAAgB,CAAC,MAAD,EAAS,MAAT,CAAhB,EAAkC,EAAlC,CAD7C;AAEA,MAAM0B,KAAK,GAAG,6BAAYD,QAAZ,CAAd;AACA,MAAME,OAAO,GAAG,6BAAYF,QAAZ,CAAhB;AACA,MAAMG,OAAO,GAAGF,KAAK,IAAI,CAACD,QAAQ,CAACI,QAAT,CAAkB,KAAlB,CAAV,IAAsC,CAACJ,QAAQ,CAACI,QAAT,CAAkB,KAAlB,CAAvD;AACA,MAAMC,IAAI,GAAG,oBAAb;AACA,MAAMC,MAAM,GAAG,oBAAf;AACA,MAAMC,QAAQ,GAAG,oBAAjB;AACA,MAAMC,OAAO,GAAG,oBAAhB;AAEA,kCAAoBrC,GAApB,EAAyB;AAAA,WAAO;AAC9BsC,MAAAA,KAAK,EAAE,iBAAM;AACXF,QAAAA,QAAQ,CAACT,OAAT,CAAiBW,KAAjB;AACAvB,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AAJ6B,KAAP;AAAA,GAAzB;AAOA,wBAAU,YAAM;AACd,QAAIe,KAAK,IAAIC,OAAb,EAAsB;AACpB,UAAIL,eAAJ,EAAqB;AACnBL,QAAAA,MAAM,CAACK,eAAD,CAAN;AACD,OAFD,MAEO;AACLL,QAAAA,MAAM,CAACkB,GAAG,CAACC,eAAJ,CAAoBpC,UAAU,CAACqC,IAA/B,CAAD,CAAN;AACD;AACF;AACF,GARD,EAQG,CAACX,KAAD,EAAQC,OAAR,EAAiB3B,UAAjB,EAA6BsB,eAA7B,CARH;AAUA,wBAAU,YAAM;AACd,QAAIZ,UAAJ,EAAgB;AACduB,MAAAA,OAAO,CAACV,OAAR,GAAkB,IAAIe,qBAAJ,CAAYP,MAAM,CAACR,OAAnB,EAA4B;AAC5CgB,QAAAA,KAAK,EAAE,IADqC;AAE5CC,QAAAA,kBAAkB,EAAE,KAAK,CAFmB;AAG5CC,QAAAA,OAAO,EAAE,IAHmC;AAI5CC,QAAAA,QAAQ,EAAE,KAJkC;AAK5CC,QAAAA,gBAAgB,EAAE,IAL0B;AAM5CC,QAAAA,UAAU,EAAE,KANgC;AAO5CC,QAAAA,IAAI,EAAEC;AAPsC,OAA5B,CAAlB;AASD,KAVD,MAUO,IAAIb,OAAO,CAACV,OAAZ,EAAqB;AAC1BU,MAAAA,OAAO,CAACV,OAAR,CAAgBwB,OAAhB;AAEAhC,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,MAAM,EAAE;AAAvB,OAAD,CAAR;AACAL,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;;AAED,WAAO,YAAM;AACX,UAAIyB,OAAO,CAACV,OAAZ,EAAqB;AACnBU,QAAAA,OAAO,CAACV,OAAR,CAAgBwB,OAAhB;AACD;AACF,KAJD,CAlBc,CAuBd;AACD,GAxBD,EAwBG,CAACd,OAAD,EAAUvB,UAAV,CAxBH;;AA0BA,MAAMoC,YAAY,GAAG,SAAfA,YAAe,QAAmC;AAAA,6BAAhCE,MAAgC;AAAA,QAAtBnC,MAAsB,gBAAtBA,MAAsB;AAAA,QAAdD,KAAc,gBAAdA,KAAc;AACtD,QAAMqC,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWtC,MAAX,CAA1B;AACA,QAAMuC,gBAAgB,GAAGF,IAAI,CAACC,KAAL,CAAWvC,KAAX,CAAzB;AAEAG,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,KAAK,EAAEwC,gBAAT;AAA2BvC,MAAAA,MAAM,EAAEoC;AAAnC,KAAD,CAAR;AACD,GALD;;AAOA,MAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjC1C,IAAAA,aAAa,CAAC,UAAA2C,IAAI,EAAI;AACpB,UAAI,CAACA,IAAD,IAASrD,qBAAb,EAAoC;AAClCO,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;;AAED,aAAO,CAAC8C,IAAR;AACD,KANY,CAAb;AAOD,GARD;;AAUA,MAAMC,YAAY,GAAG,SAAfA,YAAe,QAA2B;AAAA,QAAdC,KAAc,SAAxBC,MAAwB,CAAdD,KAAc;;AAC9C,QAAIA,KAAK,CAAC,CAAD,CAAT,EAAc;AACZpD,MAAAA,QAAQ,CAAC;AAAEqD,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,KAAK,EAAEH,KAAK,CAAC,CAAD;AAA5B;AAAV,OAAD,CAAR;AACD;AACF,GAJD;;AAMA,MAAMI,WAAW;AAAA,8FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOC,gBAAgB,EADvB;;AAAA;AACZC,cAAAA,UADY;AAGlBvD,cAAAA,aAAa,CAACuD,UAAD,CAAb;AAEAnD,cAAAA,aAAa,CAAC,KAAD,CAAb;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXiD,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAQA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,WAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAI;AACF,YAAMC,MAAM,GAAGjC,OAAO,CAACV,OAAR,CAAgB4C,gBAAhB,EAAf;AAEAD,QAAAA,MAAM,CAACE,MAAP;AAAA,oGACE,kBAAMC,IAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uCAGMrE,UAHN,CAEIqC,IAFJ,EAEYiC,gBAFZ,oBAEYA,gBAFZ,EAE8BC,YAF9B,oBAE8BA,YAF9B,EAE4Cb,IAF5C,oBAE4CA,IAF5C;AAKEM,oBAAAA,OAAO,CACL,IAAIQ,IAAJ,CAAS,CAACH,IAAD,CAAT,EAAiBX,IAAjB,EAAuB;AACrBe,sBAAAA,IAAI,EAAEhD,QADe;AAErB8C,sBAAAA,YAAY,EAAZA,YAFqB;AAGrBD,sBAAAA,gBAAgB,EAAhBA;AAHqB,qBAAvB,CADK,CAAP;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;;AAAA;AAAA;AAAA;AAAA,aAcE7C,QAdF,EAeE,CAfF;AAiBD,OApBD,CAoBE,OAAOiD,GAAP,EAAY;AACZT,QAAAA,MAAM;AACP;AACF,KAxBM,CAAP;AAyBD,GA1BD;;AA4BA,MAAMU,0BAA0B;AAAA,8FAAG,kBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAUC,cAAAA,eAAV,8DAA4B,KAA5B;AAAA;AAAA;AAAA,qBAEZhB,gBAAgB,EAFJ;;AAAA;AAEzBxB,cAAAA,IAFyB;AAI/B/B,cAAAA,YAAY,CAACsE,CAAD,EAAIC,eAAJ,EAAqBxC,IAArB,EAA2B,IAA3B,CAAZ;AAJ+B;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAQ/B1B,cAAAA,aAAa,CAAC,KAAD,CAAb;AAR+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAA1BgE,0BAA0B;AAAA;AAAA;AAAA,KAAhC;;AAYA,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BzE,IAAAA,yBAAyB,CAACL,UAAU,CAAC+E,aAAZ,CAAzB;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2B;AACzBV,MAAAA,IAAI,EAAE,MADmB;AAEzBW,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN;AAFgB,KAA3B;AAID,GALD;;AAOA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCC,sBACGC,GADH,CACO,qDAA4BnE,OAA5B,CADP,EAC6C;AACzCoE,MAAAA,YAAY,EAAE;AAD2B,KAD7C,EAIGC,IAJH,CAIQ,iBAAc;AAAA,UAAXC,IAAW,SAAXA,IAAW;AAClB,UAAMC,OAAO,GAAGzD,GAAG,CAACC,eAAJ,CAAoBuD,IAApB,CAAhB;AAEA7D,MAAAA,IAAI,CAACP,OAAL,CAAasE,QAAb,GAAwBrE,gBAAxB;AACAM,MAAAA,IAAI,CAACP,OAAL,CAAauE,IAAb,GAAoBF,OAApB;AAEA9D,MAAAA,IAAI,CAACP,OAAL,CAAaW,KAAb;AACD,KAXH,WAYS,UAAAwC,GAAG,EAAI;AACZqB,MAAAA,OAAO,CAACC,KAAR,CAActB,GAAd;AACD,KAdH;AAeD,GAhBD;;AAkBA,MAAMuB,YAAY,GAAG,SAAfA,YAAe,CAAArB,CAAC,EAAI;AACxBA,IAAAA,CAAC,CAACsB,cAAF;AAEA5F,IAAAA,YAAY,CAACsE,CAAD,CAAZ;AACD,GAJD;;AAMA,MAAMuB,WAAW,GAAGpG,UAAU,CAACqG,YAA/B;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEH;AAAhB,kBACE,gCAAC,wBAAD,qBACE,gCAAC,mBAAD,qBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,gCAAC,uBAAD;AAAa,IAAA,QAAQ,EAAEjG,UAAU,CAACqG;AAAlC,KACGrG,UAAU,CAACsG,WAAX,gBACC,gCAAC,oCAAD;AAA0B,IAAA,OAAO,EAAEnG;AAAnC,IADD,gBAGC,gCAAC,eAAD,qBACE,gCAAC,+BAAD;AAAqB,IAAA,SAAS,EAAC;AAA/B,KACG,CAACO,UAAD,gBACC,+EACE,gCAAC,uBAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,OAAO,EAAEoE,iBAHX;AAIE,IAAA,KAAK,EAAC;AAJR,IADF,EAOGzD,OAAO,iBACN,kEACGvB,WAAW,iBACV,gCAAC,uBAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEwF,mBAFX;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAC;AAJR,IAFJ,eASE;AACE,IAAA,KAAK,EAAEtF,UAAU,CAACuG,QAAX,CAAoB7C,IAD7B;AAEE,IAAA,KAAK,EAAE;AAAE8C,MAAAA,OAAO,EAAE;AAAX,KAFT;AAGE,IAAA,GAAG,EAAE1E;AAHP,cATF,EAgBGjC,WAAW,iBACV,gCAAC,qCAAD;AACE,IAAA,MAAM,EAAEmF,UADV;AAEE,IAAA,IAAI,EAAE,qDAA4B3D,OAA5B;AAFR,kBAIE,gCAAC,uBAAD;AAAa,IAAA,KAAK,EAAC,SAAnB;AAA6B,IAAA,IAAI,EAAC,MAAlC;AAAyC,IAAA,KAAK,EAAC;AAA/C,IAJF,CAjBJ,CARJ,EAkCGO,OAAO,iBACN,gCAAC,uBAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEyB,oBAFX;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAC;AAJR,IAnCJ,CADD,gBA6CC,+EACE,gCAAC,uBAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEA,oBAFX;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAC,QAJR;AAKE,IAAA,SAAS,EAAE;AAAExC,MAAAA,MAAM,EAAE,QAAV;AAAoBD,MAAAA,KAAK,EAAE;AAA3B;AALb,IADF,eAQE,gCAAC,WAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEgD,WAFX;AAGE,IAAA,YAAY,EAAEe,0BAHhB;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAC;AALR,IARF,CA9CJ,CADF,EAiEGjD,KAAK,gBACJ,gCAAC,uBAAD,qBACE;AACE,IAAA,GAAG,EAAEV,GADP;AAEE,IAAA,GAAG,EAAE,iBAAIhB,UAAJ,EAAgB,CAAC,MAAD,EAAS,MAAT,CAAhB,EAAkC,EAAlC,CAFP;AAGE,IAAA,GAAG,EAAEU,UAAU,GAAGqB,MAAH,GAAY;AAH7B,IADF,CADI,gBASJ,kEACGJ,OAAO,gBACN,gCAAC,uBAAD;AAAa,IAAA,GAAG,EAAEX;AAAlB,IADM,gBAGN,gCAAC,uBAAD;AAAa,IAAA,IAAI,EAAES,QAAnB;AAA6B,IAAA,GAAG,EAAET;AAAlC,IAJJ,CA1EJ,EAmFGN,UAAU,IAAII,KAAK,CAACF,KAAN,KAAgB,IAA9B,iBACC,gCAAC,mBAAD,gBAEGE,KAAK,CAACF,KAFT,SAEmBE,KAAK,CAACD,MAFzB,SApFJ,CAJJ,CADF,EAkGGb,UAAU,CAACqG,QAAX,iBACC,gCAAC,wBAAD;AAAc,IAAA,KAAK,EAAErG,UAAU,CAACyG;AAAhC,KACGzG,UAAU,CAACyG,YADd,CAnGJ,CADF,eAyGE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,gCAAC,0BAAD;AAAgB,IAAA,IAAI,EAAEzG,UAAU,CAACqC;AAAjC,IADF,eAEE,gCAAC,uBAAD,QACGqE,iBAAKC,GAAL,CAAS,iBAAqB;AAAA,QAAlBC,GAAkB,SAAlBA,GAAkB;AAAA,QAAbC,MAAa,SAAbA,MAAa;AAC7B,wBACE,gCAAC,eAAD;AAAK,MAAA,GAAG,EAAED;AAAV,OACGC,MAAM,CAACF,GAAP,CAAW,UAAAG,KAAK,EAAI;AACnB,0BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,GAAG,EAAEA,KAAK,CAACpD;AAAnC,sBACE,gCAAC,cAAD,gCACMoD,KADN;AAEE,QAAA,QAAQ,EAAE5G,cAFZ;AAGE,QAAA,WAAW,EACT4G,KAAK,CAACC,WAAN,GAAoBtG,aAAa,CAACqG,KAAK,CAACC,WAAP,CAAjC,GAAuD,IAJ3D;AAME,QAAA,KAAK,EAAEtG,aAAa,CAACqG,KAAK,CAACE,KAAP,CANtB;AAOE,QAAA,QAAQ,EAAE5G,QAPZ;AAQE,QAAA,IAAI,EAAC,MARP;AASE,QAAA,KAAK,EAAE,iBAAIJ,UAAJ,EAAgB8G,KAAK,CAACpD,IAAtB,EAA4B,EAA5B;AATT,SADF,CADF;AAeD,KAhBA,CADH,CADF;AAqBD,GAtBA,CADH,CAFF,CAzGF,CADF,CADF,eAyIE;AACE,IAAA,GAAG,EAAE1B,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAE,KAHZ;AAIE,IAAA,QAAQ,EAAEuB,YAJZ;AAKE,IAAA,KAAK,EAAE;AAAEiD,MAAAA,OAAO,EAAE;AAAX,KALT;AAME,IAAA,MAAM,EAAE/E,QAAQ,CACbwF,KADK,CACC,GADD,EAELN,GAFK,CAED,UAACO,CAAD,EAAIC,CAAJ,EAAU;AACb,UAAIA,CAAC,KAAK,CAAV,EAAa;AACX,eAAO,GAAP;AACD;;AAED,aAAOD,CAAP;AACD,KARK,EASLE,IATK,CASA,GATA;AANV,IAzIF,eA0JE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEZ,MAAAA,OAAO,EAAE;AAAX;AAA7B,0DA1JF,CADF,CADF;AAkKD,CAhWc,CAAjB;AAmWA7G,QAAQ,CAAC0H,YAAT,GAAwB;AACtBxH,EAAAA,WAAW,EAAE,IADS;AAEtBC,EAAAA,WAAW,EAAE,IAFS;AAGtBC,EAAAA,UAAU,EAAE;AACVqG,IAAAA,YAAY,EAAEkB;AADJ,GAHU;AAMtBtH,EAAAA,UAAU,EAAE,IANU;AAOtBC,EAAAA,qBAAqB,EAAE,KAPD;AAQtBC,EAAAA,cAAc,EAAE,KARM;AAStBC,EAAAA,aAAa,EAAE,yBAAM,CAAE,CATD;AAUtBC,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CAVI;AAWtBC,EAAAA,yBAAyB,EAAE,qCAAM,CAAE,CAXb;AAYtBC,EAAAA,YAAY,EAAE,sBAAAsE,CAAC;AAAA,WAAIA,CAAC,CAACsB,cAAF,EAAJ;AAAA,GAZO;AAatB3F,EAAAA,aAAa,EAAE,yBAAM,CAAE,CAbD;AActBC,EAAAA,iBAAiB,EAAE,6BAAM,CAAE;AAdL,CAAxB;AAiBAb,QAAQ,CAAC4H,SAAT,GAAqB;AACnB1H,EAAAA,WAAW,EAAE2H,sBAAUC,IADJ;AAEnB3H,EAAAA,WAAW,EAAE0H,sBAAUC,IAFJ;AAGnBtH,EAAAA,aAAa,EAAEqH,sBAAUE,IAHN;AAInB3H,EAAAA,UAAU,EAAEyH,sBAAUG,MAJH;AAKnB3H,EAAAA,UAAU,EAAEwH,sBAAUG,MALH;AAMnB1H,EAAAA,qBAAqB,EAAEuH,sBAAUC,IANd;AAOnBvH,EAAAA,cAAc,EAAEsH,sBAAUC,IAPP;AAQnBrH,EAAAA,QAAQ,EAAEoH,sBAAUE,IARD;AASnBrH,EAAAA,yBAAyB,EAAEmH,sBAAUE,IATlB;AAUnBpH,EAAAA,YAAY,EAAEkH,sBAAUE,IAVL;AAWnBnH,EAAAA,aAAa,EAAEiH,sBAAUE,IAXN;AAYnBlH,EAAAA,iBAAiB,EAAEgH,sBAAUE;AAZV,CAArB;eAee/H,Q","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/jsx-fragments */\nimport React, {\n  Fragment,\n  forwardRef,\n  useState,\n  useEffect,\n  useRef,\n  useImperativeHandle,\n} from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport axios from 'axios';\nimport { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Row } from 'reactstrap';\nimport { Inputs } from '@buffetjs/custom';\nimport { useGlobalContext, prefixFileUrlWithBackendUrl } from 'strapi-helper-plugin';\nimport Cropper from 'cropperjs';\nimport 'cropperjs/dist/cropper.css';\nimport { createFileToDownloadName } from '../../utils';\nimport CardControl from '../CardControl';\nimport CardControlsWrapper from '../CardControlsWrapper';\nimport CardPreview from '../CardPreview';\nimport InfiniteLoadingIndicator from '../InfiniteLoadingIndicator';\nimport ModalSection from '../ModalSection';\nimport VideoPlayer from '../VideoPlayer';\nimport CropWrapper from './CropWrapper';\nimport FileDetailsBox from './FileDetailsBox';\nimport FileWrapper from './FileWrapper';\nimport FormWrapper from './FormWrapper';\nimport SizeBox from './SizeBox';\nimport Wrapper from './Wrapper';\nimport ErrorMessage from './ErrorMessage';\nimport form from './utils/form';\nimport isImageType from './utils/isImageType';\nimport isVideoType from './utils/isVideoType';\n\nconst EditForm = forwardRef(\n  (\n    {\n      canCopyLink,\n      canDownload,\n      components,\n      fileToEdit,\n      isEditingUploadedFile,\n      isFormDisabled,\n      onAbortUpload,\n      onChange,\n      onClickDeleteFileToUpload,\n      onSubmitEdit,\n      setCropResult,\n      toggleDisableForm,\n    },\n    ref\n  ) => {\n    const { formatMessage } = useGlobalContext();\n    const [isCropping, setIsCropping] = useState(false);\n    const [infos, setInfos] = useState({ width: null, height: null });\n    const [src, setSrc] = useState(null);\n    const cacheRef = useRef(performance.now());\n\n    const fileURL = get(fileToEdit, ['file', 'url'], null);\n    const prefixedFileURL = fileURL\n      ? prefixFileUrlWithBackendUrl(`${fileURL}?${cacheRef.current}`)\n      : null;\n    const downloadFileName = createFileToDownloadName(fileToEdit);\n    const mimeType =\n      get(fileToEdit, ['file', 'type'], null) || get(fileToEdit, ['file', 'mime'], '');\n    const isImg = isImageType(mimeType);\n    const isVideo = isVideoType(mimeType);\n    const canCrop = isImg && !mimeType.includes('svg') && !mimeType.includes('gif');\n    const aRef = useRef();\n    const imgRef = useRef();\n    const inputRef = useRef();\n    const cropper = useRef();\n\n    useImperativeHandle(ref, () => ({\n      click: () => {\n        inputRef.current.click();\n        setIsCropping(false);\n      },\n    }));\n\n    useEffect(() => {\n      if (isImg || isVideo) {\n        if (prefixedFileURL) {\n          setSrc(prefixedFileURL);\n        } else {\n          setSrc(URL.createObjectURL(fileToEdit.file));\n        }\n      }\n    }, [isImg, isVideo, fileToEdit, prefixedFileURL]);\n\n    useEffect(() => {\n      if (isCropping) {\n        cropper.current = new Cropper(imgRef.current, {\n          modal: true,\n          initialAspectRatio: 16 / 9,\n          movable: true,\n          zoomable: false,\n          cropBoxResizable: true,\n          background: false,\n          crop: handleResize,\n        });\n      } else if (cropper.current) {\n        cropper.current.destroy();\n\n        setInfos({ width: null, height: null });\n        toggleDisableForm(false);\n      }\n\n      return () => {\n        if (cropper.current) {\n          cropper.current.destroy();\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [cropper, isCropping]);\n\n    const handleResize = ({ detail: { height, width } }) => {\n      const roundedDataHeight = Math.round(height);\n      const roundedDataWidth = Math.round(width);\n\n      setInfos({ width: roundedDataWidth, height: roundedDataHeight });\n    };\n\n    const handleToggleCropMode = () => {\n      setIsCropping(prev => {\n        if (!prev && isEditingUploadedFile) {\n          toggleDisableForm(true);\n        }\n\n        return !prev;\n      });\n    };\n\n    const handleChange = ({ target: { files } }) => {\n      if (files[0]) {\n        onChange({ target: { name: 'file', value: files[0] } });\n      }\n    };\n\n    const handleClick = async () => {\n      const cropResult = await getCroppedResult();\n\n      setCropResult(cropResult);\n\n      setIsCropping(false);\n    };\n\n    const getCroppedResult = () => {\n      return new Promise((resolve, reject) => {\n        try {\n          const canvas = cropper.current.getCroppedCanvas();\n\n          canvas.toBlob(\n            async blob => {\n              const {\n                file: { lastModifiedDate, lastModified, name },\n              } = fileToEdit;\n\n              resolve(\n                new File([blob], name, {\n                  type: mimeType,\n                  lastModified,\n                  lastModifiedDate,\n                })\n              );\n            },\n            mimeType,\n            1\n          );\n        } catch (err) {\n          reject();\n        }\n      });\n    };\n\n    const handleClickEditCroppedFile = async (e, shouldDuplicate = false) => {\n      try {\n        const file = await getCroppedResult();\n\n        onSubmitEdit(e, shouldDuplicate, file, true);\n      } catch (err) {\n        // Silent\n      } finally {\n        setIsCropping(false);\n      }\n    };\n\n    const handleClickDelete = () => {\n      onClickDeleteFileToUpload(fileToEdit.originalIndex);\n    };\n\n    const handleCopy = () => {\n      strapi.notification.toggle({\n        type: 'info',\n        message: { id: 'notification.link-copied' },\n      });\n    };\n\n    const handleClickDownload = () => {\n      axios\n        .get(prefixFileUrlWithBackendUrl(fileURL), {\n          responseType: 'blob',\n        })\n        .then(({ data }) => {\n          const blobUrl = URL.createObjectURL(data);\n\n          aRef.current.download = downloadFileName;\n          aRef.current.href = blobUrl;\n\n          aRef.current.click();\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n\n      onSubmitEdit(e);\n    };\n\n    const CheckButton = components.CheckControl;\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <ModalSection>\n          <Wrapper>\n            <div className=\"row\">\n              <div className=\"col-6\">\n                <FileWrapper hasError={fileToEdit.hasError}>\n                  {fileToEdit.isUploading ? (\n                    <InfiniteLoadingIndicator onClick={onAbortUpload} />\n                  ) : (\n                    <Fragment>\n                      <CardControlsWrapper className=\"card-control-wrapper-displayed\">\n                        {!isCropping ? (\n                          <>\n                            <CardControl\n                              color=\"#9EA7B8\"\n                              type=\"trash-alt\"\n                              onClick={handleClickDelete}\n                              title=\"delete\"\n                            />\n                            {fileURL && (\n                              <>\n                                {canDownload && (\n                                  <CardControl\n                                    color=\"#9EA7B8\"\n                                    onClick={handleClickDownload}\n                                    type=\"download\"\n                                    title=\"download\"\n                                  />\n                                )}\n                                <a\n                                  title={fileToEdit.fileInfo.name}\n                                  style={{ display: 'none' }}\n                                  ref={aRef}\n                                >\n                                  hidden\n                                </a>\n                                {canCopyLink && (\n                                  <CopyToClipboard\n                                    onCopy={handleCopy}\n                                    text={prefixFileUrlWithBackendUrl(fileURL)}\n                                  >\n                                    <CardControl color=\"#9EA7B8\" type=\"link\" title=\"copy-link\" />\n                                  </CopyToClipboard>\n                                )}\n                              </>\n                            )}\n                            {canCrop && (\n                              <CardControl\n                                color=\"#9EA7B8\"\n                                onClick={handleToggleCropMode}\n                                type=\"crop\"\n                                title=\"crop\"\n                              />\n                            )}\n                          </>\n                        ) : (\n                          <>\n                            <CardControl\n                              color=\"#F64D0A\"\n                              onClick={handleToggleCropMode}\n                              type=\"times\"\n                              title=\"cancel\"\n                              iconStyle={{ height: '1.6rem', width: '1.6rem' }}\n                            />\n                            <CheckButton\n                              color=\"#6DBB1A\"\n                              onClick={handleClick}\n                              onSubmitEdit={handleClickEditCroppedFile}\n                              type=\"check\"\n                              title=\"save\"\n                            />\n                          </>\n                        )}\n                      </CardControlsWrapper>\n                      {isImg ? (\n                        <CropWrapper>\n                          <img\n                            src={src}\n                            alt={get(fileToEdit, ['file', 'name'], '')}\n                            ref={isCropping ? imgRef : null}\n                          />\n                        </CropWrapper>\n                      ) : (\n                        <>\n                          {isVideo ? (\n                            <VideoPlayer src={src} />\n                          ) : (\n                            <CardPreview type={mimeType} url={src} />\n                          )}\n                        </>\n                      )}\n\n                      {isCropping && infos.width !== null && (\n                        <SizeBox>\n                          &nbsp;\n                          {infos.width} x {infos.height}\n                          &nbsp;\n                        </SizeBox>\n                      )}\n                    </Fragment>\n                  )}\n                </FileWrapper>\n                {fileToEdit.hasError && (\n                  <ErrorMessage title={fileToEdit.errorMessage}>\n                    {fileToEdit.errorMessage}\n                  </ErrorMessage>\n                )}\n              </div>\n              <div className=\"col-6\">\n                <FileDetailsBox file={fileToEdit.file} />\n                <FormWrapper>\n                  {form.map(({ key, inputs }) => {\n                    return (\n                      <Row key={key}>\n                        {inputs.map(input => {\n                          return (\n                            <div className=\"col-12\" key={input.name}>\n                              <Inputs\n                                {...input}\n                                disabled={isFormDisabled}\n                                description={\n                                  input.description ? formatMessage(input.description) : null\n                                }\n                                label={formatMessage(input.label)}\n                                onChange={onChange}\n                                type=\"text\"\n                                value={get(fileToEdit, input.name, '')}\n                              />\n                            </div>\n                          );\n                        })}\n                      </Row>\n                    );\n                  })}\n                </FormWrapper>\n              </div>\n            </div>\n          </Wrapper>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            multiple={false}\n            onChange={handleChange}\n            style={{ display: 'none' }}\n            accept={mimeType\n              .split('/')\n              .map((v, i) => {\n                if (i === 1) {\n                  return '*';\n                }\n\n                return v;\n              })\n              .join('/')}\n          />\n          <button type=\"submit\" style={{ display: 'none' }}>\n            hidden button to make to get the native form event\n          </button>\n        </ModalSection>\n      </form>\n    );\n  }\n);\n\nEditForm.defaultProps = {\n  canCopyLink: true,\n  canDownload: true,\n  components: {\n    CheckControl: CardControl,\n  },\n  fileToEdit: null,\n  isEditingUploadedFile: false,\n  isFormDisabled: false,\n  onAbortUpload: () => {},\n  onChange: () => {},\n  onClickDeleteFileToUpload: () => {},\n  onSubmitEdit: e => e.preventDefault(),\n  setCropResult: () => {},\n  toggleDisableForm: () => {},\n};\n\nEditForm.propTypes = {\n  canCopyLink: PropTypes.bool,\n  canDownload: PropTypes.bool,\n  onAbortUpload: PropTypes.func,\n  components: PropTypes.object,\n  fileToEdit: PropTypes.object,\n  isEditingUploadedFile: PropTypes.bool,\n  isFormDisabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onClickDeleteFileToUpload: PropTypes.func,\n  onSubmitEdit: PropTypes.func,\n  setCropResult: PropTypes.func,\n  toggleDisableForm: PropTypes.func,\n};\n\nexport default EditForm;\n"]},"metadata":{},"sourceType":"script"}