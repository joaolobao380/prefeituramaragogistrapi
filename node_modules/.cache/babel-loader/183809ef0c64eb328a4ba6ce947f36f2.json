{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar createLocalesOption = function createLocalesOption(localesToDisplay, localesFromData) {\n  return localesToDisplay.map(function (_ref) {\n    var name = _ref.name,\n        code = _ref.code;\n    var matchingLocaleInData = localesFromData.find(function (_ref2) {\n      var locale = _ref2.locale;\n      return locale === code;\n    });\n    var status = 'did-not-create-locale';\n\n    if (matchingLocaleInData) {\n      status = matchingLocaleInData.published_at === null ? 'draft' : 'published';\n    }\n\n    return {\n      id: matchingLocaleInData ? matchingLocaleInData.id : null,\n      label: name,\n      value: code,\n      status: status\n    };\n  });\n};\n\nvar _default = createLocalesOption;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/components/CMEditViewLocalePicker/utils/createLocalesOption.js"],"names":["createLocalesOption","localesToDisplay","localesFromData","map","name","code","matchingLocaleInData","find","locale","status","published_at","id","label","value"],"mappings":";;;;;;;AAAA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,gBAAD,EAAmBC,eAAnB,EAAuC;AACjE,SAAOD,gBAAgB,CAACE,GAAjB,CAAqB,gBAAoB;AAAA,QAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC9C,QAAMC,oBAAoB,GAAGJ,eAAe,CAACK,IAAhB,CAAqB;AAAA,UAAGC,MAAH,SAAGA,MAAH;AAAA,aAAgBA,MAAM,KAAKH,IAA3B;AAAA,KAArB,CAA7B;AAEA,QAAII,MAAM,GAAG,uBAAb;;AAEA,QAAIH,oBAAJ,EAA0B;AACxBG,MAAAA,MAAM,GAAGH,oBAAoB,CAACI,YAArB,KAAsC,IAAtC,GAA6C,OAA7C,GAAuD,WAAhE;AACD;;AAED,WAAO;AACLC,MAAAA,EAAE,EAAEL,oBAAoB,GAAGA,oBAAoB,CAACK,EAAxB,GAA6B,IADhD;AAELC,MAAAA,KAAK,EAAER,IAFF;AAGLS,MAAAA,KAAK,EAAER,IAHF;AAILI,MAAAA,MAAM,EAANA;AAJK,KAAP;AAMD,GAfM,CAAP;AAgBD,CAjBD;;eAmBeT,mB","sourcesContent":["const createLocalesOption = (localesToDisplay, localesFromData) => {\n  return localesToDisplay.map(({ name, code }) => {\n    const matchingLocaleInData = localesFromData.find(({ locale }) => locale === code);\n\n    let status = 'did-not-create-locale';\n\n    if (matchingLocaleInData) {\n      status = matchingLocaleInData.published_at === null ? 'draft' : 'published';\n    }\n\n    return {\n      id: matchingLocaleInData ? matchingLocaleInData.id : null,\n      label: name,\n      value: code,\n      status,\n    };\n  });\n};\n\nexport default createLocalesOption;\n"]},"metadata":{},"sourceType":"script"}