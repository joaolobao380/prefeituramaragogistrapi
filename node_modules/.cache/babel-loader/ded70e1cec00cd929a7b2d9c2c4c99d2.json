{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _components = require(\"./components\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n *\n * InputWithAutoFocus that programatically manage the autofocus of another one\n */\nvar getInputType = function getInputType(attrType) {\n  switch (attrType) {\n    case 'boolean':\n      return _core.Select;\n\n    case 'date':\n    case 'timestamp':\n    case 'timestampUpdate':\n      return _core.DatePicker;\n\n    case 'datetime':\n      return _custom.DateTime;\n\n    case 'enumeration':\n      return _core.Select;\n\n    case 'integer':\n    case 'biginteger':\n    case 'decimal':\n    case 'float':\n      return _core.InputNumber;\n\n    case 'time':\n      return _core.TimePicker;\n\n    default:\n      return _core.InputText;\n  }\n};\n\nfunction Input(_ref) {\n  var type = _ref.type,\n      rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"type\"]);\n  var Component = getInputType(type);\n  var style = type !== 'time' ? {\n    width: '210px'\n  } : {};\n\n  if (['integer', 'biginteger', 'float', 'decimal'].includes(type)) {\n    style = {\n      marginRight: '15px'\n    };\n  }\n\n  var styles = type === 'boolean' ? {\n    minWidth: '100px',\n    maxWidth: '200px'\n  } : style;\n  var wrapperStyle = {\n    marginRight: '15px'\n  };\n  return /*#__PURE__*/_react[\"default\"].createElement(_components.InputWrapperDate, {\n    type: type || 'text',\n    style: wrapperStyle\n  }, /*#__PURE__*/_react[\"default\"].createElement(Component, (0, _extends2[\"default\"])({}, rest, {\n    style: styles,\n    autoComplete: \"off\"\n  })));\n}\n\nInput.propTypes = {\n  type: _propTypes[\"default\"].string.isRequired\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(Input);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/components/FilterPickerOption/Input.js"],"names":["getInputType","attrType","Select","DatePicker","DateTime","InputNumber","TimePicker","InputText","Input","type","rest","Component","style","width","includes","marginRight","styles","minWidth","maxWidth","wrapperStyle","propTypes","PropTypes","string","isRequired"],"mappings":";;;;;;;;;;;;;;;AAKA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAVA;AACA;AACA;AACA;AASA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAAC,QAAQ,EAAI;AAC/B,UAAQA,QAAR;AACE,SAAK,SAAL;AACE,aAAOC,YAAP;;AACF,SAAK,MAAL;AACA,SAAK,WAAL;AACA,SAAK,iBAAL;AACE,aAAOC,gBAAP;;AACF,SAAK,UAAL;AACE,aAAOC,gBAAP;;AACF,SAAK,aAAL;AACE,aAAOF,YAAP;;AACF,SAAK,SAAL;AACA,SAAK,YAAL;AACA,SAAK,SAAL;AACA,SAAK,OAAL;AACE,aAAOG,iBAAP;;AACF,SAAK,MAAL;AACE,aAAOC,gBAAP;;AACF;AACE,aAAOC,eAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,SAASC,KAAT,OAAkC;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAARC,IAAQ;AAChC,MAAMC,SAAS,GAAGX,YAAY,CAACS,IAAD,CAA9B;AACA,MAAIG,KAAK,GAAGH,IAAI,KAAK,MAAT,GAAkB;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAlB,GAAuC,EAAnD;;AAEA,MAAI,CAAC,SAAD,EAAY,YAAZ,EAA0B,OAA1B,EAAmC,SAAnC,EAA8CC,QAA9C,CAAuDL,IAAvD,CAAJ,EAAkE;AAChEG,IAAAA,KAAK,GAAG;AAAEG,MAAAA,WAAW,EAAE;AAAf,KAAR;AACD;;AACD,MAAMC,MAAM,GAAGP,IAAI,KAAK,SAAT,GAAqB;AAAEQ,IAAAA,QAAQ,EAAE,OAAZ;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAArB,GAAgEN,KAA/E;AACA,MAAMO,YAAY,GAAG;AAAEJ,IAAAA,WAAW,EAAE;AAAf,GAArB;AAEA,sBACE,gCAAC,4BAAD;AAAkB,IAAA,IAAI,EAAEN,IAAI,IAAI,MAAhC;AAAwC,IAAA,KAAK,EAAEU;AAA/C,kBACE,gCAAC,SAAD,gCAAeT,IAAf;AAAqB,IAAA,KAAK,EAAEM,MAA5B;AAAoC,IAAA,YAAY,EAAC;AAAjD,KADF,CADF;AAKD;;AAEDR,KAAK,CAACY,SAAN,GAAkB;AAChBX,EAAAA,IAAI,EAAEY,sBAAUC,MAAV,CAAiBC;AADP,CAAlB;;4BAIe,iBAAKf,KAAL,C","sourcesContent":["/**\n *\n * InputWithAutoFocus that programatically manage the autofocus of another one\n */\n\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DateTime } from '@buffetjs/custom';\nimport { DatePicker, InputText, InputNumber, Select, TimePicker } from '@buffetjs/core';\nimport { InputWrapperDate } from './components';\n\nconst getInputType = attrType => {\n  switch (attrType) {\n    case 'boolean':\n      return Select;\n    case 'date':\n    case 'timestamp':\n    case 'timestampUpdate':\n      return DatePicker;\n    case 'datetime':\n      return DateTime;\n    case 'enumeration':\n      return Select;\n    case 'integer':\n    case 'biginteger':\n    case 'decimal':\n    case 'float':\n      return InputNumber;\n    case 'time':\n      return TimePicker;\n    default:\n      return InputText;\n  }\n};\n\nfunction Input({ type, ...rest }) {\n  const Component = getInputType(type);\n  let style = type !== 'time' ? { width: '210px' } : {};\n\n  if (['integer', 'biginteger', 'float', 'decimal'].includes(type)) {\n    style = { marginRight: '15px' };\n  }\n  const styles = type === 'boolean' ? { minWidth: '100px', maxWidth: '200px' } : style;\n  const wrapperStyle = { marginRight: '15px' };\n\n  return (\n    <InputWrapperDate type={type || 'text'} style={wrapperStyle}>\n      <Component {...rest} style={styles} autoComplete=\"off\" />\n    </InputWrapperDate>\n  );\n}\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default memo(Input);\n"]},"metadata":{},"sourceType":"script"}