{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _lodash = require(\"lodash\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _SettingsPageTitle = _interopRequireDefault(require(\"../../../../components/SettingsPageTitle\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar SettingDispatcher = function SettingDispatcher() {\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      plugins = _useGlobalContext.plugins;\n\n  var _useParams = (0, _reactRouterDom.useParams)(),\n      pluginId = _useParams.pluginId;\n\n  var pluginToRender = (0, _lodash.get)(plugins, [pluginId, 'settings', 'mainComponent'], null);\n\n  if (!pluginToRender) {\n    return null;\n  }\n\n  var Compo = pluginToRender;\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_SettingsPageTitle[\"default\"], {\n    name: pluginId\n  }), /*#__PURE__*/_react[\"default\"].createElement(Compo, {\n    settingsBaseURL: \"/settings\"\n  }));\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(SettingDispatcher);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/containers/SettingsPage/components/SettingDispatcher/index.js"],"names":["SettingDispatcher","plugins","pluginId","pluginToRender","Compo"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,0BAAoB,2CAApB;AAAA,MAAQC,OAAR,qBAAQA,OAAR;;AACA,mBAAqB,gCAArB;AAAA,MAAQC,QAAR,cAAQA,QAAR;;AAEA,MAAMC,cAAc,GAAG,iBAAIF,OAAJ,EAAa,CAACC,QAAD,EAAW,UAAX,EAAuB,eAAvB,CAAb,EAAsD,IAAtD,CAAvB;;AAEA,MAAI,CAACC,cAAL,EAAqB;AACnB,WAAO,IAAP;AACD;;AAED,MAAMC,KAAK,GAAGD,cAAd;AAEA,sBACE,+EACE,gCAAC,6BAAD;AAAW,IAAA,IAAI,EAAED;AAAjB,IADF,eAEE,gCAAC,KAAD;AAAO,IAAA,eAAe,EAAC;AAAvB,IAFF,CADF;AAMD,CAlBD;;4BAoBe,iBAAKF,iBAAL,C","sourcesContent":["import React, { memo } from 'react';\nimport { useGlobalContext } from 'strapi-helper-plugin';\nimport { get } from 'lodash';\nimport { useParams } from 'react-router-dom';\nimport PageTitle from '../../../../components/SettingsPageTitle';\n\nconst SettingDispatcher = () => {\n  const { plugins } = useGlobalContext();\n  const { pluginId } = useParams();\n\n  const pluginToRender = get(plugins, [pluginId, 'settings', 'mainComponent'], null);\n\n  if (!pluginToRender) {\n    return null;\n  }\n\n  const Compo = pluginToRender;\n\n  return (\n    <>\n      <PageTitle name={pluginId} />\n      <Compo settingsBaseURL=\"/settings\" />\n    </>\n  );\n};\n\nexport default memo(SettingDispatcher);\n"]},"metadata":{},"sourceType":"script"}