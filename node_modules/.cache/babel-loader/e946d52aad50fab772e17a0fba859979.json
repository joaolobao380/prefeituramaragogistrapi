{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRelatedActionIdData = exports.getActionsIds = exports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"../../utils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar getActionsIds = function getActionsIds(array) {\n  return array.map(function (_ref) {\n    var actionId = _ref.actionId;\n    return actionId;\n  });\n};\n\nexports.getActionsIds = getActionsIds;\n\nvar getRelatedActionIdData = function getRelatedActionIdData(actionIdArray, dataObj) {\n  return actionIdArray.reduce(function (acc, actionId) {\n    Object.keys(dataObj).forEach(function (ctUid) {\n      var actionIdData = (0, _lodash.get)(dataObj, [ctUid, actionId], {});\n      var actionIdState = (0, _defineProperty2[\"default\"])({}, ctUid, (0, _utils.removeConditionKeyFromData)(actionIdData));\n\n      if (!acc[actionId]) {\n        acc[actionId] = actionIdState;\n      } else {\n        acc[actionId] = _objectSpread(_objectSpread({}, acc[actionId]), actionIdState);\n      }\n    });\n    return acc;\n  }, {});\n};\n\nexports.getRelatedActionIdData = getRelatedActionIdData;\n\nvar getCheckboxesState = function getCheckboxesState(properties, modifiedData) {\n  var actionsIds = getActionsIds(properties);\n  var relatedActionsData = getRelatedActionIdData(actionsIds, modifiedData);\n  var checkboxesState = Object.keys(relatedActionsData).reduce(function (acc, current) {\n    acc[current] = (0, _utils.getCheckboxState)(relatedActionsData[current]);\n    return acc;\n  }, {});\n  return checkboxesState;\n};\n\nvar _default = getCheckboxesState;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/components/Roles/GlobalActions/utils/getRowLabelCheckboxesState.js"],"names":["getActionsIds","array","map","actionId","getRelatedActionIdData","actionIdArray","dataObj","reduce","acc","Object","keys","forEach","ctUid","actionIdData","actionIdState","getCheckboxesState","properties","modifiedData","actionsIds","relatedActionsData","checkboxesState","current"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,GAAN,CAAU;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,WAAkBA,QAAlB;AAAA,GAAV,CAAJ;AAAA,CAA3B;;;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,aAAD,EAAgBC,OAAhB,EAA4B;AACzD,SAAOD,aAAa,CAACE,MAAd,CAAqB,UAACC,GAAD,EAAML,QAAN,EAAmB;AAC7CM,IAAAA,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,OAArB,CAA6B,UAAAC,KAAK,EAAI;AACpC,UAAMC,YAAY,GAAG,iBAAIP,OAAJ,EAAa,CAACM,KAAD,EAAQT,QAAR,CAAb,EAAgC,EAAhC,CAArB;AAEA,UAAMW,aAAa,wCAAMF,KAAN,EAAc,uCAA2BC,YAA3B,CAAd,CAAnB;;AAEA,UAAI,CAACL,GAAG,CAACL,QAAD,CAAR,EAAoB;AAClBK,QAAAA,GAAG,CAACL,QAAD,CAAH,GAAgBW,aAAhB;AACD,OAFD,MAEO;AACLN,QAAAA,GAAG,CAACL,QAAD,CAAH,mCAAqBK,GAAG,CAACL,QAAD,CAAxB,GAAuCW,aAAvC;AACD;AACF,KAVD;AAYA,WAAON,GAAP;AACD,GAdM,EAcJ,EAdI,CAAP;AAeD,CAhBD;;;;AAkBA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,UAAD,EAAaC,YAAb,EAA8B;AACvD,MAAMC,UAAU,GAAGlB,aAAa,CAACgB,UAAD,CAAhC;AACA,MAAMG,kBAAkB,GAAGf,sBAAsB,CAACc,UAAD,EAAaD,YAAb,CAAjD;AAEA,MAAMG,eAAe,GAAGX,MAAM,CAACC,IAAP,CAAYS,kBAAZ,EAAgCZ,MAAhC,CAAuC,UAACC,GAAD,EAAMa,OAAN,EAAkB;AAC/Eb,IAAAA,GAAG,CAACa,OAAD,CAAH,GAAe,6BAAiBF,kBAAkB,CAACE,OAAD,CAAnC,CAAf;AAEA,WAAOb,GAAP;AACD,GAJuB,EAIrB,EAJqB,CAAxB;AAMA,SAAOY,eAAP;AACD,CAXD;;eAaeL,kB","sourcesContent":["import { get } from 'lodash';\nimport { getCheckboxState, removeConditionKeyFromData } from '../../utils';\n\nconst getActionsIds = array => array.map(({ actionId }) => actionId);\n\nconst getRelatedActionIdData = (actionIdArray, dataObj) => {\n  return actionIdArray.reduce((acc, actionId) => {\n    Object.keys(dataObj).forEach(ctUid => {\n      const actionIdData = get(dataObj, [ctUid, actionId], {});\n\n      const actionIdState = { [ctUid]: removeConditionKeyFromData(actionIdData) };\n\n      if (!acc[actionId]) {\n        acc[actionId] = actionIdState;\n      } else {\n        acc[actionId] = { ...acc[actionId], ...actionIdState };\n      }\n    });\n\n    return acc;\n  }, {});\n};\n\nconst getCheckboxesState = (properties, modifiedData) => {\n  const actionsIds = getActionsIds(properties);\n  const relatedActionsData = getRelatedActionIdData(actionsIds, modifiedData);\n\n  const checkboxesState = Object.keys(relatedActionsData).reduce((acc, current) => {\n    acc[current] = getCheckboxState(relatedActionsData[current]);\n\n    return acc;\n  }, {});\n\n  return checkboxesState;\n};\n\nexport default getCheckboxesState;\nexport { getActionsIds, getRelatedActionIdData };\n"]},"metadata":{},"sourceType":"script"}