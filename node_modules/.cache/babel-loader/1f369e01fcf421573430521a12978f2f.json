{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _formik = require(\"formik\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _BaselineAlignement = _interopRequireDefault(require(\"../../../components/BaselineAlignement\"));\n\nvar _ContainerFluid = _interopRequireDefault(require(\"../../../components/ContainerFluid\"));\n\nvar _FormBloc = _interopRequireDefault(require(\"../../../components/FormBloc\"));\n\nvar _SizedInput = _interopRequireDefault(require(\"../../../components/SizedInput\"));\n\nvar _getTrad = _interopRequireDefault(require(\"../../../utils/getTrad\"));\n\nvar _pluginId = _interopRequireDefault(require(\"../../../pluginId\"));\n\nvar _UsersPermissions = _interopRequireDefault(require(\"../../../components/UsersPermissions\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _schema = _interopRequireDefault(require(\"./utils/schema\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar EditPage = function EditPage() {\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isSubmiting = _useState2[0],\n      setIsSubmiting = _useState2[1];\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      settingsBaseURL = _useGlobalContext.settingsBaseURL;\n\n  var _useRouteMatch = (0, _reactRouterDom.useRouteMatch)(\"\".concat(settingsBaseURL, \"/\").concat(_pluginId[\"default\"], \"/roles/:id\")),\n      id = _useRouteMatch.params.id;\n\n  var _usePlugins = (0, _hooks.usePlugins)(),\n      routes = _usePlugins.routes,\n      policies = _usePlugins.policies,\n      isLoading = _usePlugins.isLoading;\n\n  var _useFetchRole = (0, _hooks.useFetchRole)(id),\n      role = _useFetchRole.role,\n      isRoleLoading = _useFetchRole.isLoading,\n      onSubmitSucceeded = _useFetchRole.onSubmitSucceeded;\n\n  var permissionsRef = (0, _react.useRef)();\n\n  var headerActions = function headerActions(handleSubmit, handleReset) {\n    if (isLoading) {\n      return [];\n    }\n\n    return [{\n      label: formatMessage({\n        id: (0, _getTrad[\"default\"])('app.components.Button.reset'),\n        defaultMessage: 'Reset'\n      }),\n      onClick: function onClick() {\n        handleReset();\n        permissionsRef.current.resetForm();\n      },\n      color: 'cancel',\n      type: 'button'\n    }, {\n      label: formatMessage({\n        id: (0, _getTrad[\"default\"])('app.components.Button.save'),\n        defaultMessage: 'Save'\n      }),\n      onClick: handleSubmit,\n      color: 'success',\n      type: 'submit',\n      isLoading: isSubmiting\n    }];\n  };\n\n  var handleCreateRoleSubmit = function handleCreateRoleSubmit(data) {\n    strapi.lockAppWithOverlay();\n    setIsSubmiting(true);\n    var permissions = permissionsRef.current.getPermissions();\n    Promise.resolve((0, _strapiHelperPlugin.request)(\"/\".concat(_pluginId[\"default\"], \"/roles/\").concat(id), {\n      method: 'PUT',\n      body: _objectSpread(_objectSpread(_objectSpread({}, data), permissions), {}, {\n        users: []\n      })\n    })).then(function () {\n      onSubmitSucceeded({\n        name: data.name,\n        description: data.description\n      });\n      permissionsRef.current.setFormAfterSubmit();\n      strapi.notification.toggle({\n        type: 'success',\n        message: {\n          id: (0, _getTrad[\"default\"])('Settings.roles.edited')\n        }\n      });\n    })[\"catch\"](function (err) {\n      console.error(err);\n      strapi.notification.toggle({\n        type: 'warning',\n        message: {\n          id: 'notification.error'\n        }\n      });\n    })[\"finally\"](function () {\n      setIsSubmiting(false);\n      strapi.unlockApp();\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_formik.Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      name: role.name,\n      description: role.description\n    },\n    onSubmit: handleCreateRoleSubmit,\n    validationSchema: _schema[\"default\"]\n  }, function (_ref) {\n    var handleSubmit = _ref.handleSubmit,\n        values = _ref.values,\n        errors = _ref.errors,\n        handleReset = _ref.handleReset,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur;\n    return /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/_react[\"default\"].createElement(_ContainerFluid[\"default\"], {\n      padding: \"0\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_custom.Header, {\n      title: {\n        label: role.name\n      },\n      content: role.description,\n      actions: headerActions(handleSubmit, handleReset),\n      isLoading: isRoleLoading\n    }), /*#__PURE__*/_react[\"default\"].createElement(_BaselineAlignement[\"default\"], {\n      top: true,\n      size: \"3px\"\n    }), /*#__PURE__*/_react[\"default\"].createElement(_FormBloc[\"default\"], {\n      title: formatMessage({\n        id: (0, _getTrad[\"default\"])('EditPage.form.roles'),\n        defaultMessage: 'Role details'\n      }),\n      isLoading: isLoading\n    }, /*#__PURE__*/_react[\"default\"].createElement(_SizedInput[\"default\"], {\n      label: \"Settings.roles.form.input.name\",\n      defaultMessage: \"Name\",\n      name: \"name\",\n      type: \"text\",\n      error: errors.name ? {\n        id: errors.name\n      } : null,\n      onBlur: handleBlur,\n      value: values.name,\n      onChange: handleChange\n    }), /*#__PURE__*/_react[\"default\"].createElement(_SizedInput[\"default\"], {\n      label: \"Settings.roles.form.input.description\",\n      defaultMessage: \"Description\",\n      name: \"description\",\n      type: \"textarea\",\n      error: errors.description ? {\n        id: errors.description\n      } : null,\n      onBlur: handleBlur,\n      value: values.description,\n      onChange: handleChange // Override the default height of the textarea\n      ,\n      style: {\n        height: 115\n      }\n    }))), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      style: {\n        paddingTop: '1.8rem'\n      }\n    }), !isLoading && !isRoleLoading && /*#__PURE__*/_react[\"default\"].createElement(_UsersPermissions[\"default\"], {\n      ref: permissionsRef,\n      permissions: role.permissions,\n      routes: routes,\n      policies: policies\n    }), /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n      top: true,\n      size: \"md\"\n    }));\n  });\n};\n\nvar _default = EditPage;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-users-permissions/admin/src/containers/Roles/EditPage/index.js"],"names":["EditPage","formatMessage","isSubmiting","setIsSubmiting","settingsBaseURL","pluginId","id","params","routes","policies","isLoading","role","isRoleLoading","onSubmitSucceeded","permissionsRef","headerActions","handleSubmit","handleReset","label","defaultMessage","onClick","current","resetForm","color","type","handleCreateRoleSubmit","data","strapi","lockAppWithOverlay","permissions","getPermissions","Promise","resolve","method","body","users","then","name","description","setFormAfterSubmit","notification","toggle","message","err","console","error","unlockApp","schema","values","errors","handleChange","handleBlur","height","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Header } from '@buffetjs/custom';\nimport { Padded } from '@buffetjs/core';\nimport { Formik } from 'formik';\nimport { useIntl } from 'react-intl';\nimport { useRouteMatch } from 'react-router-dom';\nimport { request, useGlobalContext } from 'strapi-helper-plugin';\n\nimport BaselineAlignement from '../../../components/BaselineAlignement';\nimport ContainerFluid from '../../../components/ContainerFluid';\nimport FormCard from '../../../components/FormBloc';\nimport SizedInput from '../../../components/SizedInput';\nimport getTrad from '../../../utils/getTrad';\nimport pluginId from '../../../pluginId';\nimport UsersPermissions from '../../../components/UsersPermissions';\nimport { usePlugins, useFetchRole } from '../../../hooks';\n\nimport schema from './utils/schema';\n\nconst EditPage = () => {\n  const { formatMessage } = useIntl();\n  const [isSubmiting, setIsSubmiting] = useState(false);\n  const { settingsBaseURL } = useGlobalContext();\n  const {\n    params: { id },\n  } = useRouteMatch(`${settingsBaseURL}/${pluginId}/roles/:id`);\n  const { routes, policies, isLoading } = usePlugins();\n  const { role, isLoading: isRoleLoading, onSubmitSucceeded } = useFetchRole(id);\n  const permissionsRef = useRef();\n\n  const headerActions = (handleSubmit, handleReset) => {\n    if (isLoading) {\n      return [];\n    }\n\n    return [\n      {\n        label: formatMessage({\n          id: getTrad('app.components.Button.reset'),\n          defaultMessage: 'Reset',\n        }),\n        onClick: () => {\n          handleReset();\n          permissionsRef.current.resetForm();\n        },\n        color: 'cancel',\n        type: 'button',\n      },\n      {\n        label: formatMessage({\n          id: getTrad('app.components.Button.save'),\n          defaultMessage: 'Save',\n        }),\n        onClick: handleSubmit,\n        color: 'success',\n        type: 'submit',\n        isLoading: isSubmiting,\n      },\n    ];\n  };\n\n  const handleCreateRoleSubmit = data => {\n    strapi.lockAppWithOverlay();\n    setIsSubmiting(true);\n\n    const permissions = permissionsRef.current.getPermissions();\n\n    Promise.resolve(\n      request(`/${pluginId}/roles/${id}`, {\n        method: 'PUT',\n        body: { ...data, ...permissions, users: [] },\n      })\n    )\n      .then(() => {\n        onSubmitSucceeded({ name: data.name, description: data.description });\n        permissionsRef.current.setFormAfterSubmit();\n        strapi.notification.toggle({\n          type: 'success',\n          message: { id: getTrad('Settings.roles.edited') },\n        });\n      })\n      .catch(err => {\n        console.error(err);\n        strapi.notification.toggle({\n          type: 'warning',\n          message: { id: 'notification.error' },\n        });\n      })\n      .finally(() => {\n        setIsSubmiting(false);\n        strapi.unlockApp();\n      });\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{ name: role.name, description: role.description }}\n      onSubmit={handleCreateRoleSubmit}\n      validationSchema={schema}\n    >\n      {({ handleSubmit, values, errors, handleReset, handleChange, handleBlur }) => (\n        <form onSubmit={handleSubmit}>\n          <ContainerFluid padding=\"0\">\n            <Header\n              title={{\n                label: role.name,\n              }}\n              content={role.description}\n              actions={headerActions(handleSubmit, handleReset)}\n              isLoading={isRoleLoading}\n            />\n            <BaselineAlignement top size=\"3px\" />\n            <FormCard\n              title={formatMessage({\n                id: getTrad('EditPage.form.roles'),\n                defaultMessage: 'Role details',\n              })}\n              isLoading={isLoading}\n            >\n              <SizedInput\n                label=\"Settings.roles.form.input.name\"\n                defaultMessage=\"Name\"\n                name=\"name\"\n                type=\"text\"\n                error={errors.name ? { id: errors.name } : null}\n                onBlur={handleBlur}\n                value={values.name}\n                onChange={handleChange}\n              />\n              <SizedInput\n                label=\"Settings.roles.form.input.description\"\n                defaultMessage=\"Description\"\n                name=\"description\"\n                type=\"textarea\"\n                error={errors.description ? { id: errors.description } : null}\n                onBlur={handleBlur}\n                value={values.description}\n                onChange={handleChange}\n                // Override the default height of the textarea\n                style={{ height: 115 }}\n              />\n            </FormCard>\n          </ContainerFluid>\n          <div style={{ paddingTop: '1.8rem' }} />\n          {!isLoading && !isRoleLoading && (\n            <UsersPermissions\n              ref={permissionsRef}\n              permissions={role.permissions}\n              routes={routes}\n              policies={policies}\n            />\n          )}\n          <Padded top size=\"md\" />\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditPage;\n"]},"metadata":{},"sourceType":"script"}