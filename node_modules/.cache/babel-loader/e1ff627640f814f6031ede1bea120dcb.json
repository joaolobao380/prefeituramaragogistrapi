{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTempsIds = exports.getMax = exports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _lodash = require(\"lodash\");\n\nvar getTempsIds = function getTempsIds(alreadyUploadedFiles) {\n  return (0, _toConsumableArray2[\"default\"])(new Set([0].concat((0, _toConsumableArray2[\"default\"])(alreadyUploadedFiles.map(function (file) {\n    return file.tempId;\n  }).filter(function (id) {\n    return !!id;\n  })))));\n};\n\nexports.getTempsIds = getTempsIds;\n\nvar getMax = function getMax(arr) {\n  return Math.max.apply(Math, arr) + 1;\n};\n\nexports.getMax = getMax;\n\nvar createNewFilesToDownloadArray = function createNewFilesToDownloadArray(filesURLArray, alreadyUploadedFiles) {\n  var tempIds = getTempsIds(alreadyUploadedFiles);\n  var max = getMax(tempIds);\n  var arrayToReturn = filesURLArray.reduce(function (acc, current, index) {\n    if ((0, _lodash.isEmpty)(current)) {\n      return acc;\n    }\n\n    try {\n      var url = new URL(current);\n      var name = decodeURIComponent(url.pathname.substring(url.pathname.lastIndexOf('/') + 1));\n      var CancelToken = _axios[\"default\"].CancelToken;\n      var abortController = new AbortController();\n      var source = CancelToken.source();\n      acc.push({\n        abortController: abortController,\n        source: source,\n        file: null,\n        fileInfo: {\n          alternativeText: '',\n          caption: '',\n          name: name\n        },\n        fileURL: url,\n        fileOriginalURL: current,\n        originalName: name,\n        hasError: false,\n        errorMessage: null,\n        isUploading: false,\n        isDownloading: true,\n        tempId: max + index\n      });\n    } catch (err) {// invalid url\n    }\n\n    return acc;\n  }, []);\n  return arrayToReturn;\n};\n\nvar _default = createNewFilesToDownloadArray;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/utils/createNewFilesToDownloadArray.js"],"names":["getTempsIds","alreadyUploadedFiles","Set","map","file","tempId","filter","id","getMax","arr","Math","max","apply","createNewFilesToDownloadArray","filesURLArray","tempIds","arrayToReturn","reduce","acc","current","index","url","URL","name","decodeURIComponent","pathname","substring","lastIndexOf","CancelToken","axios","abortController","AbortController","source","push","fileInfo","alternativeText","caption","fileURL","fileOriginalURL","originalName","hasError","errorMessage","isUploading","isDownloading","err"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAAC,oBAAoB,EAAI;AAC1C,6CAAW,IAAIC,GAAJ,EAAS,CAAT,6CAAeD,oBAAoB,CAACE,GAArB,CAAyB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,MAAT;AAAA,GAA7B,EAA8CC,MAA9C,CAAqD,UAAAC,EAAE;AAAA,WAAI,CAAC,CAACA,EAAN;AAAA,GAAvD,CAAf,GAAX;AACD,CAFD;;;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,GAAG,EAAI;AACpB,SAAOC,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeF,IAAf,EAAqBD,GAArB,IAA4B,CAAnC;AACD,CAFD;;;;AAIA,IAAMI,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,aAAD,EAAgBb,oBAAhB,EAAyC;AAC7E,MAAMc,OAAO,GAAGf,WAAW,CAACC,oBAAD,CAA3B;AACA,MAAMU,GAAG,GAAGH,MAAM,CAACO,OAAD,CAAlB;AAEA,MAAMC,aAAa,GAAGF,aAAa,CAACG,MAAd,CAAqB,UAACC,GAAD,EAAMC,OAAN,EAAeC,KAAf,EAAyB;AAClE,QAAI,qBAAQD,OAAR,CAAJ,EAAsB;AACpB,aAAOD,GAAP;AACD;;AAED,QAAI;AACF,UAAMG,GAAG,GAAG,IAAIC,GAAJ,CAAQH,OAAR,CAAZ;AACA,UAAMI,IAAI,GAAGC,kBAAkB,CAACH,GAAG,CAACI,QAAJ,CAAaC,SAAb,CAAuBL,GAAG,CAACI,QAAJ,CAAaE,WAAb,CAAyB,GAAzB,IAAgC,CAAvD,CAAD,CAA/B;AACA,UAAMC,WAAW,GAAGC,kBAAMD,WAA1B;AACA,UAAME,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACA,UAAMC,MAAM,GAAGJ,WAAW,CAACI,MAAZ,EAAf;AAEAd,MAAAA,GAAG,CAACe,IAAJ,CAAS;AACPH,QAAAA,eAAe,EAAfA,eADO;AAEPE,QAAAA,MAAM,EAANA,MAFO;AAGP5B,QAAAA,IAAI,EAAE,IAHC;AAIP8B,QAAAA,QAAQ,EAAE;AACRC,UAAAA,eAAe,EAAE,EADT;AAERC,UAAAA,OAAO,EAAE,EAFD;AAGRb,UAAAA,IAAI,EAAJA;AAHQ,SAJH;AASPc,QAAAA,OAAO,EAAEhB,GATF;AAUPiB,QAAAA,eAAe,EAAEnB,OAVV;AAWPoB,QAAAA,YAAY,EAAEhB,IAXP;AAYPiB,QAAAA,QAAQ,EAAE,KAZH;AAaPC,QAAAA,YAAY,EAAE,IAbP;AAcPC,QAAAA,WAAW,EAAE,KAdN;AAePC,QAAAA,aAAa,EAAE,IAfR;AAgBPtC,QAAAA,MAAM,EAAEM,GAAG,GAAGS;AAhBP,OAAT;AAkBD,KAzBD,CAyBE,OAAOwB,GAAP,EAAY,CACZ;AACD;;AAED,WAAO1B,GAAP;AACD,GAnCqB,EAmCnB,EAnCmB,CAAtB;AAqCA,SAAOF,aAAP;AACD,CA1CD;;eA4CeH,6B","sourcesContent":["import axios from 'axios';\nimport { isEmpty } from 'lodash';\n\nconst getTempsIds = alreadyUploadedFiles => {\n  return [...new Set([0, ...alreadyUploadedFiles.map(file => file.tempId).filter(id => !!id)])];\n};\n\nconst getMax = arr => {\n  return Math.max.apply(Math, arr) + 1;\n};\n\nconst createNewFilesToDownloadArray = (filesURLArray, alreadyUploadedFiles) => {\n  const tempIds = getTempsIds(alreadyUploadedFiles);\n  const max = getMax(tempIds);\n\n  const arrayToReturn = filesURLArray.reduce((acc, current, index) => {\n    if (isEmpty(current)) {\n      return acc;\n    }\n\n    try {\n      const url = new URL(current);\n      const name = decodeURIComponent(url.pathname.substring(url.pathname.lastIndexOf('/') + 1));\n      const CancelToken = axios.CancelToken;\n      const abortController = new AbortController();\n      const source = CancelToken.source();\n\n      acc.push({\n        abortController,\n        source,\n        file: null,\n        fileInfo: {\n          alternativeText: '',\n          caption: '',\n          name,\n        },\n        fileURL: url,\n        fileOriginalURL: current,\n        originalName: name,\n        hasError: false,\n        errorMessage: null,\n        isUploading: false,\n        isDownloading: true,\n        tempId: max + index,\n      });\n    } catch (err) {\n      // invalid url\n    }\n\n    return acc;\n  }, []);\n\n  return arrayToReturn;\n};\n\nexport default createNewFilesToDownloadArray;\nexport { getMax, getTempsIds };\n"]},"metadata":{},"sourceType":"script"}