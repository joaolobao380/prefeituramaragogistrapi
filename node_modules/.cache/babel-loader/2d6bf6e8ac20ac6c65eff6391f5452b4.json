{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactSelect = require(\"react-select\");\n\nvar _lodash = require(\"lodash\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _styles = require(\"@buffetjs/styles\");\n\nvar _reactFontawesome = require(\"@fortawesome/react-fontawesome\");\n\nvar _constants = _interopRequireDefault(require(\"ee_else_ce/components/Roles/ConditionsModal/ConditionsSelect/MenuList/utils/constants\"));\n\nvar _utils = require(\"../../../utils\");\n\nvar _createCollapsesObject = _interopRequireDefault(require(\"./utils/createCollapsesObject\"));\n\nvar _SubUl = _interopRequireDefault(require(\"./SubUl\"));\n\nvar _Ul = _interopRequireDefault(require(\"./Ul\"));\n\nvar _UpperFirst = _interopRequireDefault(require(\"./UpperFirst\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nvar MenuList = function MenuList(_ref) {\n  var selectProps = _ref.selectProps,\n      rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"selectProps\"]);\n  var Component = _reactSelect.components.MenuList;\n  var arrayOfOptionsGroupedByCategory = selectProps.arrayOfOptionsGroupedByCategory;\n  var initCollapses = (0, _react.useMemo)(function () {\n    return (0, _createCollapsesObject[\"default\"])(arrayOfOptionsGroupedByCategory);\n  }, [arrayOfOptionsGroupedByCategory]);\n\n  var _useState = (0, _react.useState)(initCollapses),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      collapses = _useState2[0],\n      setCollapses = _useState2[1];\n\n  var toggleCollapse = function toggleCollapse(collapseName) {\n    setCollapses(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, (0, _defineProperty2[\"default\"])({}, collapseName, !collapses[collapseName]));\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(Component, rest, /*#__PURE__*/_react[\"default\"].createElement(_Ul[\"default\"], {\n    disabled: _constants[\"default\"]\n  }, arrayOfOptionsGroupedByCategory.map(function (category, index) {\n    var _category = (0, _slicedToArray2[\"default\"])(category, 2),\n        categoryName = _category[0],\n        conditions = _category[1];\n\n    var checkboxName = \"\".concat(selectProps.name, \"..\").concat(categoryName);\n\n    var _getCheckboxState = (0, _utils.getCheckboxState)(selectProps.value),\n        hasAllConditionsSelected = _getCheckboxState.hasAllActionsSelected,\n        hasSomeConditionsSelected = _getCheckboxState.hasSomeActionsSelected;\n\n    return /*#__PURE__*/_react[\"default\"].createElement(\"li\", {\n      key: categoryName\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, {\n      justifyContent: \"space-between\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_styles.Label, {\n      htmlFor: \"overrideReactSelectBehavior\",\n      onClick: function onClick() {\n        if (!_constants[\"default\"]) {\n          selectProps.onCategoryChange({\n            keys: [selectProps.name, categoryName],\n            value: !hasAllConditionsSelected\n          });\n        }\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(_core.Checkbox, {\n      disabled: _constants[\"default\"],\n      id: \"checkCategory\",\n      name: checkboxName,\n      onChange: function onChange() {},\n      someChecked: hasSomeConditionsSelected,\n      value: hasAllConditionsSelected\n    }), /*#__PURE__*/_react[\"default\"].createElement(_UpperFirst[\"default\"], {\n      content: categoryName\n    }))), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      style: {\n        flex: 1,\n        textAlign: 'end',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        return toggleCollapse(categoryName);\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(_reactFontawesome.FontAwesomeIcon, {\n      style: {\n        margin: 'auto',\n        fontSize: '11px',\n        color: '#919bae'\n      },\n      icon: collapses[categoryName] ? 'chevron-up' : 'chevron-down'\n    })))), /*#__PURE__*/_react[\"default\"].createElement(_SubUl[\"default\"], {\n      tag: \"ul\",\n      isOpen: collapses[categoryName]\n    }, conditions.map(function (condition) {\n      var checkboxValue = (0, _lodash.get)(selectProps.value, [categoryName, condition.id], false);\n      return /*#__PURE__*/_react[\"default\"].createElement(\"li\", {\n        key: condition.id\n      }, /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(_styles.Label, {\n        htmlFor: condition.id,\n        message: condition.displayName,\n        onClick: function onClick() {\n          if (!_constants[\"default\"]) {\n            selectProps.onChange({\n              keys: [selectProps.name, categoryName, condition.id],\n              value: !checkboxValue\n            });\n          }\n        }\n      }, /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(_core.Checkbox, {\n        id: \"check\",\n        name: condition.id // Remove the handler\n        ,\n        onChange: function onChange() {},\n        value: checkboxValue\n      }), condition.displayName))));\n    })), index + 1 < arrayOfOptionsGroupedByCategory.length.length && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      style: {\n        paddingTop: '17px'\n      }\n    }));\n  })));\n};\n\nMenuList.propTypes = {\n  selectProps: _propTypes[\"default\"].shape({\n    arrayOfOptionsGroupedByCategory: _propTypes[\"default\"].array.isRequired,\n    name: _propTypes[\"default\"].string.isRequired,\n    onCategoryChange: _propTypes[\"default\"].func.isRequired,\n    onChange: _propTypes[\"default\"].func.isRequired,\n    value: _propTypes[\"default\"].object.isRequired\n  }).isRequired\n};\nvar _default = MenuList;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/components/Roles/ConditionsModal/ConditionsSelect/MenuList/index.js"],"names":["MenuList","selectProps","rest","Component","components","arrayOfOptionsGroupedByCategory","initCollapses","collapses","setCollapses","toggleCollapse","collapseName","prevState","IS_DISABLED","map","category","index","categoryName","conditions","checkboxName","name","value","hasAllConditionsSelected","hasAllActionsSelected","hasSomeConditionsSelected","hasSomeActionsSelected","onCategoryChange","keys","flex","textAlign","cursor","margin","fontSize","color","condition","checkboxValue","id","displayName","onChange","length","paddingTop","propTypes","PropTypes","shape","array","isRequired","string","func","object"],"mappings":";;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,OAA8B;AAAA,MAA3BC,WAA2B,QAA3BA,WAA2B;AAAA,MAAXC,IAAW;AAC7C,MAAMC,SAAS,GAAGC,wBAAWJ,QAA7B;AACA,MAAQK,+BAAR,GAA4CJ,WAA5C,CAAQI,+BAAR;AAEA,MAAMC,aAAa,GAAG,oBAAQ;AAAA,WAAM,uCAAsBD,+BAAtB,CAAN;AAAA,GAAR,EAAsE,CAC1FA,+BAD0F,CAAtE,CAAtB;;AAGA,kBAAkC,qBAASC,aAAT,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,YAAY,EAAI;AACrCF,IAAAA,YAAY,CAAC,UAAAG,SAAS;AAAA,6CAAUA,SAAV,4CAAsBD,YAAtB,EAAqC,CAACH,SAAS,CAACG,YAAD,CAA/C;AAAA,KAAV,CAAZ;AACD,GAFD;;AAIA,sBACE,gCAAC,SAAD,EAAeR,IAAf,eACE,gCAAC,cAAD;AAAI,IAAA,QAAQ,EAAEU;AAAd,KACGP,+BAA+B,CAACQ,GAAhC,CAAoC,UAACC,QAAD,EAAWC,KAAX,EAAqB;AACxD,oDAAmCD,QAAnC;AAAA,QAAOE,YAAP;AAAA,QAAqBC,UAArB;;AACA,QAAMC,YAAY,aAAMjB,WAAW,CAACkB,IAAlB,eAA2BH,YAA3B,CAAlB;;AAEA,4BAGI,6BAAiBf,WAAW,CAACmB,KAA7B,CAHJ;AAAA,QACyBC,wBADzB,qBACEC,qBADF;AAAA,QAE0BC,yBAF1B,qBAEEC,sBAFF;;AAKA,wBACE;AAAI,MAAA,GAAG,EAAER;AAAT,oBACE,0DACE,gCAAC,UAAD;AAAM,MAAA,cAAc,EAAC;AAArB,oBACE,gCAAC,aAAD;AACE,MAAA,OAAO,EAAC,6BADV;AAEE,MAAA,OAAO,EAAE,mBAAM;AACb,YAAI,CAACJ,qBAAL,EAAkB;AAChBX,UAAAA,WAAW,CAACwB,gBAAZ,CAA6B;AAC3BC,YAAAA,IAAI,EAAE,CAACzB,WAAW,CAACkB,IAAb,EAAmBH,YAAnB,CADqB;AAE3BI,YAAAA,KAAK,EAAE,CAACC;AAFmB,WAA7B;AAID;AACF;AATH,oBAWE,gCAAC,UAAD,qBACE,gCAAC,cAAD;AACE,MAAA,QAAQ,EAAET,qBADZ;AAEE,MAAA,EAAE,EAAC,eAFL;AAGE,MAAA,IAAI,EAAEM,YAHR;AAIE,MAAA,QAAQ,EAAE,oBAAM,CAAE,CAJpB;AAKE,MAAA,WAAW,EAAEK,yBALf;AAME,MAAA,KAAK,EAAEF;AANT,MADF,eASE,gCAAC,sBAAD;AAAY,MAAA,OAAO,EAAEL;AAArB,MATF,CAXF,CADF,eAwBE;AACE,MAAA,KAAK,EAAE;AAAEW,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OADT;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMpB,cAAc,CAACO,YAAD,CAApB;AAAA;AAFX,oBAIE,gCAAC,iCAAD;AACE,MAAA,KAAK,EAAE;AACLc,QAAAA,MAAM,EAAE,MADH;AAELC,QAAAA,QAAQ,EAAE,MAFL;AAGLC,QAAAA,KAAK,EAAE;AAHF,OADT;AAME,MAAA,IAAI,EAAEzB,SAAS,CAACS,YAAD,CAAT,GAA0B,YAA1B,GAAyC;AANjD,MAJF,CAxBF,CADF,CADF,eAyCE,gCAAC,iBAAD;AAAO,MAAA,GAAG,EAAC,IAAX;AAAgB,MAAA,MAAM,EAAET,SAAS,CAACS,YAAD;AAAjC,OACGC,UAAU,CAACJ,GAAX,CAAe,UAAAoB,SAAS,EAAI;AAC3B,UAAMC,aAAa,GAAG,iBAAIjC,WAAW,CAACmB,KAAhB,EAAuB,CAACJ,YAAD,EAAeiB,SAAS,CAACE,EAAzB,CAAvB,EAAqD,KAArD,CAAtB;AAEA,0BACE;AAAI,QAAA,GAAG,EAAEF,SAAS,CAACE;AAAnB,sBACE,gCAAC,UAAD,qBACE,gCAAC,aAAD;AACE,QAAA,OAAO,EAAEF,SAAS,CAACE,EADrB;AAEE,QAAA,OAAO,EAAEF,SAAS,CAACG,WAFrB;AAGE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI,CAACxB,qBAAL,EAAkB;AAChBX,YAAAA,WAAW,CAACoC,QAAZ,CAAqB;AACnBX,cAAAA,IAAI,EAAE,CAACzB,WAAW,CAACkB,IAAb,EAAmBH,YAAnB,EAAiCiB,SAAS,CAACE,EAA3C,CADa;AAEnBf,cAAAA,KAAK,EAAE,CAACc;AAFW,aAArB;AAID;AACF;AAVH,sBAYE,gCAAC,UAAD,qBACE,gCAAC,cAAD;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,IAAI,EAAED,SAAS,CAACE,EAFlB,CAGE;AAHF;AAIE,QAAA,QAAQ,EAAE,oBAAM,CAAE,CAJpB;AAKE,QAAA,KAAK,EAAED;AALT,QADF,EAQGD,SAAS,CAACG,WARb,CAZF,CADF,CADF,CADF;AA6BD,KAhCA,CADH,CAzCF,EA4EGrB,KAAK,GAAG,CAAR,GAAYV,+BAA+B,CAACiC,MAAhC,CAAuCA,MAAnD,iBACC;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd;AAAZ,MA7EJ,CADF;AAkFD,GA3FA,CADH,CADF,CADF;AAkGD,CA/GD;;AAiHAvC,QAAQ,CAACwC,SAAT,GAAqB;AACnBvC,EAAAA,WAAW,EAAEwC,sBAAUC,KAAV,CAAgB;AAC3BrC,IAAAA,+BAA+B,EAAEoC,sBAAUE,KAAV,CAAgBC,UADtB;AAE3BzB,IAAAA,IAAI,EAAEsB,sBAAUI,MAAV,CAAiBD,UAFI;AAG3BnB,IAAAA,gBAAgB,EAAEgB,sBAAUK,IAAV,CAAeF,UAHN;AAI3BP,IAAAA,QAAQ,EAAEI,sBAAUK,IAAV,CAAeF,UAJE;AAK3BxB,IAAAA,KAAK,EAAEqB,sBAAUM,MAAV,CAAiBH;AALG,GAAhB,EAMVA;AAPgB,CAArB;eASe5C,Q","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { components } from 'react-select';\nimport { get } from 'lodash';\nimport { Checkbox, Flex } from '@buffetjs/core';\nimport { Label } from '@buffetjs/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport IS_DISABLED from 'ee_else_ce/components/Roles/ConditionsModal/ConditionsSelect/MenuList/utils/constants';\nimport { getCheckboxState } from '../../../utils';\nimport createCollapsesObject from './utils/createCollapsesObject';\nimport SubUl from './SubUl';\nimport Ul from './Ul';\nimport UpperFirst from './UpperFirst';\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nconst MenuList = ({ selectProps, ...rest }) => {\n  const Component = components.MenuList;\n  const { arrayOfOptionsGroupedByCategory } = selectProps;\n\n  const initCollapses = useMemo(() => createCollapsesObject(arrayOfOptionsGroupedByCategory), [\n    arrayOfOptionsGroupedByCategory,\n  ]);\n  const [collapses, setCollapses] = useState(initCollapses);\n\n  const toggleCollapse = collapseName => {\n    setCollapses(prevState => ({ ...prevState, [collapseName]: !collapses[collapseName] }));\n  };\n\n  return (\n    <Component {...rest}>\n      <Ul disabled={IS_DISABLED}>\n        {arrayOfOptionsGroupedByCategory.map((category, index) => {\n          const [categoryName, conditions] = category;\n          const checkboxName = `${selectProps.name}..${categoryName}`;\n\n          const {\n            hasAllActionsSelected: hasAllConditionsSelected,\n            hasSomeActionsSelected: hasSomeConditionsSelected,\n          } = getCheckboxState(selectProps.value);\n\n          return (\n            <li key={categoryName}>\n              <div>\n                <Flex justifyContent=\"space-between\">\n                  <Label\n                    htmlFor=\"overrideReactSelectBehavior\"\n                    onClick={() => {\n                      if (!IS_DISABLED) {\n                        selectProps.onCategoryChange({\n                          keys: [selectProps.name, categoryName],\n                          value: !hasAllConditionsSelected,\n                        });\n                      }\n                    }}\n                  >\n                    <Flex>\n                      <Checkbox\n                        disabled={IS_DISABLED}\n                        id=\"checkCategory\"\n                        name={checkboxName}\n                        onChange={() => {}}\n                        someChecked={hasSomeConditionsSelected}\n                        value={hasAllConditionsSelected}\n                      />\n                      <UpperFirst content={categoryName} />\n                    </Flex>\n                  </Label>\n                  <div\n                    style={{ flex: 1, textAlign: 'end', cursor: 'pointer' }}\n                    onClick={() => toggleCollapse(categoryName)}\n                  >\n                    <FontAwesomeIcon\n                      style={{\n                        margin: 'auto',\n                        fontSize: '11px',\n                        color: '#919bae',\n                      }}\n                      icon={collapses[categoryName] ? 'chevron-up' : 'chevron-down'}\n                    />\n                  </div>\n                </Flex>\n              </div>\n              <SubUl tag=\"ul\" isOpen={collapses[categoryName]}>\n                {conditions.map(condition => {\n                  const checkboxValue = get(selectProps.value, [categoryName, condition.id], false);\n\n                  return (\n                    <li key={condition.id}>\n                      <Flex>\n                        <Label\n                          htmlFor={condition.id}\n                          message={condition.displayName}\n                          onClick={() => {\n                            if (!IS_DISABLED) {\n                              selectProps.onChange({\n                                keys: [selectProps.name, categoryName, condition.id],\n                                value: !checkboxValue,\n                              });\n                            }\n                          }}\n                        >\n                          <Flex>\n                            <Checkbox\n                              id=\"check\"\n                              name={condition.id}\n                              // Remove the handler\n                              onChange={() => {}}\n                              value={checkboxValue}\n                            />\n                            {condition.displayName}\n                          </Flex>\n                        </Label>\n                      </Flex>\n                    </li>\n                  );\n                })}\n              </SubUl>\n              {index + 1 < arrayOfOptionsGroupedByCategory.length.length && (\n                <div style={{ paddingTop: '17px' }} />\n              )}\n            </li>\n          );\n        })}\n      </Ul>\n    </Component>\n  );\n};\n\nMenuList.propTypes = {\n  selectProps: PropTypes.shape({\n    arrayOfOptionsGroupedByCategory: PropTypes.array.isRequired,\n    name: PropTypes.string.isRequired,\n    onCategoryChange: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.object.isRequired,\n  }).isRequired,\n};\nexport default MenuList;\n"]},"metadata":{},"sourceType":"script"}