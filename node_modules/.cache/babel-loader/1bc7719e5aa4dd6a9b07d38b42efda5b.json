{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialState = exports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _immer = _interopRequireDefault(require(\"immer\"));\n\nvar _lodash = require(\"lodash\");\n\nvar initialState = {\n  formErrors: {},\n  isLoading: true,\n  initialData: {},\n  modifiedData: {}\n};\nexports.initialState = initialState;\n\nvar reducer = function reducer(state, action) {\n  return (// eslint-disable-next-line consistent-return\n    (0, _immer[\"default\"])(state, function (draftState) {\n      switch (action.type) {\n        case 'GET_DATA':\n          {\n            draftState.isLoading = true;\n            draftState.initialData = {};\n            draftState.modifiedData = {};\n            break;\n          }\n\n        case 'GET_DATA_SUCCEEDED':\n          {\n            draftState.isLoading = false;\n            draftState.initialData = action.data;\n            draftState.modifiedData = action.data;\n            break;\n          }\n\n        case 'GET_DATA_ERROR':\n          {\n            draftState.isLoading = true;\n            break;\n          }\n\n        case 'ON_CHANGE':\n          {\n            (0, _lodash.set)(draftState, ['modifiedData'].concat((0, _toConsumableArray2[\"default\"])(action.keys.split('.'))), action.value);\n            break;\n          }\n\n        case 'ON_SUBMIT_SUCCEEDED':\n          {\n            draftState.initialData = state.modifiedData;\n            draftState.formErrors = {};\n            break;\n          }\n\n        case 'RESET_FORM':\n          {\n            draftState.modifiedData = state.initialData;\n            draftState.formErrors = {};\n            break;\n          }\n\n        case 'SET_ERRORS':\n          {\n            draftState.formErrors = action.errors;\n            break;\n          }\n\n        default:\n          {\n            return draftState;\n          }\n      }\n    })\n  );\n};\n\nvar _default = reducer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-users-permissions/admin/src/hooks/useForm/reducer.js"],"names":["initialState","formErrors","isLoading","initialData","modifiedData","reducer","state","action","draftState","type","data","keys","split","value","errors"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,WAAW,EAAE,EAHM;AAInBC,EAAAA,YAAY,EAAE;AAJK,CAArB;;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR;AAAA,SACd;AACA,2BAAQD,KAAR,EAAe,UAAAE,UAAU,EAAI;AAC3B,cAAQD,MAAM,CAACE,IAAf;AACE,aAAK,UAAL;AAAiB;AACfD,YAAAA,UAAU,CAACN,SAAX,GAAuB,IAAvB;AACAM,YAAAA,UAAU,CAACL,WAAX,GAAyB,EAAzB;AACAK,YAAAA,UAAU,CAACJ,YAAX,GAA0B,EAA1B;AAEA;AACD;;AAED,aAAK,oBAAL;AAA2B;AACzBI,YAAAA,UAAU,CAACN,SAAX,GAAuB,KAAvB;AACAM,YAAAA,UAAU,CAACL,WAAX,GAAyBI,MAAM,CAACG,IAAhC;AACAF,YAAAA,UAAU,CAACJ,YAAX,GAA0BG,MAAM,CAACG,IAAjC;AAEA;AACD;;AACD,aAAK,gBAAL;AAAuB;AACrBF,YAAAA,UAAU,CAACN,SAAX,GAAuB,IAAvB;AACA;AACD;;AACD,aAAK,WAAL;AAAkB;AAChB,6BAAIM,UAAJ,GAAiB,cAAjB,6CAAoCD,MAAM,CAACI,IAAP,CAAYC,KAAZ,CAAkB,GAAlB,CAApC,IAA6DL,MAAM,CAACM,KAApE;AACA;AACD;;AACD,aAAK,qBAAL;AAA4B;AAC1BL,YAAAA,UAAU,CAACL,WAAX,GAAyBG,KAAK,CAACF,YAA/B;AACAI,YAAAA,UAAU,CAACP,UAAX,GAAwB,EAAxB;AACA;AACD;;AACD,aAAK,YAAL;AAAmB;AACjBO,YAAAA,UAAU,CAACJ,YAAX,GAA0BE,KAAK,CAACH,WAAhC;AACAK,YAAAA,UAAU,CAACP,UAAX,GAAwB,EAAxB;AACA;AACD;;AACD,aAAK,YAAL;AAAmB;AACjBO,YAAAA,UAAU,CAACP,UAAX,GAAwBM,MAAM,CAACO,MAA/B;AACA;AACD;;AACD;AAAS;AACP,mBAAON,UAAP;AACD;AAxCH;AA0CD,KA3CD;AAFc;AAAA,CAAhB;;eA+CeH,O","sourcesContent":["import produce from 'immer';\nimport { set } from 'lodash';\n\nconst initialState = {\n  formErrors: {},\n  isLoading: true,\n  initialData: {},\n  modifiedData: {},\n};\n\nconst reducer = (state, action) =>\n  // eslint-disable-next-line consistent-return\n  produce(state, draftState => {\n    switch (action.type) {\n      case 'GET_DATA': {\n        draftState.isLoading = true;\n        draftState.initialData = {};\n        draftState.modifiedData = {};\n\n        break;\n      }\n\n      case 'GET_DATA_SUCCEEDED': {\n        draftState.isLoading = false;\n        draftState.initialData = action.data;\n        draftState.modifiedData = action.data;\n\n        break;\n      }\n      case 'GET_DATA_ERROR': {\n        draftState.isLoading = true;\n        break;\n      }\n      case 'ON_CHANGE': {\n        set(draftState, ['modifiedData', ...action.keys.split('.')], action.value);\n        break;\n      }\n      case 'ON_SUBMIT_SUCCEEDED': {\n        draftState.initialData = state.modifiedData;\n        draftState.formErrors = {};\n        break;\n      }\n      case 'RESET_FORM': {\n        draftState.modifiedData = state.initialData;\n        draftState.formErrors = {};\n        break;\n      }\n      case 'SET_ERRORS': {\n        draftState.formErrors = action.errors;\n        break;\n      }\n      default: {\n        return draftState;\n      }\n    }\n  });\n\nexport default reducer;\nexport { initialState };\n"]},"metadata":{},"sourceType":"script"}