{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDnd = require(\"react-dnd\");\n\nvar _reactDndHtml5Backend = require(\"react-dnd-html5-backend\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _useLayoutDnd2 = _interopRequireDefault(require(\"../../hooks/useLayoutDnd\"));\n\nvar _DraggedFieldWithPreview = _interopRequireDefault(require(\"../DraggedFieldWithPreview\"));\n\nvar _ItemTypes = _interopRequireDefault(require(\"../../utils/ItemTypes\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Item = function Item(_ref) {\n  var componentUid = _ref.componentUid,\n      dynamicZoneComponents = _ref.dynamicZoneComponents,\n      itemIndex = _ref.itemIndex,\n      moveItem = _ref.moveItem,\n      moveRow = _ref.moveRow,\n      name = _ref.name,\n      removeField = _ref.removeField,\n      rowIndex = _ref.rowIndex,\n      size = _ref.size,\n      type = _ref.type;\n\n  var _useLayoutDnd = (0, _useLayoutDnd2[\"default\"])(),\n      goTo = _useLayoutDnd.goTo,\n      componentLayouts = _useLayoutDnd.componentLayouts,\n      metadatas = _useLayoutDnd.metadatas,\n      setEditFieldToSelect = _useLayoutDnd.setEditFieldToSelect,\n      selectedItemName = _useLayoutDnd.selectedItemName,\n      setIsDraggingSibling = _useLayoutDnd.setIsDraggingSibling;\n\n  var dragRef = (0, _react.useRef)(null);\n  var dropRef = (0, _react.useRef)(null);\n\n  var _useDrop = (0, _reactDnd.useDrop)({\n    // Source code from http://react-dnd.github.io/react-dnd/examples/sortable/simple\n    // And also from https://codesandbox.io/s/6v7l7z68jk\n    accept: _ItemTypes[\"default\"].EDIT_FIELD,\n    hover: function hover(item, monitor) {\n      if (!dropRef.current) {\n        return;\n      } // We use the hover only to reorder full size items\n\n\n      // We use the hover only to reorder full size items\n      if (item.size !== 12) {\n        return;\n      }\n\n      var dragIndex = monitor.getItem().itemIndex;\n      var hoverIndex = itemIndex;\n      var dragRow = monitor.getItem().rowIndex;\n      var targetRow = rowIndex; // Don't replace item with themselves\n\n      // Don't replace item with themselves\n      if (dragIndex === hoverIndex && dragRow === targetRow) {\n        return;\n      } // Determine rectangle on screen\n\n\n      // Determine rectangle on screen\n      var hoverBoundingRect = dropRef.current.getBoundingClientRect(); // Get vertical middle\n\n      // Get vertical middle\n      var hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2; // Determine mouse position\n\n      // Determine mouse position\n      var clientOffset = monitor.getClientOffset(); // Get pixels to the top\n\n      // Get pixels to the top\n      var hoverClientY = clientOffset.y - hoverBoundingRect.top; // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragRow < targetRow && hoverClientY < hoverMiddleY) {\n        return;\n      } // Dragging upwards\n\n\n      // Dragging upwards\n      if (dragRow > targetRow && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      moveRow(dragRow, targetRow);\n      item.rowIndex = targetRow;\n      item.itemIndex = hoverIndex;\n    },\n    drop: function drop(item, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n\n      var dragIndex = monitor.getItem().itemIndex;\n      var hoverIndex = itemIndex;\n      var dragRow = monitor.getItem().rowIndex;\n      var targetRow = rowIndex; // Don't reorder on drop for full size elements since it is already done in the hover\n\n      // Don't reorder on drop for full size elements since it is already done in the hover\n      if (item.size === 12) {\n        return;\n      } // Don't replace item with themselves\n\n\n      // Don't replace item with themselves\n      if (dragIndex === hoverIndex && dragRow === targetRow) {\n        return;\n      } // Determine rectangle on screen\n\n\n      // Determine rectangle on screen\n      var hoverBoundingRect = dropRef.current.getBoundingClientRect(); // Scroll window if mouse near vertical edge(100px)\n      // Horizontal Check --\n\n      // Scroll window if mouse near vertical edge(100px)\n      // Horizontal Check --\n      if (Math.abs(monitor.getClientOffset().x - hoverBoundingRect.left) > hoverBoundingRect.width / 1.8) {\n        moveItem(dragIndex, hoverIndex + 1, dragRow, targetRow);\n        item.itemIndex = hoverIndex + 1;\n        item.rowIndex = targetRow;\n        return;\n      } // Vertical Check |\n      // Time to actually perform the action\n\n\n      // Vertical Check |\n      // Time to actually perform the action\n      moveItem(dragIndex, hoverIndex, dragRow, targetRow); // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.itemIndex = hoverIndex;\n      item.rowIndex = targetRow;\n    },\n    collect: function collect(monitor) {\n      return {\n        canDrop: monitor.canDrop(),\n        clientOffset: monitor.getClientOffset(),\n        isOver: monitor.isOver(),\n        isOverCurrent: monitor.isOver({\n          shallow: true\n        }),\n        itemType: monitor.getItemType()\n      };\n    }\n  }),\n      _useDrop2 = (0, _slicedToArray2[\"default\"])(_useDrop, 2),\n      _useDrop2$ = _useDrop2[0],\n      clientOffset = _useDrop2$.clientOffset,\n      isOver = _useDrop2$.isOver,\n      drop = _useDrop2[1];\n\n  var _useDrag = (0, _reactDnd.useDrag)({\n    begin: function begin() {\n      setIsDraggingSibling(true);\n    },\n    canDrag: function canDrag() {\n      // Each row of the layout has a max size of 12 (based on bootstrap grid system)\n      // So in order to offer a better drop zone we add the _TEMP_ div to complete the remaining substract (12 - existing)\n      // Those divs cannot be dragged\n      // If we wanted to offer the ability to create new lines in the layout (which will come later)\n      // We will need to add a 12 size _TEMP_ div to offer a drop target between each existing row.\n      return name !== '_TEMP_';\n    },\n    collect: function collect(monitor) {\n      return {\n        isDragging: monitor.isDragging(),\n        getItem: monitor.getItem()\n      };\n    },\n    end: function end() {\n      setIsDraggingSibling(false);\n    },\n    item: {\n      type: _ItemTypes[\"default\"].EDIT_FIELD,\n      itemIndex: itemIndex,\n      rowIndex: rowIndex,\n      name: name,\n      size: size\n    }\n  }),\n      _useDrag2 = (0, _slicedToArray2[\"default\"])(_useDrag, 3),\n      _useDrag2$ = _useDrag2[0],\n      isDragging = _useDrag2$.isDragging,\n      getItem = _useDrag2$.getItem,\n      drag = _useDrag2[1],\n      preview = _useDrag2[2]; // Remove the default preview when the item is being dragged\n  // The preview is handled by the DragLayer\n\n\n  (0, _react.useEffect)(function () {\n    preview((0, _reactDndHtml5Backend.getEmptyImage)(), {\n      captureDraggingState: true\n    });\n  }, [preview]); // Create the refs\n  // We need 1 for the drop target\n  // 1 for the drag target\n\n  var refs = {\n    dragRef: drag(dragRef),\n    dropRef: drop(dropRef)\n  };\n  var showLeftCarret = false;\n  var showRightCarret = false;\n\n  if (dropRef.current && clientOffset) {\n    var hoverBoundingRect = dropRef.current.getBoundingClientRect();\n    showLeftCarret = isOver && getItem.size !== 12 && Math.abs(clientOffset.x - hoverBoundingRect.left) < hoverBoundingRect.width / 2;\n    showRightCarret = isOver && getItem.size !== 12 && Math.abs(clientOffset.x - hoverBoundingRect.left) > hoverBoundingRect.width / 2;\n\n    if (name === '_TEMP_') {\n      showLeftCarret = isOver && getItem.size !== 12;\n      showRightCarret = false;\n    }\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_DraggedFieldWithPreview[\"default\"], {\n    goTo: goTo,\n    componentUid: componentUid,\n    componentLayouts: componentLayouts,\n    dynamicZoneComponents: dynamicZoneComponents,\n    isDragging: isDragging,\n    label: (0, _lodash.get)(metadatas, [name, 'edit', 'label'], ''),\n    name: name,\n    onClickEdit: setEditFieldToSelect,\n    onClickRemove: function onClickRemove(e) {\n      e.stopPropagation();\n      removeField(rowIndex, itemIndex);\n    },\n    selectedItem: selectedItemName,\n    showLeftCarret: showLeftCarret,\n    showRightCarret: showRightCarret,\n    size: size,\n    type: type,\n    ref: refs\n  });\n};\n\nItem.defaultProps = {\n  componentUid: '',\n  dynamicZoneComponents: [],\n  type: 'string'\n};\nItem.propTypes = {\n  componentUid: _propTypes[\"default\"].string,\n  dynamicZoneComponents: _propTypes[\"default\"].array,\n  itemIndex: _propTypes[\"default\"].number.isRequired,\n  moveItem: _propTypes[\"default\"].func.isRequired,\n  moveRow: _propTypes[\"default\"].func.isRequired,\n  name: _propTypes[\"default\"].string.isRequired,\n  removeField: _propTypes[\"default\"].func.isRequired,\n  rowIndex: _propTypes[\"default\"].number.isRequired,\n  size: _propTypes[\"default\"].number.isRequired,\n  type: _propTypes[\"default\"].string\n};\nvar _default = Item;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/components/FieldsReorder/Item.js"],"names":["Item","componentUid","dynamicZoneComponents","itemIndex","moveItem","moveRow","name","removeField","rowIndex","size","type","goTo","componentLayouts","metadatas","setEditFieldToSelect","selectedItemName","setIsDraggingSibling","dragRef","dropRef","accept","ItemTypes","EDIT_FIELD","hover","item","monitor","current","dragIndex","getItem","hoverIndex","dragRow","targetRow","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","drop","Math","abs","x","left","width","collect","canDrop","isOver","isOverCurrent","shallow","itemType","getItemType","begin","canDrag","isDragging","end","drag","preview","captureDraggingState","refs","showLeftCarret","showRightCarret","e","stopPropagation","defaultProps","propTypes","PropTypes","string","array","number","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash';\n\nimport useLayoutDnd from '../../hooks/useLayoutDnd';\nimport DraggedFieldWithPreview from '../DraggedFieldWithPreview';\n\nimport ItemTypes from '../../utils/ItemTypes';\n\nconst Item = ({\n  componentUid,\n  dynamicZoneComponents,\n  itemIndex,\n  moveItem,\n  moveRow,\n  name,\n  removeField,\n  rowIndex,\n  size,\n  type,\n}) => {\n  const {\n    goTo,\n    componentLayouts,\n    metadatas,\n    setEditFieldToSelect,\n    selectedItemName,\n    setIsDraggingSibling,\n  } = useLayoutDnd();\n  const dragRef = useRef(null);\n  const dropRef = useRef(null);\n  const [{ clientOffset, isOver }, drop] = useDrop({\n    // Source code from http://react-dnd.github.io/react-dnd/examples/sortable/simple\n    // And also from https://codesandbox.io/s/6v7l7z68jk\n    accept: ItemTypes.EDIT_FIELD,\n    hover(item, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n\n      // We use the hover only to reorder full size items\n      if (item.size !== 12) {\n        return;\n      }\n\n      const dragIndex = monitor.getItem().itemIndex;\n      const hoverIndex = itemIndex;\n      const dragRow = monitor.getItem().rowIndex;\n      const targetRow = rowIndex;\n\n      // Don't replace item with themselves\n      if (dragIndex === hoverIndex && dragRow === targetRow) {\n        return;\n      }\n\n      // Determine rectangle on screen\n      const hoverBoundingRect = dropRef.current.getBoundingClientRect();\n\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n\n      // Dragging downwards\n      if (dragRow < targetRow && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      // Dragging upwards\n      if (dragRow > targetRow && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      moveRow(dragRow, targetRow);\n\n      item.rowIndex = targetRow;\n      item.itemIndex = hoverIndex;\n    },\n    drop(item, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n\n      const dragIndex = monitor.getItem().itemIndex;\n      const hoverIndex = itemIndex;\n      const dragRow = monitor.getItem().rowIndex;\n      const targetRow = rowIndex;\n\n      // Don't reorder on drop for full size elements since it is already done in the hover\n      if (item.size === 12) {\n        return;\n      }\n\n      // Don't replace item with themselves\n      if (dragIndex === hoverIndex && dragRow === targetRow) {\n        return;\n      }\n\n      // Determine rectangle on screen\n      const hoverBoundingRect = dropRef.current.getBoundingClientRect();\n\n      // Scroll window if mouse near vertical edge(100px)\n\n      // Horizontal Check --\n      if (\n        Math.abs(monitor.getClientOffset().x - hoverBoundingRect.left) >\n        hoverBoundingRect.width / 1.8\n      ) {\n        moveItem(dragIndex, hoverIndex + 1, dragRow, targetRow);\n\n        item.itemIndex = hoverIndex + 1;\n        item.rowIndex = targetRow;\n\n        return;\n      }\n\n      // Vertical Check |\n\n      // Time to actually perform the action\n      moveItem(dragIndex, hoverIndex, dragRow, targetRow);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n\n      item.itemIndex = hoverIndex;\n      item.rowIndex = targetRow;\n    },\n    collect: monitor => ({\n      canDrop: monitor.canDrop(),\n      clientOffset: monitor.getClientOffset(),\n      isOver: monitor.isOver(),\n      isOverCurrent: monitor.isOver({ shallow: true }),\n      itemType: monitor.getItemType(),\n    }),\n  });\n  const [{ isDragging, getItem }, drag, preview] = useDrag({\n    begin: () => {\n      setIsDraggingSibling(true);\n    },\n    canDrag() {\n      // Each row of the layout has a max size of 12 (based on bootstrap grid system)\n      // So in order to offer a better drop zone we add the _TEMP_ div to complete the remaining substract (12 - existing)\n      // Those divs cannot be dragged\n      // If we wanted to offer the ability to create new lines in the layout (which will come later)\n      // We will need to add a 12 size _TEMP_ div to offer a drop target between each existing row.\n      return name !== '_TEMP_';\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      getItem: monitor.getItem(),\n    }),\n    end: () => {\n      setIsDraggingSibling(false);\n    },\n    item: { type: ItemTypes.EDIT_FIELD, itemIndex, rowIndex, name, size },\n  });\n\n  // Remove the default preview when the item is being dragged\n  // The preview is handled by the DragLayer\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true });\n  }, [preview]);\n\n  // Create the refs\n  // We need 1 for the drop target\n  // 1 for the drag target\n  const refs = {\n    dragRef: drag(dragRef),\n    dropRef: drop(dropRef),\n  };\n\n  let showLeftCarret = false;\n  let showRightCarret = false;\n\n  if (dropRef.current && clientOffset) {\n    const hoverBoundingRect = dropRef.current.getBoundingClientRect();\n\n    showLeftCarret =\n      isOver &&\n      getItem.size !== 12 &&\n      Math.abs(clientOffset.x - hoverBoundingRect.left) <\n        hoverBoundingRect.width / 2;\n    showRightCarret =\n      isOver &&\n      getItem.size !== 12 &&\n      Math.abs(clientOffset.x - hoverBoundingRect.left) >\n        hoverBoundingRect.width / 2;\n\n    if (name === '_TEMP_') {\n      showLeftCarret = isOver && getItem.size !== 12;\n      showRightCarret = false;\n    }\n  }\n\n  return (\n    <DraggedFieldWithPreview\n      goTo={goTo}\n      componentUid={componentUid}\n      componentLayouts={componentLayouts}\n      dynamicZoneComponents={dynamicZoneComponents}\n      isDragging={isDragging}\n      label={get(metadatas, [name, 'edit', 'label'], '')}\n      name={name}\n      onClickEdit={setEditFieldToSelect}\n      onClickRemove={e => {\n        e.stopPropagation();\n        removeField(rowIndex, itemIndex);\n      }}\n      selectedItem={selectedItemName}\n      showLeftCarret={showLeftCarret}\n      showRightCarret={showRightCarret}\n      size={size}\n      type={type}\n      ref={refs}\n    />\n  );\n};\n\nItem.defaultProps = {\n  componentUid: '',\n  dynamicZoneComponents: [],\n  type: 'string',\n};\n\nItem.propTypes = {\n  componentUid: PropTypes.string,\n  dynamicZoneComponents: PropTypes.array,\n  itemIndex: PropTypes.number.isRequired,\n  moveItem: PropTypes.func.isRequired,\n  moveRow: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  removeField: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  size: PropTypes.number.isRequired,\n  type: PropTypes.string,\n};\n\nexport default Item;\n"]},"metadata":{},"sourceType":"script"}