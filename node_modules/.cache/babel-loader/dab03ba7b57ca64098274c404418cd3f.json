{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.LanguageProvider = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reselect = require(\"reselect\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _lodash = require(\"lodash\");\n\nvar _selectors = require(\"./selectors\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n// eslint-disable-next-line react/prefer-stateless-function\nvar LanguageProvider = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(LanguageProvider, _React$Component);\n\n  var _super = _createSuper(LanguageProvider);\n\n  function LanguageProvider() {\n    (0, _classCallCheck2[\"default\"])(this, LanguageProvider);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2[\"default\"])(LanguageProvider, [{\n    key: \"render\",\n    value: function render() {\n      var messages = (0, _lodash.defaultsDeep)(this.props.messages[this.props.locale], this.props.messages.en);\n      return /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.IntlProvider, {\n        locale: this.props.locale,\n        defaultLocale: \"en\",\n        messages: messages,\n        textComponent: \"span\"\n      }, _react[\"default\"].Children.only(this.props.children));\n    }\n  }]);\n  return LanguageProvider;\n}(_react[\"default\"].Component);\n\nexports.LanguageProvider = LanguageProvider;\nLanguageProvider.propTypes = {\n  children: _propTypes[\"default\"].element.isRequired,\n  locale: _propTypes[\"default\"].string.isRequired,\n  messages: _propTypes[\"default\"].object.isRequired\n};\nvar mapStateToProps = (0, _reselect.createSelector)((0, _selectors.selectLocale)(), function (locale) {\n  return {\n    locale: locale\n  };\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch: dispatch\n  };\n}\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(LanguageProvider);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/containers/LanguageProvider/index.js"],"names":["LanguageProvider","messages","props","locale","en","React","Children","only","children","Component","propTypes","PropTypes","element","isRequired","string","object","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;;AAQA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA;IACaA,gB;;;;;;;;;;;;WACX,kBAAS;AACP,UAAMC,QAAQ,GAAG,0BAAa,KAAKC,KAAL,CAAWD,QAAX,CAAoB,KAAKC,KAAL,CAAWC,MAA/B,CAAb,EAAqD,KAAKD,KAAL,CAAWD,QAAX,CAAoBG,EAAzE,CAAjB;AAEA,0BACE,gCAAC,uBAAD;AACE,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,MADrB;AAEE,QAAA,aAAa,EAAC,IAFhB;AAGE,QAAA,QAAQ,EAAEF,QAHZ;AAIE,QAAA,aAAa,EAAC;AAJhB,SAMGI,kBAAMC,QAAN,CAAeC,IAAf,CAAoB,KAAKL,KAAL,CAAWM,QAA/B,CANH,CADF;AAUD;;;EAdmCH,kBAAMI,S;;;AAiB5CT,gBAAgB,CAACU,SAAjB,GAA6B;AAC3BF,EAAAA,QAAQ,EAAEG,sBAAUC,OAAV,CAAkBC,UADD;AAE3BV,EAAAA,MAAM,EAAEQ,sBAAUG,MAAV,CAAiBD,UAFE;AAG3BZ,EAAAA,QAAQ,EAAEU,sBAAUI,MAAV,CAAiBF;AAHA,CAA7B;AAMA,IAAMG,eAAe,GAAG,8BAAe,8BAAf,EAA+B,UAAAb,MAAM;AAAA,SAAK;AAAEA,IAAAA,MAAM,EAANA;AAAF,GAAL;AAAA,CAArC,CAAxB;;AAEA,SAASc,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLA,IAAAA,QAAQ,EAARA;AADK,GAAP;AAGD;;eAEc,yBAAQF,eAAR,EAAyBC,kBAAzB,EAA6CjB,gBAA7C,C","sourcesContent":["/*\n *\n * LanguageProvider\n *\n * this component connects the redux state language locale to the\n * IntlProvider component and i18n messages (loaded from `app/translations`)\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { IntlProvider } from 'react-intl';\nimport { defaultsDeep } from 'lodash';\nimport { selectLocale } from './selectors';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class LanguageProvider extends React.Component {\n  render() {\n    const messages = defaultsDeep(this.props.messages[this.props.locale], this.props.messages.en);\n\n    return (\n      <IntlProvider\n        locale={this.props.locale}\n        defaultLocale=\"en\"\n        messages={messages}\n        textComponent=\"span\"\n      >\n        {React.Children.only(this.props.children)}\n      </IntlProvider>\n    );\n  }\n}\n\nLanguageProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n  locale: PropTypes.string.isRequired,\n  messages: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = createSelector(selectLocale(), locale => ({ locale }));\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageProvider);\n"]},"metadata":{},"sourceType":"script"}