{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _formik = require(\"formik\");\n\nvar _schemas = _interopRequireDefault(require(\"../../schemas\"));\n\nvar _useEditLocale2 = _interopRequireDefault(require(\"../../hooks/useEditLocale\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _BaseForm = _interopRequireDefault(require(\"./BaseForm\"));\n\nvar _AdvancedForm = _interopRequireDefault(require(\"./AdvancedForm\"));\n\nvar _SettingsModal = _interopRequireDefault(require(\"../SettingsModal\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ModalEdit = function ModalEdit(_ref) {\n  var localeToEdit = _ref.localeToEdit,\n      onClose = _ref.onClose,\n      locales = _ref.locales;\n\n  var _useEditLocale = (0, _useEditLocale2[\"default\"])(),\n      isEditing = _useEditLocale.isEditing,\n      editLocale = _useEditLocale.editLocale;\n\n  var shouldUpdateMenu = (0, _react.useRef)(false);\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      updateMenu = _useGlobalContext.updateMenu;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var isOpened = Boolean(localeToEdit);\n\n  var handleSubmit = function handleSubmit(_ref2) {\n    var displayName = _ref2.displayName,\n        isDefault = _ref2.isDefault;\n    var id = localeToEdit.id;\n    var name = displayName || localeToEdit.code;\n    return editLocale(id, {\n      name: name,\n      isDefault: isDefault\n    }).then(function () {\n      shouldUpdateMenu.current = true;\n    }).then(onClose);\n  };\n\n  var handleClose = function handleClose() {\n    if (shouldUpdateMenu.current) {\n      updateMenu();\n    }\n\n    shouldUpdateMenu.current = false;\n  };\n\n  var options = [];\n  var defaultOption;\n\n  if (localeToEdit) {\n    options = locales.map(function (locale) {\n      return {\n        label: locale.code,\n        value: locale.id\n      };\n    });\n    defaultOption = options.find(function (option) {\n      return option.value === localeToEdit.id;\n    });\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.Modal, {\n    isOpen: isOpened,\n    onToggle: onClose,\n    onClosed: handleClose\n  }, /*#__PURE__*/_react[\"default\"].createElement(_formik.Formik, {\n    initialValues: {\n      displayName: localeToEdit ? localeToEdit.name : '',\n      isDefault: localeToEdit ? localeToEdit.isDefault : false\n    },\n    onSubmit: handleSubmit,\n    validationSchema: _schemas[\"default\"]\n  }, function (_ref3) {\n    var handleSubmit = _ref3.handleSubmit,\n        errors = _ref3.errors;\n    return /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/_react[\"default\"].createElement(_SettingsModal[\"default\"], {\n      title: formatMessage({\n        id: (0, _utils.getTrad)('Settings.locales.modal.title')\n      }),\n      breadCrumb: [formatMessage({\n        id: (0, _utils.getTrad)('Settings.list.actions.edit')\n      })],\n      tabsAriaLabel: formatMessage({\n        id: (0, _utils.getTrad)('Settings.locales.modal.edit.tab.label')\n      }),\n      tabsId: \"i18n-settings-tabs-edit\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.TabPanel, null, /*#__PURE__*/_react[\"default\"].createElement(_BaseForm[\"default\"], {\n      options: options,\n      defaultOption: defaultOption\n    })), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.TabPanel, null, /*#__PURE__*/_react[\"default\"].createElement(_AdvancedForm[\"default\"], {\n      isDefaultLocale: Boolean(localeToEdit && localeToEdit.isDefault)\n    }))), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.ModalFooter, null, /*#__PURE__*/_react[\"default\"].createElement(\"section\", null, /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n      type: \"button\",\n      color: \"cancel\",\n      onClick: onClose\n    }, formatMessage({\n      id: 'app.components.Button.cancel'\n    })), /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n      color: \"success\",\n      type: \"submit\",\n      isLoading: isEditing,\n      disabled: Object.keys(errors).length > 0\n    }, formatMessage({\n      id: (0, _utils.getTrad)('Settings.locales.modal.edit.confirmation')\n    })))));\n  }));\n};\n\nModalEdit.defaultProps = {\n  localeToEdit: undefined,\n  locales: []\n};\nModalEdit.propTypes = {\n  localeToEdit: _propTypes[\"default\"].shape({\n    id: _propTypes[\"default\"].number.isRequired,\n    name: _propTypes[\"default\"].string.isRequired,\n    code: _propTypes[\"default\"].string.isRequired,\n    isDefault: _propTypes[\"default\"].bool.isRequired\n  }),\n  onClose: _propTypes[\"default\"].func.isRequired,\n  locales: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape({\n    id: _propTypes[\"default\"].number,\n    name: _propTypes[\"default\"].string,\n    code: _propTypes[\"default\"].string\n  }))\n};\nvar _default = ModalEdit;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/components/ModalEdit/index.js"],"names":["ModalEdit","localeToEdit","onClose","locales","isEditing","editLocale","shouldUpdateMenu","updateMenu","formatMessage","isOpened","Boolean","handleSubmit","displayName","isDefault","id","name","code","then","current","handleClose","options","defaultOption","map","locale","label","value","find","option","localeFormSchema","errors","Object","keys","length","defaultProps","undefined","propTypes","PropTypes","shape","number","isRequired","string","bool","func","arrayOf"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalFooter, TabPanel, useGlobalContext } from 'strapi-helper-plugin';\nimport { useIntl } from 'react-intl';\nimport { Button } from '@buffetjs/core';\nimport { Formik } from 'formik';\nimport localeFormSchema from '../../schemas';\nimport useEditLocale from '../../hooks/useEditLocale';\nimport { getTrad } from '../../utils';\nimport BaseForm from './BaseForm';\nimport AdvancedForm from './AdvancedForm';\nimport SettingsModal from '../SettingsModal';\n\nconst ModalEdit = ({ localeToEdit, onClose, locales }) => {\n  const { isEditing, editLocale } = useEditLocale();\n  const shouldUpdateMenu = useRef(false);\n  const { updateMenu } = useGlobalContext();\n  const { formatMessage } = useIntl();\n  const isOpened = Boolean(localeToEdit);\n\n  const handleSubmit = ({ displayName, isDefault }) => {\n    const id = localeToEdit.id;\n    const name = displayName || localeToEdit.code;\n\n    return editLocale(id, { name, isDefault })\n      .then(() => {\n        shouldUpdateMenu.current = true;\n      })\n      .then(onClose);\n  };\n\n  const handleClose = () => {\n    if (shouldUpdateMenu.current) {\n      updateMenu();\n    }\n\n    shouldUpdateMenu.current = false;\n  };\n\n  let options = [];\n  let defaultOption;\n\n  if (localeToEdit) {\n    options = locales.map(locale => ({ label: locale.code, value: locale.id }));\n    defaultOption = options.find(option => option.value === localeToEdit.id);\n  }\n\n  return (\n    <Modal isOpen={isOpened} onToggle={onClose} onClosed={handleClose}>\n      <Formik\n        initialValues={{\n          displayName: localeToEdit ? localeToEdit.name : '',\n          isDefault: localeToEdit ? localeToEdit.isDefault : false,\n        }}\n        onSubmit={handleSubmit}\n        validationSchema={localeFormSchema}\n      >\n        {({ handleSubmit, errors }) => (\n          <form onSubmit={handleSubmit}>\n            <SettingsModal\n              title={formatMessage({\n                id: getTrad('Settings.locales.modal.title'),\n              })}\n              breadCrumb={[formatMessage({ id: getTrad('Settings.list.actions.edit') })]}\n              tabsAriaLabel={formatMessage({\n                id: getTrad('Settings.locales.modal.edit.tab.label'),\n              })}\n              tabsId=\"i18n-settings-tabs-edit\"\n            >\n              <TabPanel>\n                <BaseForm options={options} defaultOption={defaultOption} />\n              </TabPanel>\n              <TabPanel>\n                <AdvancedForm isDefaultLocale={Boolean(localeToEdit && localeToEdit.isDefault)} />\n              </TabPanel>\n            </SettingsModal>\n\n            <ModalFooter>\n              <section>\n                <Button type=\"button\" color=\"cancel\" onClick={onClose}>\n                  {formatMessage({ id: 'app.components.Button.cancel' })}\n                </Button>\n                <Button\n                  color=\"success\"\n                  type=\"submit\"\n                  isLoading={isEditing}\n                  disabled={Object.keys(errors).length > 0}\n                >\n                  {formatMessage({ id: getTrad('Settings.locales.modal.edit.confirmation') })}\n                </Button>\n              </section>\n            </ModalFooter>\n          </form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n\nModalEdit.defaultProps = {\n  localeToEdit: undefined,\n  locales: [],\n};\n\nModalEdit.propTypes = {\n  localeToEdit: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    isDefault: PropTypes.bool.isRequired,\n  }),\n  onClose: PropTypes.func.isRequired,\n  locales: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      code: PropTypes.string,\n    })\n  ),\n};\n\nexport default ModalEdit;\n"]},"metadata":{},"sourceType":"script"}