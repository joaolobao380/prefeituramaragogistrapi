{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = require(\"react\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nfunction useSelect(_ref) {\n  var isUserAllowedToEditField = _ref.isUserAllowedToEditField,\n      isUserAllowedToReadField = _ref.isUserAllowedToReadField,\n      name = _ref.name;\n\n  var _useContentManagerEdi = (0, _strapiHelperPlugin.useContentManagerEditViewDataManager)(),\n      isCreatingEntry = _useContentManagerEdi.isCreatingEntry,\n      createActionAllowedFields = _useContentManagerEdi.createActionAllowedFields,\n      readActionAllowedFields = _useContentManagerEdi.readActionAllowedFields,\n      updateActionAllowedFields = _useContentManagerEdi.updateActionAllowedFields;\n\n  var isFieldAllowed = (0, _react.useMemo)(function () {\n    if (isUserAllowedToEditField === true) {\n      return true;\n    }\n\n    var allowedFields = isCreatingEntry ? createActionAllowedFields : updateActionAllowedFields;\n    return allowedFields.includes(name);\n  }, [isCreatingEntry, createActionAllowedFields, name, isUserAllowedToEditField, updateActionAllowedFields]);\n  var isFieldReadable = (0, _react.useMemo)(function () {\n    if (isUserAllowedToReadField) {\n      return true;\n    }\n\n    var allowedFields = isCreatingEntry ? [] : readActionAllowedFields;\n    return allowedFields.includes(name);\n  }, [isCreatingEntry, isUserAllowedToReadField, name, readActionAllowedFields]);\n  return {\n    isCreatingEntry: isCreatingEntry,\n    isFieldAllowed: isFieldAllowed,\n    isFieldReadable: isFieldReadable\n  };\n}\n\nvar _default = useSelect;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/components/SelectWrapper/utils/select.js"],"names":["useSelect","isUserAllowedToEditField","isUserAllowedToReadField","name","isCreatingEntry","createActionAllowedFields","readActionAllowedFields","updateActionAllowedFields","isFieldAllowed","allowedFields","includes","isFieldReadable"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,SAASA,SAAT,OAAiF;AAAA,MAA5DC,wBAA4D,QAA5DA,wBAA4D;AAAA,MAAlCC,wBAAkC,QAAlCA,wBAAkC;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAC/E,8BAKI,+DALJ;AAAA,MACEC,eADF,yBACEA,eADF;AAAA,MAEEC,yBAFF,yBAEEA,yBAFF;AAAA,MAGEC,uBAHF,yBAGEA,uBAHF;AAAA,MAIEC,yBAJF,yBAIEA,yBAJF;;AAOA,MAAMC,cAAc,GAAG,oBAAQ,YAAM;AACnC,QAAIP,wBAAwB,KAAK,IAAjC,EAAuC;AACrC,aAAO,IAAP;AACD;;AAED,QAAMQ,aAAa,GAAGL,eAAe,GAAGC,yBAAH,GAA+BE,yBAApE;AAEA,WAAOE,aAAa,CAACC,QAAd,CAAuBP,IAAvB,CAAP;AACD,GARsB,EAQpB,CACDC,eADC,EAEDC,yBAFC,EAGDF,IAHC,EAIDF,wBAJC,EAKDM,yBALC,CARoB,CAAvB;AAgBA,MAAMI,eAAe,GAAG,oBAAQ,YAAM;AACpC,QAAIT,wBAAJ,EAA8B;AAC5B,aAAO,IAAP;AACD;;AAED,QAAMO,aAAa,GAAGL,eAAe,GAAG,EAAH,GAAQE,uBAA7C;AAEA,WAAOG,aAAa,CAACC,QAAd,CAAuBP,IAAvB,CAAP;AACD,GARuB,EAQrB,CAACC,eAAD,EAAkBF,wBAAlB,EAA4CC,IAA5C,EAAkDG,uBAAlD,CARqB,CAAxB;AAUA,SAAO;AACLF,IAAAA,eAAe,EAAfA,eADK;AAELI,IAAAA,cAAc,EAAdA,cAFK;AAGLG,IAAAA,eAAe,EAAfA;AAHK,GAAP;AAKD;;eAEcX,S","sourcesContent":["import { useMemo } from 'react';\nimport { useContentManagerEditViewDataManager } from 'strapi-helper-plugin';\n\nfunction useSelect({ isUserAllowedToEditField, isUserAllowedToReadField, name }) {\n  const {\n    isCreatingEntry,\n    createActionAllowedFields,\n    readActionAllowedFields,\n    updateActionAllowedFields,\n  } = useContentManagerEditViewDataManager();\n\n  const isFieldAllowed = useMemo(() => {\n    if (isUserAllowedToEditField === true) {\n      return true;\n    }\n\n    const allowedFields = isCreatingEntry ? createActionAllowedFields : updateActionAllowedFields;\n\n    return allowedFields.includes(name);\n  }, [\n    isCreatingEntry,\n    createActionAllowedFields,\n    name,\n    isUserAllowedToEditField,\n    updateActionAllowedFields,\n  ]);\n\n  const isFieldReadable = useMemo(() => {\n    if (isUserAllowedToReadField) {\n      return true;\n    }\n\n    const allowedFields = isCreatingEntry ? [] : readActionAllowedFields;\n\n    return allowedFields.includes(name);\n  }, [isCreatingEntry, isUserAllowedToReadField, name, readActionAllowedFields]);\n\n  return {\n    isCreatingEntry,\n    isFieldAllowed,\n    isFieldReadable,\n  };\n}\n\nexport default useSelect;\n"]},"metadata":{},"sourceType":"script"}