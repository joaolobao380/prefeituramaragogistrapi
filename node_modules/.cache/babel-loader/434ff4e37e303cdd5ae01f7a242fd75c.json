{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar hasLocalePermission = function hasLocalePermission(permissions, localeCode) {\n  if (permissions) {\n    var hasPermission = permissions.some(function (permission) {\n      return (0, _get[\"default\"])(permission, 'properties.locales', []).includes(localeCode);\n    });\n\n    if (hasPermission) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar getFirstLocale = function getFirstLocale(permissions) {\n  if (permissions && permissions.length > 0) {\n    var firstAuthorizedNonDefaultLocale = (0, _get[\"default\"])(permissions, [0, 'properties', 'locales', 0], null);\n\n    if (firstAuthorizedNonDefaultLocale) {\n      return firstAuthorizedNonDefaultLocale;\n    }\n  }\n\n  return null;\n};\n/**\n * Entry point of the module\n */\n\n\nvar getDefaultLocale = function getDefaultLocale(ctPermissions) {\n  var locales = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var defaultLocale = locales.find(function (locale) {\n    return locale.isDefault;\n  });\n\n  if (!defaultLocale) {\n    return null;\n  }\n\n  var readPermissions = ctPermissions['plugins::content-manager.explorer.read'];\n  var createPermissions = ctPermissions['plugins::content-manager.explorer.create'];\n\n  if (hasLocalePermission(readPermissions, defaultLocale.code)) {\n    return defaultLocale.code;\n  }\n\n  if (hasLocalePermission(createPermissions, defaultLocale.code)) {\n    return defaultLocale.code;\n  } // When the default locale is not authorized, we return the first authorized locale\n\n\n  var firstAuthorizedForReadNonDefaultLocale = getFirstLocale(readPermissions);\n\n  if (firstAuthorizedForReadNonDefaultLocale) {\n    return firstAuthorizedForReadNonDefaultLocale;\n  }\n\n  return getFirstLocale(createPermissions);\n};\n\nvar _default = getDefaultLocale;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/utils/getDefaultLocale.js"],"names":["hasLocalePermission","permissions","localeCode","hasPermission","some","permission","includes","getFirstLocale","length","firstAuthorizedNonDefaultLocale","getDefaultLocale","ctPermissions","locales","defaultLocale","find","locale","isDefault","readPermissions","createPermissions","code","firstAuthorizedForReadNonDefaultLocale"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,WAAD,EAAcC,UAAd,EAA6B;AACvD,MAAID,WAAJ,EAAiB;AACf,QAAME,aAAa,GAAGF,WAAW,CAACG,IAAZ,CAAiB,UAAAC,UAAU;AAAA,aAC/C,qBAAIA,UAAJ,EAAgB,oBAAhB,EAAsC,EAAtC,EAA0CC,QAA1C,CAAmDJ,UAAnD,CAD+C;AAAA,KAA3B,CAAtB;;AAIA,QAAIC,aAAJ,EAAmB;AACjB,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD,CAZD;;AAcA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAAN,WAAW,EAAI;AACpC,MAAIA,WAAW,IAAIA,WAAW,CAACO,MAAZ,GAAqB,CAAxC,EAA2C;AACzC,QAAMC,+BAA+B,GAAG,qBAAIR,WAAJ,EAAiB,CAAC,CAAD,EAAI,YAAJ,EAAkB,SAAlB,EAA6B,CAA7B,CAAjB,EAAkD,IAAlD,CAAxC;;AAEA,QAAIQ,+BAAJ,EAAqC;AACnC,aAAOA,+BAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAVD;AAYA;AACA;AACA;;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,aAAD,EAAiC;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AACxD,MAAMC,aAAa,GAAGD,OAAO,CAACE,IAAR,CAAa,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,SAAX;AAAA,GAAnB,CAAtB;;AAEA,MAAI,CAACH,aAAL,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED,MAAMI,eAAe,GAAGN,aAAa,CAAC,wCAAD,CAArC;AACA,MAAMO,iBAAiB,GAAGP,aAAa,CAAC,0CAAD,CAAvC;;AAEA,MAAIX,mBAAmB,CAACiB,eAAD,EAAkBJ,aAAa,CAACM,IAAhC,CAAvB,EAA8D;AAC5D,WAAON,aAAa,CAACM,IAArB;AACD;;AAED,MAAInB,mBAAmB,CAACkB,iBAAD,EAAoBL,aAAa,CAACM,IAAlC,CAAvB,EAAgE;AAC9D,WAAON,aAAa,CAACM,IAArB;AACD,GAhBuD,CAkBxD;;;AACA,MAAMC,sCAAsC,GAAGb,cAAc,CAACU,eAAD,CAA7D;;AAEA,MAAIG,sCAAJ,EAA4C;AAC1C,WAAOA,sCAAP;AACD;;AAED,SAAOb,cAAc,CAACW,iBAAD,CAArB;AACD,CA1BD;;eA4BeR,gB","sourcesContent":["import get from 'lodash/get';\n\nconst hasLocalePermission = (permissions, localeCode) => {\n  if (permissions) {\n    const hasPermission = permissions.some(permission =>\n      get(permission, 'properties.locales', []).includes(localeCode)\n    );\n\n    if (hasPermission) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst getFirstLocale = permissions => {\n  if (permissions && permissions.length > 0) {\n    const firstAuthorizedNonDefaultLocale = get(permissions, [0, 'properties', 'locales', 0], null);\n\n    if (firstAuthorizedNonDefaultLocale) {\n      return firstAuthorizedNonDefaultLocale;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Entry point of the module\n */\nconst getDefaultLocale = (ctPermissions, locales = []) => {\n  const defaultLocale = locales.find(locale => locale.isDefault);\n\n  if (!defaultLocale) {\n    return null;\n  }\n\n  const readPermissions = ctPermissions['plugins::content-manager.explorer.read'];\n  const createPermissions = ctPermissions['plugins::content-manager.explorer.create'];\n\n  if (hasLocalePermission(readPermissions, defaultLocale.code)) {\n    return defaultLocale.code;\n  }\n\n  if (hasLocalePermission(createPermissions, defaultLocale.code)) {\n    return defaultLocale.code;\n  }\n\n  // When the default locale is not authorized, we return the first authorized locale\n  const firstAuthorizedForReadNonDefaultLocale = getFirstLocale(readPermissions);\n\n  if (firstAuthorizedForReadNonDefaultLocale) {\n    return firstAuthorizedForReadNonDefaultLocale;\n  }\n\n  return getFirstLocale(createPermissions);\n};\n\nexport default getDefaultLocale;\n"]},"metadata":{},"sourceType":"script"}