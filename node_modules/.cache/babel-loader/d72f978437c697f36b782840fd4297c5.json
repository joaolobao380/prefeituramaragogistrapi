{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _hooks = require(\"../../hooks\");\n\nvar _ModalHeader = _interopRequireDefault(require(\"../../components/ModalHeader\"));\n\nvar _stepper = _interopRequireDefault(require(\"./stepper\"));\n\nvar _init = _interopRequireDefault(require(\"./init\"));\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ModalStepper = function ModalStepper(_ref) {\n  var initialFileToEdit = _ref.initialFileToEdit,\n      initialStep = _ref.initialStep,\n      isOpen = _ref.isOpen,\n      onClosed = _ref.onClosed,\n      onRemoveFileFromDataToDelete = _ref.onRemoveFileFromDataToDelete,\n      onToggle = _ref.onToggle;\n\n  var _useAppContext = (0, _hooks.useAppContext)(),\n      allowedActions = _useAppContext.allowedActions;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      emitEvent = _useGlobalContext.emitEvent,\n      formatMessage = _useGlobalContext.formatMessage;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isWarningDeleteOpen = _useState2[0],\n      setIsWarningDeleteOpen = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      showModalConfirmButtonLoading = _useState4[0],\n      setShowModalConfirmButtonLoading = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      isFormDisabled = _useState6[0],\n      setIsFormDisabled = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(null),\n      _useState8 = (0, _slicedToArray2[\"default\"])(_useState7, 2),\n      formErrors = _useState8[0],\n      setFormErrors = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = (0, _slicedToArray2[\"default\"])(_useState9, 2),\n      shouldRefetch = _useState10[0],\n      setShouldRefetch = _useState10[1];\n\n  var _useState11 = (0, _react.useState)(false),\n      _useState12 = (0, _slicedToArray2[\"default\"])(_useState11, 2),\n      displayNextButton = _useState12[0],\n      setDisplayNextButton = _useState12[1];\n\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState, _init[\"default\"]),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      reducerState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _reducerState$toJS = reducerState.toJS(),\n      currentStep = _reducerState$toJS.currentStep,\n      fileToEdit = _reducerState$toJS.fileToEdit,\n      filesToDownload = _reducerState$toJS.filesToDownload,\n      filesToUpload = _reducerState$toJS.filesToUpload;\n\n  var _stepper$currentStep = _stepper[\"default\"][currentStep],\n      Component = _stepper$currentStep.Component,\n      components = _stepper$currentStep.components,\n      headerBreadcrumbs = _stepper$currentStep.headerBreadcrumbs,\n      next = _stepper$currentStep.next,\n      prev = _stepper$currentStep.prev,\n      withBackButton = _stepper$currentStep.withBackButton;\n  var filesToUploadLength = filesToUpload.length;\n  var toggleRef = (0, _react.useRef)(onToggle);\n  var editModalRef = (0, _react.useRef)();\n  var downloadFilesRef = (0, _react.useRef)();\n  (0, _react.useEffect)(function () {\n    if (currentStep === 'upload') {\n      // Close the modal\n      if (filesToUploadLength === 0) {\n        // Passing true to the onToggle prop will refetch the data when the modal closes\n        toggleRef.current(true);\n      } else {\n        // Download files from url\n        downloadFilesRef.current();\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [filesToUploadLength, currentStep]);\n  (0, _react.useEffect)(function () {\n    if (isOpen) {\n      goTo(initialStep);\n\n      if (initialFileToEdit) {\n        dispatch({\n          type: 'INIT_FILE_TO_EDIT',\n          fileToEdit: initialFileToEdit\n        });\n      }\n    } // Disabling the rule because we just want to let the ability to open the modal\n    // at a specific step then we will let the stepper handle the navigation\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isOpen]);\n\n  var addFilesToUpload = function addFilesToUpload(_ref2) {\n    var value = _ref2.target.value;\n    emitEvent('didSelectFile', {\n      source: 'computer',\n      location: 'upload'\n    });\n    dispatch({\n      type: 'ADD_FILES_TO_UPLOAD',\n      filesToUpload: value\n    });\n    goTo(next);\n  };\n\n  downloadFilesRef.current = /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n    var files;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            files = (0, _utils.getFilesToDownload)(filesToUpload); // Emit event when the users download files from url\n\n            if (files.length > 0) {\n              emitEvent('didSelectFile', {\n                source: 'url',\n                location: 'upload'\n              });\n            }\n\n            _context.prev = 2;\n            _context.next = 5;\n            return Promise.all(files.map(function (file) {\n              var source = file.source;\n              return _axios[\"default\"].get(file.fileURL, {\n                responseType: 'blob',\n                cancelToken: source.token,\n                timeout: 60000\n              }).then(function (_ref4) {\n                var data = _ref4.data;\n                var fileName = file.fileInfo.name;\n                var createdFile = new File([data], fileName, {\n                  type: data.type\n                });\n                dispatch({\n                  type: 'FILE_DOWNLOADED',\n                  blob: createdFile,\n                  originalIndex: file.originalIndex,\n                  fileTempId: file.tempId\n                });\n              })[\"catch\"](function (err) {\n                console.error('fetch file error', err);\n                dispatch({\n                  type: 'SET_FILE_TO_DOWNLOAD_ERROR',\n                  originalIndex: file.originalIndex,\n                  fileTempId: file.tempId\n                });\n              });\n            }));\n\n          case 5:\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 7]]);\n  }));\n\n  var handleAbortUpload = function handleAbortUpload() {\n    var abortController = fileToEdit.abortController;\n    abortController.abort();\n    dispatch({\n      type: 'ON_ABORT_UPLOAD'\n    });\n  };\n\n  var handleCancelFileToUpload = function handleCancelFileToUpload(fileOriginalIndex) {\n    var fileToCancel = filesToUpload.find(function (file) {\n      return file.originalIndex === fileOriginalIndex;\n    });\n    var source = fileToCancel.source; // Cancel\n\n    if (source) {\n      // Cancel dowload file upload with axios\n      source.cancel('Operation canceled by the user.');\n    } else {\n      // Cancel upload with fetch\n      fileToCancel.abortController.abort();\n    }\n\n    dispatch({\n      type: 'REMOVE_FILE_TO_UPLOAD',\n      fileIndex: fileOriginalIndex\n    });\n  };\n\n  var handleChange = function handleChange(_ref5) {\n    var _ref5$target = _ref5.target,\n        name = _ref5$target.name,\n        value = _ref5$target.value;\n    var val = value;\n    var type = 'ON_CHANGE';\n\n    if (name === 'url') {\n      setFormErrors(null);\n      val = value.split('\\n');\n      type = 'ON_CHANGE_URLS_TO_DOWNLOAD';\n    }\n\n    dispatch({\n      type: type,\n      keys: name,\n      value: val\n    });\n  };\n\n  var handleConfirmDeleteFile = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n    var id, errorMessage;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = fileToEdit.id; // Remove the file from the selected data to delete\n\n            onRemoveFileFromDataToDelete(id); // Show a loader in the popup warning\n\n            setShowModalConfirmButtonLoading(true);\n            _context2.prev = 3;\n            _context2.next = 6;\n            return (0, _strapiHelperPlugin.request)(\"/\".concat(_pluginId[\"default\"], \"/files/\").concat(id), {\n              method: 'DELETE'\n            });\n\n          case 6:\n            setShouldRefetch(true);\n            _context2.next = 13;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](3);\n            errorMessage = (0, _lodash.get)(_context2.t0, 'response.payload.message', 'An error occured');\n            strapi.notification.toggle({\n              type: 'warning',\n              message: errorMessage\n            });\n\n          case 13:\n            _context2.prev = 13;\n            setShowModalConfirmButtonLoading(true);\n            toggleModalWarning();\n            return _context2.finish(13);\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 9, 13, 17]]);\n  })), [fileToEdit]);\n\n  var handleClickNextButton = /*#__PURE__*/function () {\n    var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n      var formattedErrors;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _utils.urlSchema.validate({\n                filesToDownload: filesToDownload.filter(function (url) {\n                  return !(0, _lodash.isEmpty)(url);\n                })\n              }, {\n                abortEarly: false\n              });\n\n            case 3:\n              setFormErrors(null); // Navigate to next step\n\n              dispatch({\n                type: 'ADD_URLS_TO_FILES_TO_UPLOAD',\n                nextStep: next\n              });\n              _context3.next = 11;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              formattedErrors = (0, _utils.getYupError)(_context3.t0);\n              setFormErrors(formattedErrors.filesToDownload);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function handleClickNextButton() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handleClickDeleteFile = /*#__PURE__*/function () {\n    var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              toggleModalWarning();\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleClickDeleteFile() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var handleClickDeleteFileToUpload = function handleClickDeleteFileToUpload(fileIndex) {\n    dispatch({\n      type: 'REMOVE_FILE_TO_UPLOAD',\n      fileIndex: fileIndex\n    });\n\n    if (currentStep === 'edit-new') {\n      dispatch({\n        type: 'RESET_FILE_TO_EDIT'\n      });\n      goNext();\n    }\n  };\n\n  var handleClose = function handleClose() {\n    onClosed();\n    setIsFormDisabled(false);\n    setDisplayNextButton(false);\n    setFormErrors(null);\n    setShouldRefetch(false);\n    dispatch({\n      type: 'RESET_PROPS'\n    });\n  };\n\n  var handleCloseModalWarning = /*#__PURE__*/function () {\n    var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n      return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setShowModalConfirmButtonLoading(false);\n              onToggle(shouldRefetch);\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleCloseModalWarning() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var handleGoToEditNewFile = function handleGoToEditNewFile(fileIndex) {\n    dispatch({\n      type: 'SET_FILE_TO_EDIT',\n      fileIndex: fileIndex\n    });\n    goTo('edit-new');\n  };\n\n  var handleGoToAddBrowseFiles = function handleGoToAddBrowseFiles() {\n    dispatch({\n      type: 'CLEAN_FILES_ERROR'\n    });\n    goBack();\n  };\n\n  var handleSetCropResult = function handleSetCropResult(blob) {\n    // Emit event : the user cropped a file that is not uploaded\n    emitEvent('didCropFile', {\n      duplicatedFile: null,\n      location: 'upload'\n    });\n    dispatch({\n      type: 'SET_CROP_RESULT',\n      blob: blob\n    });\n  };\n\n  var handleSubmitEditNewFile = function handleSubmitEditNewFile(e) {\n    e.preventDefault();\n    dispatch({\n      type: 'ON_SUBMIT_EDIT_NEW_FILE'\n    });\n    goNext();\n  };\n\n  var handleSubmitEditExistingFile = /*#__PURE__*/function () {\n    var _ref10 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(e) {\n      var shouldDuplicateMedia,\n          file,\n          isSubmittingAfterCrop,\n          headers,\n          formData,\n          didCropFile,\n          abortController,\n          id,\n          fileInfo,\n          requestURL,\n          status,\n          statusText,\n          errorMessage,\n          _args6 = arguments;\n      return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              shouldDuplicateMedia = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : false;\n              file = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : fileToEdit.file;\n              isSubmittingAfterCrop = _args6.length > 3 && _args6[3] !== undefined ? _args6[3] : false;\n              e.preventDefault();\n\n              if (isSubmittingAfterCrop) {\n                emitEvent('didCropFile', {\n                  duplicatedFile: shouldDuplicateMedia,\n                  location: 'upload'\n                });\n              }\n\n              dispatch({\n                type: 'ON_SUBMIT_EDIT_EXISTING_FILE'\n              });\n              headers = {};\n              formData = new FormData(); // If the file has been cropped we need to add it to the formData\n              // otherwise we just don't send it\n\n              didCropFile = file instanceof File;\n              abortController = fileToEdit.abortController, id = fileToEdit.id, fileInfo = fileToEdit.fileInfo;\n              requestURL = shouldDuplicateMedia ? \"/\".concat(_pluginId[\"default\"]) : \"/\".concat(_pluginId[\"default\"], \"?id=\").concat(id);\n\n              if (didCropFile) {\n                formData.append('files', file);\n              }\n\n              formData.append('fileInfo', JSON.stringify(fileInfo));\n              _context6.prev = 13;\n              _context6.next = 16;\n              return (0, _strapiHelperPlugin.request)(requestURL, {\n                method: 'POST',\n                headers: headers,\n                body: formData,\n                signal: abortController.signal\n              }, false, false);\n\n            case 16:\n              // Close the modal and refetch data\n              toggleRef.current(true);\n              _context6.next = 27;\n              break;\n\n            case 19:\n              _context6.prev = 19;\n              _context6.t0 = _context6[\"catch\"](13);\n              console.error(_context6.t0);\n              status = (0, _lodash.get)(_context6.t0, 'response.status', (0, _lodash.get)(_context6.t0, 'status', null));\n              statusText = (0, _lodash.get)(_context6.t0, 'response.statusText', (0, _lodash.get)(_context6.t0, 'statusText', null));\n              errorMessage = (0, _lodash.get)(_context6.t0, ['response', 'payload', 'message', '0', 'messages', '0', 'message'], (0, _lodash.get)(_context6.t0, ['response', 'payload', 'message'], statusText)); // TODO fix errors globally when the back-end sends readable one\n\n              if (status === 413) {\n                errorMessage = formatMessage({\n                  id: 'app.utils.errors.file-too-big.message'\n                });\n              }\n\n              if (status) {\n                dispatch({\n                  type: 'SET_FILE_TO_EDIT_ERROR',\n                  errorMessage: errorMessage\n                });\n              }\n\n            case 27:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[13, 19]]);\n    }));\n\n    return function handleSubmitEditExistingFile(_x) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var handleReplaceMedia = function handleReplaceMedia() {\n    emitEvent('didReplaceMedia', {\n      location: 'upload'\n    });\n    editModalRef.current.click();\n  };\n\n  var handleToggle = function handleToggle() {\n    if (filesToUploadLength > 0) {\n      // eslint-disable-next-line no-alert\n      var confirm = window.confirm(formatMessage({\n        id: (0, _utils.getTrad)('window.confirm.close-modal.files')\n      }));\n\n      if (!confirm) {\n        return;\n      }\n    }\n\n    if (!(0, _lodash.isEqual)(initialFileToEdit, fileToEdit) && currentStep === 'edit') {\n      // eslint-disable-next-line no-alert\n      var _confirm = window.confirm(formatMessage({\n        id: (0, _utils.getTrad)('window.confirm.close-modal.file')\n      }));\n\n      if (!_confirm) {\n        return;\n      }\n    }\n\n    onToggle(shouldRefetch);\n  };\n\n  var handleUploadFiles = /*#__PURE__*/function () {\n    var _ref11 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8() {\n      var requests;\n      return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              dispatch({\n                type: 'SET_FILES_UPLOADING_STATE'\n              });\n              requests = filesToUpload.map( /*#__PURE__*/function () {\n                var _ref13 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(_ref12) {\n                  var file, fileInfo, originalName, originalIndex, abortController, formData, headers, status, statusText, errorMessage;\n                  return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          file = _ref12.file, fileInfo = _ref12.fileInfo, originalName = _ref12.originalName, originalIndex = _ref12.originalIndex, abortController = _ref12.abortController;\n                          formData = new FormData();\n                          headers = {};\n\n                          if (originalName === fileInfo.name) {\n                            (0, _lodash.set)(fileInfo, 'name', null);\n                          }\n\n                          formData.append('files', file);\n                          formData.append('fileInfo', JSON.stringify(fileInfo));\n                          _context7.prev = 6;\n                          _context7.next = 9;\n                          return (0, _strapiHelperPlugin.request)(\"/\".concat(_pluginId[\"default\"]), {\n                            method: 'POST',\n                            headers: headers,\n                            body: formData,\n                            signal: abortController.signal\n                          }, false, false);\n\n                        case 9:\n                          setShouldRefetch(true);\n                          dispatch({\n                            type: 'REMOVE_FILE_TO_UPLOAD',\n                            fileIndex: originalIndex\n                          });\n                          _context7.next = 21;\n                          break;\n\n                        case 13:\n                          _context7.prev = 13;\n                          _context7.t0 = _context7[\"catch\"](6);\n                          console.error(_context7.t0);\n                          status = (0, _lodash.get)(_context7.t0, 'response.status', (0, _lodash.get)(_context7.t0, 'status', null));\n                          statusText = (0, _lodash.get)(_context7.t0, 'response.statusText', (0, _lodash.get)(_context7.t0, 'statusText', null));\n                          errorMessage = (0, _lodash.get)(_context7.t0, ['response', 'payload', 'message', '0', 'messages', '0', 'message'], (0, _lodash.get)(_context7.t0, ['response', 'payload', 'message'], statusText)); // TODO fix errors globally when the back-end sends readable one\n\n                          if (status === 413) {\n                            errorMessage = formatMessage({\n                              id: 'app.utils.errors.file-too-big.message'\n                            });\n                          }\n\n                          if (status) {\n                            dispatch({\n                              type: 'SET_FILE_ERROR',\n                              fileIndex: originalIndex,\n                              errorMessage: errorMessage\n                            });\n                          }\n\n                        case 21:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7, null, [[6, 13]]);\n                }));\n\n                return function (_x2) {\n                  return _ref13.apply(this, arguments);\n                };\n              }());\n              _context8.next = 4;\n              return Promise.all(requests);\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function handleUploadFiles() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var goBack = function goBack() {\n    goTo(prev);\n  };\n\n  var goNext = function goNext() {\n    if (next === null) {\n      onToggle();\n      return;\n    }\n\n    goTo(next);\n  };\n\n  var goTo = function goTo(to) {\n    dispatch({\n      type: 'GO_TO',\n      to: to\n    });\n  };\n\n  var toggleModalWarning = function toggleModalWarning() {\n    setIsWarningDeleteOpen(function (prev) {\n      return !prev;\n    });\n  };\n\n  var shouldDisplayNextButton = currentStep === 'browse' && displayNextButton;\n  var isFinishButtonDisabled = filesToUpload.some(function (file) {\n    return file.isDownloading || file.isUploading;\n  });\n  var areButtonsDisabledOnEditExistingFile = currentStep === 'edit' && fileToEdit.isUploading === true;\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.Modal, {\n    isOpen: isOpen,\n    onToggle: handleToggle,\n    onClosed: handleClose\n  }, /*#__PURE__*/_react[\"default\"].createElement(_ModalHeader[\"default\"], {\n    goBack: goBack,\n    headerBreadcrumbs: headerBreadcrumbs,\n    withBackButton: withBackButton\n  }), Component && /*#__PURE__*/_react[\"default\"].createElement(Component, (0, _extends2[\"default\"])({}, allowedActions, {\n    onAbortUpload: handleAbortUpload,\n    addFilesToUpload: addFilesToUpload,\n    fileToEdit: fileToEdit,\n    filesToDownload: filesToDownload,\n    filesToUpload: filesToUpload,\n    formErrors: formErrors,\n    components: components,\n    isEditingUploadedFile: currentStep === 'edit',\n    isFormDisabled: isFormDisabled,\n    onChange: handleChange,\n    onClickCancelUpload: handleCancelFileToUpload,\n    onClickDeleteFileToUpload: currentStep === 'edit' ? handleClickDeleteFile : handleClickDeleteFileToUpload,\n    onClickEditNewFile: handleGoToEditNewFile,\n    onGoToAddBrowseFiles: handleGoToAddBrowseFiles,\n    onSubmitEdit: currentStep === 'edit' ? handleSubmitEditExistingFile : handleSubmitEditNewFile,\n    onToggle: handleToggle,\n    toggleDisableForm: setIsFormDisabled,\n    ref: currentStep === 'edit' ? editModalRef : null,\n    setCropResult: handleSetCropResult,\n    setShouldDisplayNextButton: setDisplayNextButton,\n    withBackButton: withBackButton\n  })), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.ModalFooter, null, /*#__PURE__*/_react[\"default\"].createElement(\"section\", null, /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    type: \"button\",\n    color: \"cancel\",\n    onClick: handleToggle\n  }, formatMessage({\n    id: 'app.components.Button.cancel'\n  })), shouldDisplayNextButton && /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    type: \"button\",\n    color: \"primary\",\n    onClick: handleClickNextButton,\n    disabled: (0, _lodash.isEmpty)(filesToDownload)\n  }, formatMessage({\n    id: (0, _utils.getTrad)('button.next')\n  })), currentStep === 'upload' && /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    type: \"button\",\n    color: \"success\",\n    onClick: handleUploadFiles,\n    disabled: isFinishButtonDisabled\n  }, formatMessage({\n    id: (0, _utils.getTrad)(\"modal.upload-list.footer.button.\".concat(filesToUploadLength > 1 ? 'plural' : 'singular'))\n  }, {\n    number: filesToUploadLength\n  })), currentStep === 'edit-new' && /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    color: \"success\",\n    type: \"button\",\n    onClick: handleSubmitEditNewFile\n  }, formatMessage({\n    id: 'form.button.finish'\n  })), currentStep === 'edit' && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: {\n      margin: 'auto 0'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    disabled: isFormDisabled || areButtonsDisabledOnEditExistingFile,\n    color: \"primary\",\n    onClick: handleReplaceMedia,\n    style: {\n      marginRight: 10\n    }\n  }, formatMessage({\n    id: (0, _utils.getTrad)('control-card.replace-media')\n  })), /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    disabled: isFormDisabled || areButtonsDisabledOnEditExistingFile,\n    color: \"success\",\n    type: \"button\",\n    onClick: handleSubmitEditExistingFile\n  }, formatMessage({\n    id: 'form.button.finish'\n  })))))), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.PopUpWarning, {\n    onClosed: handleCloseModalWarning,\n    isOpen: isWarningDeleteOpen,\n    toggleModal: toggleModalWarning,\n    popUpWarningType: \"danger\",\n    onConfirm: handleConfirmDeleteFile,\n    isConfirmButtonLoading: showModalConfirmButtonLoading\n  }));\n};\n\nModalStepper.defaultProps = {\n  initialFileToEdit: null,\n  initialStep: 'browse',\n  onClosed: function onClosed() {},\n  onRemoveFileFromDataToDelete: function onRemoveFileFromDataToDelete() {},\n  onToggle: function onToggle() {}\n};\nModalStepper.propTypes = {\n  initialFileToEdit: _propTypes[\"default\"].object,\n  initialStep: _propTypes[\"default\"].string,\n  isOpen: _propTypes[\"default\"].bool.isRequired,\n  onClosed: _propTypes[\"default\"].func,\n  onRemoveFileFromDataToDelete: _propTypes[\"default\"].func,\n  onToggle: _propTypes[\"default\"].func\n};\nvar _default = ModalStepper;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/containers/ModalStepper/index.js"],"names":["ModalStepper","initialFileToEdit","initialStep","isOpen","onClosed","onRemoveFileFromDataToDelete","onToggle","allowedActions","emitEvent","formatMessage","isWarningDeleteOpen","setIsWarningDeleteOpen","showModalConfirmButtonLoading","setShowModalConfirmButtonLoading","isFormDisabled","setIsFormDisabled","formErrors","setFormErrors","shouldRefetch","setShouldRefetch","displayNextButton","setDisplayNextButton","reducer","initialState","init","reducerState","dispatch","toJS","currentStep","fileToEdit","filesToDownload","filesToUpload","stepper","Component","components","headerBreadcrumbs","next","prev","withBackButton","filesToUploadLength","length","toggleRef","editModalRef","downloadFilesRef","current","goTo","type","addFilesToUpload","value","target","source","location","files","Promise","all","map","file","axios","get","fileURL","responseType","cancelToken","token","timeout","then","data","fileName","fileInfo","name","createdFile","File","blob","originalIndex","fileTempId","tempId","err","console","error","handleAbortUpload","abortController","abort","handleCancelFileToUpload","fileOriginalIndex","fileToCancel","find","cancel","fileIndex","handleChange","val","split","keys","handleConfirmDeleteFile","id","pluginId","method","errorMessage","strapi","notification","toggle","message","toggleModalWarning","handleClickNextButton","urlSchema","validate","filter","url","abortEarly","nextStep","formattedErrors","handleClickDeleteFile","handleClickDeleteFileToUpload","goNext","handleClose","handleCloseModalWarning","handleGoToEditNewFile","handleGoToAddBrowseFiles","goBack","handleSetCropResult","duplicatedFile","handleSubmitEditNewFile","e","preventDefault","handleSubmitEditExistingFile","shouldDuplicateMedia","isSubmittingAfterCrop","headers","formData","FormData","didCropFile","requestURL","append","JSON","stringify","body","signal","status","statusText","handleReplaceMedia","click","handleToggle","confirm","window","handleUploadFiles","requests","originalName","to","shouldDisplayNextButton","isFinishButtonDisabled","some","isDownloading","isUploading","areButtonsDisabledOnEditExistingFile","number","margin","marginRight","defaultProps","propTypes","PropTypes","object","string","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState, useReducer, useRef } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { isEqual, isEmpty, get, set } from 'lodash';\nimport { Modal, ModalFooter, PopUpWarning, useGlobalContext, request } from 'strapi-helper-plugin';\nimport { Button } from '@buffetjs/core';\nimport pluginId from '../../pluginId';\nimport { getFilesToDownload, getTrad, getYupError, urlSchema } from '../../utils';\nimport { useAppContext } from '../../hooks';\nimport ModalHeader from '../../components/ModalHeader';\nimport stepper from './stepper';\nimport init from './init';\nimport reducer, { initialState } from './reducer';\n\nconst ModalStepper = ({\n  initialFileToEdit,\n  initialStep,\n  isOpen,\n  onClosed,\n  onRemoveFileFromDataToDelete,\n  onToggle,\n}) => {\n  const { allowedActions } = useAppContext();\n  const { emitEvent, formatMessage } = useGlobalContext();\n  const [isWarningDeleteOpen, setIsWarningDeleteOpen] = useState(false);\n  const [showModalConfirmButtonLoading, setShowModalConfirmButtonLoading] = useState(false);\n  const [isFormDisabled, setIsFormDisabled] = useState(false);\n  const [formErrors, setFormErrors] = useState(null);\n  const [shouldRefetch, setShouldRefetch] = useState(false);\n  const [displayNextButton, setDisplayNextButton] = useState(false);\n  const [reducerState, dispatch] = useReducer(reducer, initialState, init);\n  const { currentStep, fileToEdit, filesToDownload, filesToUpload } = reducerState.toJS();\n  const { Component, components, headerBreadcrumbs, next, prev, withBackButton } = stepper[\n    currentStep\n  ];\n  const filesToUploadLength = filesToUpload.length;\n  const toggleRef = useRef(onToggle);\n  const editModalRef = useRef();\n  const downloadFilesRef = useRef();\n\n  useEffect(() => {\n    if (currentStep === 'upload') {\n      // Close the modal\n      if (filesToUploadLength === 0) {\n        // Passing true to the onToggle prop will refetch the data when the modal closes\n        toggleRef.current(true);\n      } else {\n        // Download files from url\n        downloadFilesRef.current();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filesToUploadLength, currentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      goTo(initialStep);\n\n      if (initialFileToEdit) {\n        dispatch({\n          type: 'INIT_FILE_TO_EDIT',\n          fileToEdit: initialFileToEdit,\n        });\n      }\n    }\n    // Disabling the rule because we just want to let the ability to open the modal\n    // at a specific step then we will let the stepper handle the navigation\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  const addFilesToUpload = ({ target: { value } }) => {\n    emitEvent('didSelectFile', { source: 'computer', location: 'upload' });\n\n    dispatch({\n      type: 'ADD_FILES_TO_UPLOAD',\n      filesToUpload: value,\n    });\n\n    goTo(next);\n  };\n\n  downloadFilesRef.current = async () => {\n    const files = getFilesToDownload(filesToUpload);\n\n    // Emit event when the users download files from url\n    if (files.length > 0) {\n      emitEvent('didSelectFile', { source: 'url', location: 'upload' });\n    }\n\n    try {\n      await Promise.all(\n        files.map(file => {\n          const { source } = file;\n\n          return axios\n            .get(file.fileURL, {\n              responseType: 'blob',\n              cancelToken: source.token,\n              timeout: 60000,\n            })\n            .then(({ data }) => {\n              const fileName = file.fileInfo.name;\n              const createdFile = new File([data], fileName, {\n                type: data.type,\n              });\n\n              dispatch({\n                type: 'FILE_DOWNLOADED',\n                blob: createdFile,\n                originalIndex: file.originalIndex,\n                fileTempId: file.tempId,\n              });\n            })\n            .catch(err => {\n              console.error('fetch file error', err);\n\n              dispatch({\n                type: 'SET_FILE_TO_DOWNLOAD_ERROR',\n                originalIndex: file.originalIndex,\n                fileTempId: file.tempId,\n              });\n            });\n        })\n      );\n    } catch (err) {\n      // Silent\n    }\n  };\n\n  const handleAbortUpload = () => {\n    const { abortController } = fileToEdit;\n\n    abortController.abort();\n\n    dispatch({\n      type: 'ON_ABORT_UPLOAD',\n    });\n  };\n\n  const handleCancelFileToUpload = fileOriginalIndex => {\n    const fileToCancel = filesToUpload.find(file => file.originalIndex === fileOriginalIndex);\n    const { source } = fileToCancel;\n\n    // Cancel\n    if (source) {\n      // Cancel dowload file upload with axios\n      source.cancel('Operation canceled by the user.');\n    } else {\n      // Cancel upload with fetch\n      fileToCancel.abortController.abort();\n    }\n\n    dispatch({\n      type: 'REMOVE_FILE_TO_UPLOAD',\n      fileIndex: fileOriginalIndex,\n    });\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    let val = value;\n    let type = 'ON_CHANGE';\n\n    if (name === 'url') {\n      setFormErrors(null);\n\n      val = value.split('\\n');\n      type = 'ON_CHANGE_URLS_TO_DOWNLOAD';\n    }\n\n    dispatch({\n      type,\n      keys: name,\n      value: val,\n    });\n  };\n\n  const handleConfirmDeleteFile = useCallback(async () => {\n    const { id } = fileToEdit;\n    // Remove the file from the selected data to delete\n    onRemoveFileFromDataToDelete(id);\n\n    // Show a loader in the popup warning\n    setShowModalConfirmButtonLoading(true);\n\n    try {\n      await request(`/${pluginId}/files/${id}`, {\n        method: 'DELETE',\n      });\n\n      setShouldRefetch(true);\n    } catch (err) {\n      const errorMessage = get(err, 'response.payload.message', 'An error occured');\n\n      strapi.notification.toggle({\n        type: 'warning',\n        message: errorMessage,\n      });\n    } finally {\n      setShowModalConfirmButtonLoading(true);\n      toggleModalWarning();\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fileToEdit]);\n\n  const handleClickNextButton = async () => {\n    try {\n      await urlSchema.validate(\n        { filesToDownload: filesToDownload.filter(url => !isEmpty(url)) },\n        { abortEarly: false }\n      );\n\n      setFormErrors(null);\n      // Navigate to next step\n      dispatch({\n        type: 'ADD_URLS_TO_FILES_TO_UPLOAD',\n        nextStep: next,\n      });\n    } catch (err) {\n      const formattedErrors = getYupError(err);\n\n      setFormErrors(formattedErrors.filesToDownload);\n    }\n  };\n\n  const handleClickDeleteFile = async () => {\n    toggleModalWarning();\n  };\n\n  const handleClickDeleteFileToUpload = fileIndex => {\n    dispatch({\n      type: 'REMOVE_FILE_TO_UPLOAD',\n      fileIndex,\n    });\n\n    if (currentStep === 'edit-new') {\n      dispatch({\n        type: 'RESET_FILE_TO_EDIT',\n      });\n\n      goNext();\n    }\n  };\n\n  const handleClose = () => {\n    onClosed();\n    setIsFormDisabled(false);\n    setDisplayNextButton(false);\n    setFormErrors(null);\n    setShouldRefetch(false);\n\n    dispatch({\n      type: 'RESET_PROPS',\n    });\n  };\n\n  const handleCloseModalWarning = async () => {\n    setShowModalConfirmButtonLoading(false);\n\n    onToggle(shouldRefetch);\n  };\n\n  const handleGoToEditNewFile = fileIndex => {\n    dispatch({\n      type: 'SET_FILE_TO_EDIT',\n      fileIndex,\n    });\n\n    goTo('edit-new');\n  };\n\n  const handleGoToAddBrowseFiles = () => {\n    dispatch({\n      type: 'CLEAN_FILES_ERROR',\n    });\n\n    goBack();\n  };\n\n  const handleSetCropResult = blob => {\n    // Emit event : the user cropped a file that is not uploaded\n    emitEvent('didCropFile', { duplicatedFile: null, location: 'upload' });\n\n    dispatch({\n      type: 'SET_CROP_RESULT',\n      blob,\n    });\n  };\n\n  const handleSubmitEditNewFile = e => {\n    e.preventDefault();\n\n    dispatch({\n      type: 'ON_SUBMIT_EDIT_NEW_FILE',\n    });\n\n    goNext();\n  };\n\n  const handleSubmitEditExistingFile = async (\n    e,\n    shouldDuplicateMedia = false,\n    file = fileToEdit.file,\n    isSubmittingAfterCrop = false\n  ) => {\n    e.preventDefault();\n\n    if (isSubmittingAfterCrop) {\n      emitEvent('didCropFile', { duplicatedFile: shouldDuplicateMedia, location: 'upload' });\n    }\n\n    dispatch({\n      type: 'ON_SUBMIT_EDIT_EXISTING_FILE',\n    });\n\n    const headers = {};\n    const formData = new FormData();\n\n    // If the file has been cropped we need to add it to the formData\n    // otherwise we just don't send it\n    const didCropFile = file instanceof File;\n    const { abortController, id, fileInfo } = fileToEdit;\n    const requestURL = shouldDuplicateMedia ? `/${pluginId}` : `/${pluginId}?id=${id}`;\n\n    if (didCropFile) {\n      formData.append('files', file);\n    }\n\n    formData.append('fileInfo', JSON.stringify(fileInfo));\n\n    try {\n      await request(\n        requestURL,\n        {\n          method: 'POST',\n          headers,\n          body: formData,\n          signal: abortController.signal,\n        },\n        false,\n        false\n      );\n      // Close the modal and refetch data\n      toggleRef.current(true);\n    } catch (err) {\n      console.error(err);\n      const status = get(err, 'response.status', get(err, 'status', null));\n      const statusText = get(err, 'response.statusText', get(err, 'statusText', null));\n      let errorMessage = get(\n        err,\n        ['response', 'payload', 'message', '0', 'messages', '0', 'message'],\n        get(err, ['response', 'payload', 'message'], statusText)\n      );\n\n      // TODO fix errors globally when the back-end sends readable one\n      if (status === 413) {\n        errorMessage = formatMessage({ id: 'app.utils.errors.file-too-big.message' });\n      }\n\n      if (status) {\n        dispatch({\n          type: 'SET_FILE_TO_EDIT_ERROR',\n          errorMessage,\n        });\n      }\n    }\n  };\n\n  const handleReplaceMedia = () => {\n    emitEvent('didReplaceMedia', { location: 'upload' });\n    editModalRef.current.click();\n  };\n\n  const handleToggle = () => {\n    if (filesToUploadLength > 0) {\n      // eslint-disable-next-line no-alert\n      const confirm = window.confirm(\n        formatMessage({ id: getTrad('window.confirm.close-modal.files') })\n      );\n\n      if (!confirm) {\n        return;\n      }\n    }\n\n    if (!isEqual(initialFileToEdit, fileToEdit) && currentStep === 'edit') {\n      // eslint-disable-next-line no-alert\n      const confirm = window.confirm(\n        formatMessage({ id: getTrad('window.confirm.close-modal.file') })\n      );\n\n      if (!confirm) {\n        return;\n      }\n    }\n\n    onToggle(shouldRefetch);\n  };\n\n  const handleUploadFiles = async () => {\n    dispatch({\n      type: 'SET_FILES_UPLOADING_STATE',\n    });\n\n    const requests = filesToUpload.map(\n      async ({ file, fileInfo, originalName, originalIndex, abortController }) => {\n        const formData = new FormData();\n        const headers = {};\n\n        if (originalName === fileInfo.name) {\n          set(fileInfo, 'name', null);\n        }\n\n        formData.append('files', file);\n        formData.append('fileInfo', JSON.stringify(fileInfo));\n\n        try {\n          await request(\n            `/${pluginId}`,\n            {\n              method: 'POST',\n              headers,\n              body: formData,\n              signal: abortController.signal,\n            },\n            false,\n            false\n          );\n\n          setShouldRefetch(true);\n\n          dispatch({\n            type: 'REMOVE_FILE_TO_UPLOAD',\n            fileIndex: originalIndex,\n          });\n        } catch (err) {\n          console.error(err);\n          const status = get(err, 'response.status', get(err, 'status', null));\n          const statusText = get(err, 'response.statusText', get(err, 'statusText', null));\n          let errorMessage = get(\n            err,\n            ['response', 'payload', 'message', '0', 'messages', '0', 'message'],\n            get(err, ['response', 'payload', 'message'], statusText)\n          );\n\n          // TODO fix errors globally when the back-end sends readable one\n          if (status === 413) {\n            errorMessage = formatMessage({ id: 'app.utils.errors.file-too-big.message' });\n          }\n\n          if (status) {\n            dispatch({\n              type: 'SET_FILE_ERROR',\n              fileIndex: originalIndex,\n              errorMessage,\n            });\n          }\n        }\n      }\n    );\n\n    await Promise.all(requests);\n  };\n\n  const goBack = () => {\n    goTo(prev);\n  };\n\n  const goNext = () => {\n    if (next === null) {\n      onToggle();\n\n      return;\n    }\n\n    goTo(next);\n  };\n\n  const goTo = to => {\n    dispatch({\n      type: 'GO_TO',\n      to,\n    });\n  };\n\n  const toggleModalWarning = () => {\n    setIsWarningDeleteOpen(prev => !prev);\n  };\n\n  const shouldDisplayNextButton = currentStep === 'browse' && displayNextButton;\n  const isFinishButtonDisabled = filesToUpload.some(file => file.isDownloading || file.isUploading);\n  const areButtonsDisabledOnEditExistingFile =\n    currentStep === 'edit' && fileToEdit.isUploading === true;\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onToggle={handleToggle} onClosed={handleClose}>\n        {/* header title */}\n        <ModalHeader\n          goBack={goBack}\n          headerBreadcrumbs={headerBreadcrumbs}\n          withBackButton={withBackButton}\n        />\n\n        {/* body of the modal */}\n        {Component && (\n          <Component\n            {...allowedActions}\n            onAbortUpload={handleAbortUpload}\n            addFilesToUpload={addFilesToUpload}\n            fileToEdit={fileToEdit}\n            filesToDownload={filesToDownload}\n            filesToUpload={filesToUpload}\n            formErrors={formErrors}\n            components={components}\n            isEditingUploadedFile={currentStep === 'edit'}\n            isFormDisabled={isFormDisabled}\n            onChange={handleChange}\n            onClickCancelUpload={handleCancelFileToUpload}\n            onClickDeleteFileToUpload={\n              currentStep === 'edit' ? handleClickDeleteFile : handleClickDeleteFileToUpload\n            }\n            onClickEditNewFile={handleGoToEditNewFile}\n            onGoToAddBrowseFiles={handleGoToAddBrowseFiles}\n            onSubmitEdit={\n              currentStep === 'edit' ? handleSubmitEditExistingFile : handleSubmitEditNewFile\n            }\n            onToggle={handleToggle}\n            toggleDisableForm={setIsFormDisabled}\n            ref={currentStep === 'edit' ? editModalRef : null}\n            setCropResult={handleSetCropResult}\n            setShouldDisplayNextButton={setDisplayNextButton}\n            withBackButton={withBackButton}\n          />\n        )}\n\n        <ModalFooter>\n          <section>\n            <Button type=\"button\" color=\"cancel\" onClick={handleToggle}>\n              {formatMessage({ id: 'app.components.Button.cancel' })}\n            </Button>\n            {shouldDisplayNextButton && (\n              <Button\n                type=\"button\"\n                color=\"primary\"\n                onClick={handleClickNextButton}\n                disabled={isEmpty(filesToDownload)}\n              >\n                {formatMessage({ id: getTrad('button.next') })}\n              </Button>\n            )}\n            {currentStep === 'upload' && (\n              <Button\n                type=\"button\"\n                color=\"success\"\n                onClick={handleUploadFiles}\n                disabled={isFinishButtonDisabled}\n              >\n                {formatMessage(\n                  {\n                    id: getTrad(\n                      `modal.upload-list.footer.button.${\n                        filesToUploadLength > 1 ? 'plural' : 'singular'\n                      }`\n                    ),\n                  },\n                  { number: filesToUploadLength }\n                )}\n              </Button>\n            )}\n            {currentStep === 'edit-new' && (\n              <Button color=\"success\" type=\"button\" onClick={handleSubmitEditNewFile}>\n                {formatMessage({ id: 'form.button.finish' })}\n              </Button>\n            )}\n            {currentStep === 'edit' && (\n              <div style={{ margin: 'auto 0' }}>\n                <Button\n                  disabled={isFormDisabled || areButtonsDisabledOnEditExistingFile}\n                  color=\"primary\"\n                  onClick={handleReplaceMedia}\n                  style={{ marginRight: 10 }}\n                >\n                  {formatMessage({ id: getTrad('control-card.replace-media') })}\n                </Button>\n\n                <Button\n                  disabled={isFormDisabled || areButtonsDisabledOnEditExistingFile}\n                  color=\"success\"\n                  type=\"button\"\n                  onClick={handleSubmitEditExistingFile}\n                >\n                  {formatMessage({ id: 'form.button.finish' })}\n                </Button>\n              </div>\n            )}\n          </section>\n        </ModalFooter>\n      </Modal>\n      <PopUpWarning\n        onClosed={handleCloseModalWarning}\n        isOpen={isWarningDeleteOpen}\n        toggleModal={toggleModalWarning}\n        popUpWarningType=\"danger\"\n        onConfirm={handleConfirmDeleteFile}\n        isConfirmButtonLoading={showModalConfirmButtonLoading}\n      />\n    </>\n  );\n};\n\nModalStepper.defaultProps = {\n  initialFileToEdit: null,\n  initialStep: 'browse',\n  onClosed: () => {},\n  onRemoveFileFromDataToDelete: () => {},\n  onToggle: () => {},\n};\n\nModalStepper.propTypes = {\n  initialFileToEdit: PropTypes.object,\n  initialStep: PropTypes.string,\n  isOpen: PropTypes.bool.isRequired,\n  onClosed: PropTypes.func,\n  onRemoveFileFromDataToDelete: PropTypes.func,\n  onToggle: PropTypes.func,\n};\n\nexport default ModalStepper;\n"]},"metadata":{},"sourceType":"script"}