{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _lodash = require(\"lodash\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar getAttributesToDisplay = function getAttributesToDisplay(contentType) {\n  var timestamps = (0, _lodash.get)(contentType, ['options', 'timestamps']); // Sometimes timestamps is false\n\n  var timestampsArray = Array.isArray(timestamps) ? timestamps : [];\n  var idsAttributes = ['id', '_id']; // For both SQL and mongo\n\n  var unwritableAttributes = [].concat(idsAttributes, (0, _toConsumableArray2[\"default\"])(timestampsArray), ['published_at']);\n  var schemaAttributes = (0, _lodash.get)(contentType, ['attributes'], {});\n  return Object.keys(schemaAttributes).reduce(function (acc, current) {\n    if (!unwritableAttributes.includes(current)) {\n      acc.push(_objectSpread(_objectSpread({}, schemaAttributes[current]), {}, {\n        attributeName: current\n      }));\n    }\n\n    return acc;\n  }, []);\n};\n\nvar _default = getAttributesToDisplay;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/utils/getAttributesToDisplay.js"],"names":["getAttributesToDisplay","contentType","timestamps","timestampsArray","Array","isArray","idsAttributes","unwritableAttributes","schemaAttributes","Object","keys","reduce","acc","current","includes","push","attributeName"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,WAAW,EAAI;AAC5C,MAAMC,UAAU,GAAG,iBAAID,WAAJ,EAAiB,CAAC,SAAD,EAAY,YAAZ,CAAjB,CAAnB,CAD4C,CAG5C;;AACA,MAAIE,eAAe,GAAGC,KAAK,CAACC,OAAN,CAAcH,UAAd,IAA4BA,UAA5B,GAAyC,EAA/D;AACA,MAAMI,aAAa,GAAG,CAAC,IAAD,EAAO,KAAP,CAAtB,CAL4C,CAKP;;AACrC,MAAMC,oBAAoB,aAAOD,aAAP,sCAAyBH,eAAzB,IAA0C,cAA1C,EAA1B;AACA,MAAMK,gBAAgB,GAAG,iBAAIP,WAAJ,EAAiB,CAAC,YAAD,CAAjB,EAAiC,EAAjC,CAAzB;AAEA,SAAOQ,MAAM,CAACC,IAAP,CAAYF,gBAAZ,EAA8BG,MAA9B,CAAqC,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC5D,QAAI,CAACN,oBAAoB,CAACO,QAArB,CAA8BD,OAA9B,CAAL,EAA6C;AAC3CD,MAAAA,GAAG,CAACG,IAAJ,iCAAcP,gBAAgB,CAACK,OAAD,CAA9B;AAAyCG,QAAAA,aAAa,EAAEH;AAAxD;AACD;;AAED,WAAOD,GAAP;AACD,GANM,EAMJ,EANI,CAAP;AAOD,CAhBD;;eAkBeZ,sB","sourcesContent":["import { get } from 'lodash';\n\nconst getAttributesToDisplay = contentType => {\n  const timestamps = get(contentType, ['options', 'timestamps']);\n\n  // Sometimes timestamps is false\n  let timestampsArray = Array.isArray(timestamps) ? timestamps : [];\n  const idsAttributes = ['id', '_id']; // For both SQL and mongo\n  const unwritableAttributes = [...idsAttributes, ...timestampsArray, 'published_at'];\n  const schemaAttributes = get(contentType, ['attributes'], {});\n\n  return Object.keys(schemaAttributes).reduce((acc, current) => {\n    if (!unwritableAttributes.includes(current)) {\n      acc.push({ ...schemaAttributes[current], attributeName: current });\n    }\n\n    return acc;\n  }, []);\n};\n\nexport default getAttributesToDisplay;\n"]},"metadata":{},"sourceType":"script"}