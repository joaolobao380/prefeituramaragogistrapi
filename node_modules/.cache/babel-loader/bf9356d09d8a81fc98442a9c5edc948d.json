{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _react = require(\"react\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\n/**\n *\n * Initializer\n *\n */\nvar Initializer = function Initializer(_ref) {\n  var updatePlugin = _ref.updatePlugin;\n  var ref = (0, _react.useRef)();\n  ref.current = updatePlugin;\n  (0, _react.useEffect)(function () {\n    var getData = /*#__PURE__*/function () {\n      var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n        var requestURL, _yield$request, data, fileModel;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                requestURL = '/content-manager/content-types';\n                _context.prev = 1;\n                _context.next = 4;\n                return (0, _strapiHelperPlugin.request)(requestURL, {\n                  method: 'GET'\n                });\n\n              case 4:\n                _yield$request = _context.sent;\n                data = _yield$request.data;\n                fileModel = data.find(function (model) {\n                  return model.uid === 'plugins::upload.file';\n                });\n                ref.current(_pluginId[\"default\"], 'fileModel', fileModel);\n                ref.current(_pluginId[\"default\"], 'isReady', true);\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                strapi.notification.toggle({\n                  type: 'warning',\n                  message: {\n                    id: 'content-manager.error.model.fetch'\n                  }\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 11]]);\n      }));\n\n      return function getData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    getData();\n  }, []);\n  return null;\n};\n\nInitializer.propTypes = {\n  updatePlugin: _propTypes[\"default\"].func.isRequired\n};\nvar _default = Initializer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/containers/Initializer/index.js"],"names":["Initializer","updatePlugin","ref","current","getData","requestURL","method","data","fileModel","find","model","uid","pluginId","strapi","notification","toggle","type","message","id","propTypes","PropTypes","func","isRequired"],"mappings":";;;;;;;;;;;;;AAMA;;AACA;;AACA;;AACA;;AATA;AACA;AACA;AACA;AACA;AAOA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAAsB;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AACxC,MAAMC,GAAG,GAAG,oBAAZ;AACAA,EAAAA,GAAG,CAACC,OAAJ,GAAcF,YAAd;AAEA,wBAAU,YAAM;AACd,QAAMG,OAAO;AAAA,gGAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACRC,gBAAAA,UADQ,GACK,gCADL;AAAA;AAAA;AAAA,uBAIW,iCAAQA,UAAR,EAAoB;AAAEC,kBAAAA,MAAM,EAAE;AAAV,iBAApB,CAJX;;AAAA;AAAA;AAIJC,gBAAAA,IAJI,kBAIJA,IAJI;AAKNC,gBAAAA,SALM,GAKMD,IAAI,CAACE,IAAL,CAAU,UAAAC,KAAK;AAAA,yBAAIA,KAAK,CAACC,GAAN,KAAc,sBAAlB;AAAA,iBAAf,CALN;AAOZT,gBAAAA,GAAG,CAACC,OAAJ,CAAYS,oBAAZ,EAAsB,WAAtB,EAAmCJ,SAAnC;AACAN,gBAAAA,GAAG,CAACC,OAAJ,CAAYS,oBAAZ,EAAsB,SAAtB,EAAiC,IAAjC;AARY;AAAA;;AAAA;AAAA;AAAA;AAUZC,gBAAAA,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2B;AACzBC,kBAAAA,IAAI,EAAE,SADmB;AAEzBC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,EAAE,EAAE;AAAN;AAFgB,iBAA3B;;AAVY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAPd,OAAO;AAAA;AAAA;AAAA,OAAb;;AAiBAA,IAAAA,OAAO;AACR,GAnBD,EAmBG,EAnBH;AAqBA,SAAO,IAAP;AACD,CA1BD;;AA4BAJ,WAAW,CAACmB,SAAZ,GAAwB;AACtBlB,EAAAA,YAAY,EAAEmB,sBAAUC,IAAV,CAAeC;AADP,CAAxB;eAIetB,W","sourcesContent":["/**\n *\n * Initializer\n *\n */\n\nimport { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { request } from 'strapi-helper-plugin';\nimport pluginId from '../../pluginId';\n\nconst Initializer = ({ updatePlugin }) => {\n  const ref = useRef();\n  ref.current = updatePlugin;\n\n  useEffect(() => {\n    const getData = async () => {\n      const requestURL = '/content-manager/content-types';\n\n      try {\n        const { data } = await request(requestURL, { method: 'GET' });\n        const fileModel = data.find(model => model.uid === 'plugins::upload.file');\n\n        ref.current(pluginId, 'fileModel', fileModel);\n        ref.current(pluginId, 'isReady', true);\n      } catch (err) {\n        strapi.notification.toggle({\n          type: 'warning',\n          message: { id: 'content-manager.error.model.fetch' },\n        });\n      }\n    };\n\n    getData();\n  }, []);\n\n  return null;\n};\n\nInitializer.propTypes = {\n  updatePlugin: PropTypes.func.isRequired,\n};\n\nexport default Initializer;\n"]},"metadata":{},"sourceType":"script"}