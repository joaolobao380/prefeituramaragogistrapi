{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactSelect = _interopRequireDefault(require(\"react-select\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _styles = _interopRequireDefault(require(\"./utils/styles\"));\n\nvar _ClearIndicator = _interopRequireDefault(require(\"./ClearIndicator\"));\n\nvar _DropdownIndicator = _interopRequireDefault(require(\"./DropdownIndicator\"));\n\nvar _ErrorMessage = _interopRequireDefault(require(\"./ErrorMessage\"));\n\nvar _IndicatorSeparator = _interopRequireDefault(require(\"./IndicatorSeparator\"));\n\nvar _MultiValueContainer = _interopRequireDefault(require(\"./MultiValueContainer\"));\n\nvar SelectRoles = function SelectRoles(_ref) {\n  var error = _ref.error,\n      isDisabled = _ref.isDisabled,\n      name = _ref.name,\n      _onChange = _ref.onChange,\n      value = _ref.value;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      formatMessage = _useGlobalContext.formatMessage;\n\n  var translatedError = error && error.id ? formatMessage(error) : null;\n\n  var _useRolesList = (0, _hooks.useRolesList)(),\n      data = _useRolesList.roles,\n      isLoading = _useRolesList.isLoading;\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_reactSelect[\"default\"], {\n    name: name,\n    components: {\n      ClearIndicator: _ClearIndicator[\"default\"],\n      DropdownIndicator: _DropdownIndicator[\"default\"],\n      IndicatorSeparator: _IndicatorSeparator[\"default\"],\n      MultiValueContainer: _MultiValueContainer[\"default\"]\n    },\n    error: error,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    getOptionValue: function getOptionValue(option) {\n      return option.id;\n    },\n    onChange: function onChange(data) {\n      _onChange({\n        target: {\n          name: name,\n          value: data\n        }\n      });\n    },\n    isClearable: true,\n    isDisabled: isDisabled,\n    isLoading: isLoading,\n    isMulti: true,\n    options: isLoading ? [] : data,\n    styles: _styles[\"default\"],\n    value: value\n  }), error && value.length === 0 ? /*#__PURE__*/_react[\"default\"].createElement(_ErrorMessage[\"default\"], null, translatedError) : /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    top: true,\n    size: \"11px\"\n  }));\n};\n\nSelectRoles.defaultProps = {\n  error: null,\n  isDisabled: false,\n  value: []\n};\nSelectRoles.propTypes = {\n  error: _propTypes[\"default\"].shape({\n    id: _propTypes[\"default\"].string\n  }),\n  isDisabled: _propTypes[\"default\"].bool,\n  name: _propTypes[\"default\"].string.isRequired,\n  onChange: _propTypes[\"default\"].func.isRequired,\n  value: _propTypes[\"default\"].array\n};\nvar _default = SelectRoles;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/components/Users/SelectRoles/index.js"],"names":["SelectRoles","error","isDisabled","name","onChange","value","formatMessage","translatedError","id","data","roles","isLoading","ClearIndicator","DropdownIndicator","IndicatorSeparator","MultiValueContainer","option","target","styles","length","defaultProps","propTypes","PropTypes","shape","string","bool","isRequired","func","array"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAAkD;AAAA,MAA/CC,KAA+C,QAA/CA,KAA+C;AAAA,MAAxCC,UAAwC,QAAxCA,UAAwC;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,MAAtBC,SAAsB,QAAtBA,QAAsB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AACpE,0BAA0B,2CAA1B;AAAA,MAAQC,aAAR,qBAAQA,aAAR;;AACA,MAAMC,eAAe,GAAGN,KAAK,IAAIA,KAAK,CAACO,EAAf,GAAoBF,aAAa,CAACL,KAAD,CAAjC,GAA2C,IAAnE;;AACA,sBAAmC,0BAAnC;AAAA,MAAeQ,IAAf,iBAAQC,KAAR;AAAA,MAAqBC,SAArB,iBAAqBA,SAArB;;AAEA,sBACE,+EACE,gCAAC,uBAAD;AACE,IAAA,IAAI,EAAER,IADR;AAEE,IAAA,UAAU,EAAE;AACVS,MAAAA,cAAc,EAAdA,0BADU;AAEVC,MAAAA,iBAAiB,EAAjBA,6BAFU;AAGVC,MAAAA,kBAAkB,EAAlBA,8BAHU;AAIVC,MAAAA,mBAAmB,EAAnBA;AAJU,KAFd;AAQE,IAAA,KAAK,EAAEd,KART;AASE,IAAA,cAAc,EAAE,wBAAAe,MAAM;AAAA,aAAIA,MAAM,CAACb,IAAX;AAAA,KATxB;AAUE,IAAA,cAAc,EAAE,wBAAAa,MAAM;AAAA,aAAIA,MAAM,CAACR,EAAX;AAAA,KAVxB;AAWE,IAAA,QAAQ,EAAE,kBAAAC,IAAI,EAAI;AAChBL,MAAAA,SAAQ,CAAC;AAAEa,QAAAA,MAAM,EAAE;AAAEd,UAAAA,IAAI,EAAJA,IAAF;AAAQE,UAAAA,KAAK,EAAEI;AAAf;AAAV,OAAD,CAAR;AACD,KAbH;AAcE,IAAA,WAAW,MAdb;AAeE,IAAA,UAAU,EAAEP,UAfd;AAgBE,IAAA,SAAS,EAAES,SAhBb;AAiBE,IAAA,OAAO,MAjBT;AAkBE,IAAA,OAAO,EAAEA,SAAS,GAAG,EAAH,GAAQF,IAlB5B;AAmBE,IAAA,MAAM,EAAES,kBAnBV;AAoBE,IAAA,KAAK,EAAEb;AApBT,IADF,EAuBGJ,KAAK,IAAII,KAAK,CAACc,MAAN,KAAiB,CAA1B,gBACC,gCAAC,wBAAD,QAAeZ,eAAf,CADD,gBAGC,gCAAC,YAAD;AAAQ,IAAA,GAAG,MAAX;AAAY,IAAA,IAAI,EAAC;AAAjB,IA1BJ,CADF;AA+BD,CApCD;;AAsCAP,WAAW,CAACoB,YAAZ,GAA2B;AACzBnB,EAAAA,KAAK,EAAE,IADkB;AAEzBC,EAAAA,UAAU,EAAE,KAFa;AAGzBG,EAAAA,KAAK,EAAE;AAHkB,CAA3B;AAMAL,WAAW,CAACqB,SAAZ,GAAwB;AACtBpB,EAAAA,KAAK,EAAEqB,sBAAUC,KAAV,CAAgB;AACrBf,IAAAA,EAAE,EAAEc,sBAAUE;AADO,GAAhB,CADe;AAItBtB,EAAAA,UAAU,EAAEoB,sBAAUG,IAJA;AAKtBtB,EAAAA,IAAI,EAAEmB,sBAAUE,MAAV,CAAiBE,UALD;AAMtBtB,EAAAA,QAAQ,EAAEkB,sBAAUK,IAAV,CAAeD,UANH;AAOtBrB,EAAAA,KAAK,EAAEiB,sBAAUM;AAPK,CAAxB;eAUe5B,W","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport { Padded } from '@buffetjs/core';\nimport { useGlobalContext } from 'strapi-helper-plugin';\nimport { useRolesList } from '../../../hooks';\nimport styles from './utils/styles';\nimport ClearIndicator from './ClearIndicator';\nimport DropdownIndicator from './DropdownIndicator';\nimport ErrorMessage from './ErrorMessage';\nimport IndicatorSeparator from './IndicatorSeparator';\nimport MultiValueContainer from './MultiValueContainer';\n\nconst SelectRoles = ({ error, isDisabled, name, onChange, value }) => {\n  const { formatMessage } = useGlobalContext();\n  const translatedError = error && error.id ? formatMessage(error) : null;\n  const { roles: data, isLoading } = useRolesList();\n\n  return (\n    <>\n      <Select\n        name={name}\n        components={{\n          ClearIndicator,\n          DropdownIndicator,\n          IndicatorSeparator,\n          MultiValueContainer,\n        }}\n        error={error}\n        getOptionLabel={option => option.name}\n        getOptionValue={option => option.id}\n        onChange={data => {\n          onChange({ target: { name, value: data } });\n        }}\n        isClearable\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        isMulti\n        options={isLoading ? [] : data}\n        styles={styles}\n        value={value}\n      />\n      {error && value.length === 0 ? (\n        <ErrorMessage>{translatedError}</ErrorMessage>\n      ) : (\n        <Padded top size=\"11px\" />\n      )}\n    </>\n  );\n};\n\nSelectRoles.defaultProps = {\n  error: null,\n  isDisabled: false,\n  value: [],\n};\n\nSelectRoles.propTypes = {\n  error: PropTypes.shape({\n    id: PropTypes.string,\n  }),\n  isDisabled: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.array,\n};\n\nexport default SelectRoles;\n"]},"metadata":{},"sourceType":"script"}