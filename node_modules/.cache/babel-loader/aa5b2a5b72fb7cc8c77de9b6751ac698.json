{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _redux = require(\"redux\");\n\nvar _DataManagerContext = _interopRequireDefault(require(\"../../contexts/DataManagerContext\"));\n\nvar _getTrad = _interopRequireDefault(require(\"../../utils/getTrad\"));\n\nvar _makeUnique = _interopRequireDefault(require(\"../../utils/makeUnique\"));\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _FormModal = _interopRequireDefault(require(\"../FormModal\"));\n\nvar _createDataObject = _interopRequireDefault(require(\"./utils/createDataObject\"));\n\nvar _createModifiedDataSchema = _interopRequireWildcard(require(\"./utils/createModifiedDataSchema\"));\n\nvar _retrieveSpecificInfoFromComponents = _interopRequireDefault(require(\"./utils/retrieveSpecificInfoFromComponents\"));\n\nvar _retrieveComponentsFromSchema = _interopRequireDefault(require(\"./utils/retrieveComponentsFromSchema\"));\n\nvar _retrieveNestedComponents = _interopRequireDefault(require(\"./utils/retrieveNestedComponents\"));\n\nvar _retrieveComponentsThatHaveComponents = require(\"./utils/retrieveComponentsThatHaveComponents\");\n\nvar _cleanData = require(\"./utils/cleanData\");\n\nvar _constants = require(\"./constants\");\n\nvar _selectors = _interopRequireDefault(require(\"./selectors\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar DataManagerProvider = function DataManagerProvider(_ref) {\n  var allIcons = _ref.allIcons,\n      children = _ref.children,\n      components = _ref.components,\n      contentTypes = _ref.contentTypes,\n      isLoading = _ref.isLoading,\n      isLoadingForDataToBeSet = _ref.isLoadingForDataToBeSet,\n      initialData = _ref.initialData,\n      modifiedData = _ref.modifiedData,\n      reservedNames = _ref.reservedNames;\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  var _useStrapi = (0, _strapiHelperPlugin.useStrapi)(),\n      getPlugin = _useStrapi.strapi.getPlugin;\n\n  var _getPlugin = getPlugin(_pluginId[\"default\"]),\n      apis = _getPlugin.apis;\n\n  var _useState = (0, _react.useState)({\n    cancel: false\n  }),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      infoModals = _useState2[0],\n      toggleInfoModal = _useState2[1];\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      autoReload = _useGlobalContext.autoReload,\n      emitEvent = _useGlobalContext.emitEvent,\n      formatMessage = _useGlobalContext.formatMessage;\n\n  var _useUser = (0, _strapiHelperPlugin.useUser)(),\n      fetchUserPermissions = _useUser.fetchUserPermissions;\n\n  var _useLocation = (0, _reactRouterDom.useLocation)(),\n      pathname = _useLocation.pathname;\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push;\n\n  var contentTypeMatch = (0, _reactRouterDom.useRouteMatch)(\"/plugins/\".concat(_pluginId[\"default\"], \"/content-types/:uid\"));\n  var componentMatch = (0, _reactRouterDom.useRouteMatch)(\"/plugins/\".concat(_pluginId[\"default\"], \"/component-categories/:categoryUid/:componentUid\"));\n  var formatMessageRef = (0, _react.useRef)();\n  formatMessageRef.current = formatMessage;\n  var isInDevelopmentMode = autoReload;\n  var isInContentTypeView = contentTypeMatch !== null;\n  var firstKeyToMainSchema = isInContentTypeView ? 'contentType' : 'component';\n  var currentUid = isInContentTypeView ? (0, _lodash.get)(contentTypeMatch, 'params.uid', null) : (0, _lodash.get)(componentMatch, 'params.componentUid', null);\n  var abortController = new AbortController();\n  var signal = abortController.signal;\n  var getDataRef = (0, _react.useRef)();\n  var endPoint = isInContentTypeView ? 'content-types' : 'components';\n  getDataRef.current = /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n    var _yield$Promise$all, _yield$Promise$all2, componentsArray, contentTypesArray, _reservedNames, _components, _contentTypes, orderedComponents, orderedContenTypes;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return Promise.all(['components', 'content-types', 'reserved-names'].map(function (endPoint) {\n              return (0, _strapiHelperPlugin.request)(\"/\".concat(_pluginId[\"default\"], \"/\").concat(endPoint), {\n                method: 'GET',\n                signal: signal\n              });\n            }));\n\n          case 3:\n            _yield$Promise$all = _context.sent;\n            _yield$Promise$all2 = (0, _slicedToArray2[\"default\"])(_yield$Promise$all, 3);\n            componentsArray = _yield$Promise$all2[0].data;\n            contentTypesArray = _yield$Promise$all2[1].data;\n            _reservedNames = _yield$Promise$all2[2];\n            _components = (0, _createDataObject[\"default\"])(componentsArray);\n            _contentTypes = (0, _createDataObject[\"default\"])(contentTypesArray);\n            orderedComponents = (0, _createModifiedDataSchema.orderAllDataAttributesWithImmutable)({\n              components: _components\n            });\n            orderedContenTypes = (0, _createModifiedDataSchema.orderAllDataAttributesWithImmutable)({\n              components: _contentTypes\n            });\n            dispatch({\n              type: _constants.GET_DATA_SUCCEEDED,\n              components: orderedComponents.get('components'),\n              contentTypes: orderedContenTypes.get('components'),\n              reservedNames: _reservedNames\n            });\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            console.error({\n              err: _context.t0\n            });\n            strapi.notification.toggle({\n              type: 'warning',\n              message: {\n                id: 'notification.error'\n              }\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 15]]);\n  }));\n  (0, _react.useEffect)(function () {\n    getDataRef.current();\n  }, []);\n  (0, _react.useEffect)(function () {\n    // We need to set the modifiedData after the data has been retrieved\n    // and also on pathname change\n    if (!isLoading && currentUid) {\n      setModifiedData();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isLoading, pathname, currentUid]);\n  (0, _react.useEffect)(function () {\n    if (!autoReload) {\n      strapi.notification.toggle({\n        type: 'info',\n        message: {\n          id: (0, _getTrad[\"default\"])('notification.info.autoreaload-disable')\n        }\n      });\n    }\n  }, [autoReload]);\n  var didModifiedComponents = (0, _cleanData.getCreatedAndModifiedComponents)(modifiedData.components || {}, components).length > 0;\n\n  var addAttribute = function addAttribute(attributeToSet, forTarget, targetUid) {\n    var isEditing = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var initialAttribute = arguments.length > 4 ? arguments[4] : undefined;\n    var shouldAddComponentToData = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    var actionType = isEditing ? _constants.EDIT_ATTRIBUTE : _constants.ADD_ATTRIBUTE;\n    dispatch({\n      type: actionType,\n      attributeToSet: attributeToSet,\n      forTarget: forTarget,\n      targetUid: targetUid,\n      initialAttribute: initialAttribute,\n      shouldAddComponentToData: shouldAddComponentToData\n    });\n  };\n\n  var addCreatedComponentToDynamicZone = function addCreatedComponentToDynamicZone(dynamicZoneTarget, componentsToAdd) {\n    dispatch({\n      type: _constants.ADD_CREATED_COMPONENT_TO_DYNAMIC_ZONE,\n      dynamicZoneTarget: dynamicZoneTarget,\n      componentsToAdd: componentsToAdd\n    });\n  };\n\n  var cancelChanges = function cancelChanges() {\n    toggleModalCancel();\n    dispatch({\n      type: _constants.CANCEL_CHANGES\n    });\n  };\n\n  var createSchema = function createSchema(data, schemaType, uid, componentCategory) {\n    var shouldAddComponentToData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    var type = schemaType === 'contentType' ? _constants.CREATE_SCHEMA : _constants.CREATE_COMPONENT_SCHEMA;\n    dispatch({\n      type: type,\n      data: data,\n      componentCategory: componentCategory,\n      schemaType: schemaType,\n      uid: uid,\n      shouldAddComponentToData: shouldAddComponentToData\n    });\n  };\n\n  var changeDynamicZoneComponents = function changeDynamicZoneComponents(dynamicZoneTarget, newComponents) {\n    dispatch({\n      type: _constants.CHANGE_DYNAMIC_ZONE_COMPONENTS,\n      dynamicZoneTarget: dynamicZoneTarget,\n      newComponents: newComponents\n    });\n  };\n\n  var removeAttribute = function removeAttribute(mainDataKey, attributeToRemoveName) {\n    var componentUid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var type = mainDataKey === 'components' ? _constants.REMOVE_FIELD_FROM_DISPLAYED_COMPONENT : _constants.REMOVE_FIELD;\n\n    if (mainDataKey === 'contentType') {\n      emitEvent('willDeleteFieldOfContentType');\n    }\n\n    dispatch({\n      type: type,\n      mainDataKey: mainDataKey,\n      attributeToRemoveName: attributeToRemoveName,\n      componentUid: componentUid\n    });\n  };\n\n  var deleteCategory = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(categoryUid) {\n      var requestURL, userConfirm;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              requestURL = \"/\".concat(_pluginId[\"default\"], \"/component-categories/\").concat(categoryUid); // eslint-disable-next-line no-alert\n\n              userConfirm = window.confirm(formatMessage({\n                id: (0, _getTrad[\"default\"])('popUpWarning.bodyMessage.category.delete')\n              })); // Close the modal\n\n              push({\n                search: ''\n              });\n\n              if (!userConfirm) {\n                _context2.next = 12;\n                break;\n              }\n\n              strapi.lockApp();\n              _context2.next = 8;\n              return (0, _strapiHelperPlugin.request)(requestURL, {\n                method: 'DELETE'\n              }, true);\n\n            case 8:\n              _context2.next = 10;\n              return updatePermissions();\n\n            case 10:\n              // Reload the plugin so the cycle is new again\n              dispatch({\n                type: _constants.RELOAD_PLUGIN\n              }); // Refetch all the data\n\n              getDataRef.current();\n\n            case 12:\n              _context2.next = 18;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error({\n                err: _context2.t0\n              });\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n\n            case 18:\n              _context2.prev = 18;\n              strapi.unlockApp();\n              return _context2.finish(18);\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 14, 18, 21]]);\n    }));\n\n    return function deleteCategory(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var deleteData = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n      var requestURL, isTemporary, userConfirm;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              requestURL = \"/\".concat(_pluginId[\"default\"], \"/\").concat(endPoint, \"/\").concat(currentUid);\n              isTemporary = (0, _lodash.get)(modifiedData, [firstKeyToMainSchema, 'isTemporary'], false); // eslint-disable-next-line no-alert\n\n              userConfirm = window.confirm(formatMessage({\n                id: (0, _getTrad[\"default\"])(\"popUpWarning.bodyMessage.\".concat(isInContentTypeView ? 'contentType' : 'component', \".delete\"))\n              })); // Close the modal\n\n              push({\n                search: ''\n              });\n\n              if (!userConfirm) {\n                _context3.next = 16;\n                break;\n              }\n\n              if (!isTemporary) {\n                _context3.next = 9;\n                break;\n              }\n\n              // Delete the not saved type\n              // Here we just need to reset the components to the initial ones and also the content types\n              // Doing so will trigging a url change since the type doesn't exist in either the contentTypes or the components\n              // so the modified and the initial data will also be reset in the useEffect...\n              dispatch({\n                type: _constants.DELETE_NOT_SAVED_TYPE\n              });\n              return _context3.abrupt(\"return\");\n\n            case 9:\n              strapi.lockApp();\n              _context3.next = 12;\n              return (0, _strapiHelperPlugin.request)(requestURL, {\n                method: 'DELETE'\n              }, true);\n\n            case 12:\n              // Reload the plugin so the cycle is new again\n              dispatch({\n                type: _constants.RELOAD_PLUGIN\n              }); // Refetch the permissions\n\n              _context3.next = 15;\n              return updatePermissions();\n\n            case 15:\n              // Refetch all the data\n              getDataRef.current();\n\n            case 16:\n              _context3.next = 22;\n              break;\n\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error({\n                err: _context3.t0\n              });\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n\n            case 22:\n              _context3.prev = 22;\n              strapi.unlockApp();\n              return _context3.finish(22);\n\n            case 25:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 18, 22, 25]]);\n    }));\n\n    return function deleteData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var editCategory = /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(categoryUid, body) {\n      var requestURL;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              requestURL = \"/\".concat(_pluginId[\"default\"], \"/component-categories/\").concat(categoryUid); // Close the modal\n\n              push({\n                search: ''\n              }); // Lock the app\n\n              strapi.lockApp(); // Update the category\n\n              _context4.next = 6;\n              return (0, _strapiHelperPlugin.request)(requestURL, {\n                method: 'PUT',\n                body: body\n              }, true);\n\n            case 6:\n              _context4.next = 8;\n              return updatePermissions();\n\n            case 8:\n              // Reload the plugin so the cycle is new again\n              dispatch({\n                type: _constants.RELOAD_PLUGIN\n              }); // Refetch all the data\n\n              getDataRef.current();\n              _context4.next = 16;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error({\n                err: _context4.t0\n              });\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n\n            case 16:\n              _context4.prev = 16;\n              strapi.unlockApp();\n              return _context4.finish(16);\n\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 12, 16, 19]]);\n    }));\n\n    return function editCategory(_x2, _x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var getAllComponentsThatHaveAComponentInTheirAttributes = function getAllComponentsThatHaveAComponentInTheirAttributes() {\n    // We need to create an object with all the non modified compos\n    // plus the ones that are created on the fly\n    var allCompos = Object.assign({}, components, modifiedData.components); // Since we apply the modification of a specific component only in the modified data\n    // we need to update all compos with the modifications\n\n    if (!isInContentTypeView) {\n      var currentEditedCompo = (0, _lodash.get)(modifiedData, 'component', {});\n      (0, _lodash.set)(allCompos, (0, _lodash.get)(currentEditedCompo, ['uid'], ''), currentEditedCompo);\n    }\n\n    var composWithCompos = (0, _retrieveComponentsThatHaveComponents.retrieveComponentsThatHaveComponents)(allCompos);\n    return (0, _makeUnique[\"default\"])(composWithCompos);\n  };\n\n  var getAllNestedComponents = function getAllNestedComponents() {\n    var appNestedCompo = (0, _retrieveNestedComponents[\"default\"])(components);\n    var editingDataNestedCompos = (0, _retrieveNestedComponents[\"default\"])(modifiedData.components || {});\n    return (0, _makeUnique[\"default\"])([].concat((0, _toConsumableArray2[\"default\"])(editingDataNestedCompos), (0, _toConsumableArray2[\"default\"])(appNestedCompo)));\n  };\n\n  var removeComponentFromDynamicZone = function removeComponentFromDynamicZone(dzName, componentToRemoveIndex) {\n    dispatch({\n      type: _constants.REMOVE_COMPONENT_FROM_DYNAMIC_ZONE,\n      dzName: dzName,\n      componentToRemoveIndex: componentToRemoveIndex\n    });\n  };\n\n  var setModifiedData = function setModifiedData() {\n    var currentSchemas = isInContentTypeView ? contentTypes : components;\n    var schemaToSet = (0, _lodash.get)(currentSchemas, currentUid, {\n      schema: {\n        attributes: {}\n      }\n    });\n    var retrievedComponents = (0, _retrieveComponentsFromSchema[\"default\"])(schemaToSet.schema.attributes, components);\n    var newSchemaToSet = (0, _createModifiedDataSchema[\"default\"])(schemaToSet, retrievedComponents, components, isInContentTypeView);\n    var dataShape = (0, _createModifiedDataSchema.orderAllDataAttributesWithImmutable)(newSchemaToSet, isInContentTypeView);\n    var hasJustCreatedSchema = (0, _lodash.get)(schemaToSet, 'isTemporary', false) && (0, _lodash.size)((0, _lodash.get)(schemaToSet, 'schema.attributes', {})) === 0;\n    dispatch({\n      type: _constants.SET_MODIFIED_DATA,\n      schemaToSet: dataShape,\n      hasJustCreatedSchema: hasJustCreatedSchema\n    });\n  };\n\n  var shouldRedirect = (0, _react.useMemo)(function () {\n    var dataSet = isInContentTypeView ? contentTypes : components;\n    return !Object.keys(dataSet).includes(currentUid) && !isLoading;\n  }, [components, contentTypes, currentUid, isInContentTypeView, isLoading]);\n  var redirectEndpoint = (0, _react.useMemo)(function () {\n    var allowedEndpoints = Object.keys(contentTypes).filter(function (uid) {\n      return (0, _lodash.get)(contentTypes, [uid, 'schema', 'visible'], true);\n    }).sort();\n    return (0, _lodash.get)(allowedEndpoints, '0', '');\n  }, [contentTypes]);\n\n  if (shouldRedirect) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Redirect, {\n      to: \"/plugins/\".concat(_pluginId[\"default\"], \"/content-types/\").concat(redirectEndpoint)\n    });\n  }\n\n  var submitData = /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(additionalContentTypeData) {\n      var isCreating, body, contentType, method, baseURL, requestURL, oldName, newName;\n      return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              isCreating = (0, _lodash.get)(modifiedData, [firstKeyToMainSchema, 'isTemporary'], false);\n              body = {\n                components: (0, _cleanData.getComponentsToPost)(modifiedData.components, components, currentUid, isCreating)\n              };\n\n              if (isInContentTypeView) {\n                contentType = apis.forms.mutateContentTypeSchema(_objectSpread(_objectSpread({}, (0, _cleanData.formatMainDataType)(modifiedData.contentType)), additionalContentTypeData), initialData.contentType);\n                body.contentType = contentType;\n                emitEvent('willSaveContentType');\n              } else {\n                body.component = (0, _cleanData.formatMainDataType)(modifiedData.component, true);\n                emitEvent('willSaveComponent');\n              }\n\n              method = isCreating ? 'POST' : 'PUT';\n              baseURL = \"/\".concat(_pluginId[\"default\"], \"/\").concat(endPoint);\n              requestURL = isCreating ? baseURL : \"\".concat(baseURL, \"/\").concat(currentUid); // Lock the app\n\n              strapi.lockApp();\n              _context5.next = 10;\n              return (0, _strapiHelperPlugin.request)(requestURL, {\n                method: method,\n                body: body\n              }, true);\n\n            case 10:\n              _context5.next = 12;\n              return updatePermissions();\n\n            case 12:\n              // Submit ct tracking success\n              if (isInContentTypeView) {\n                emitEvent('didSaveContentType');\n                oldName = (0, _lodash.get)(body, ['contentType', 'schema', 'name'], '');\n                newName = (0, _lodash.get)(initialData, ['contentType', 'schema', 'name'], '');\n\n                if (!isCreating && oldName !== newName) {\n                  emitEvent('didEditNameOfContentType');\n                }\n              } else {\n                emitEvent('didSaveComponent');\n              } // Reload the plugin so the cycle is new again\n\n\n              dispatch({\n                type: _constants.RELOAD_PLUGIN\n              }); // Refetch all the data\n\n              getDataRef.current();\n              _context5.next = 22;\n              break;\n\n            case 17:\n              _context5.prev = 17;\n              _context5.t0 = _context5[\"catch\"](0);\n\n              if (!isInContentTypeView) {\n                emitEvent('didNotSaveComponent');\n              }\n\n              console.error({\n                err: _context5.t0.response\n              });\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n\n            case 22:\n              _context5.prev = 22;\n              strapi.unlockApp();\n              return _context5.finish(22);\n\n            case 25:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 17, 22, 25]]);\n    }));\n\n    return function submitData(_x4) {\n      return _ref6.apply(this, arguments);\n    };\n  }(); // Open the modal warning cancel changes\n\n\n  var toggleModalCancel = function toggleModalCancel() {\n    toggleInfoModal(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        cancel: !prev.cancel\n      });\n    });\n  };\n\n  var updatePermissions = /*#__PURE__*/function () {\n    var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6() {\n      return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return fetchUserPermissions();\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function updatePermissions() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var updateSchema = function updateSchema(data, schemaType, componentUID) {\n    dispatch({\n      type: _constants.UPDATE_SCHEMA,\n      data: data,\n      schemaType: schemaType,\n      uid: componentUID\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_DataManagerContext[\"default\"].Provider, {\n    value: {\n      addAttribute: addAttribute,\n      addCreatedComponentToDynamicZone: addCreatedComponentToDynamicZone,\n      allComponentsCategories: (0, _retrieveSpecificInfoFromComponents[\"default\"])(components, ['category']),\n      allComponentsIconAlreadyTaken: (0, _retrieveSpecificInfoFromComponents[\"default\"])(components, ['schema', 'icon']),\n      allIcons: allIcons,\n      changeDynamicZoneComponents: changeDynamicZoneComponents,\n      components: components,\n      componentsGroupedByCategory: (0, _lodash.groupBy)(components, 'category'),\n      componentsThatHaveOtherComponentInTheirAttributes: getAllComponentsThatHaveAComponentInTheirAttributes(),\n      contentTypes: contentTypes,\n      createSchema: createSchema,\n      deleteCategory: deleteCategory,\n      deleteData: deleteData,\n      editCategory: editCategory,\n      isInDevelopmentMode: isInDevelopmentMode,\n      initialData: initialData,\n      isInContentTypeView: isInContentTypeView,\n      modifiedData: modifiedData,\n      nestedComponents: getAllNestedComponents(),\n      removeAttribute: removeAttribute,\n      removeComponentFromDynamicZone: removeComponentFromDynamicZone,\n      reservedNames: reservedNames,\n      setModifiedData: setModifiedData,\n      sortedContentTypesList: (0, _cleanData.sortContentType)(contentTypes),\n      submitData: submitData,\n      toggleModalCancel: toggleModalCancel,\n      updateSchema: updateSchema\n    }\n  }, isLoadingForDataToBeSet ? /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.LoadingIndicatorPage, null) : /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, children, isInDevelopmentMode && /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_FormModal[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.PopUpWarning, {\n    isOpen: infoModals.cancel,\n    toggleModal: toggleModalCancel,\n    content: {\n      message: (0, _getTrad[\"default\"])(\"popUpWarning.bodyMessage.cancel-modifications\".concat(didModifiedComponents ? '.with-components' : ''))\n    },\n    popUpWarningType: \"danger\",\n    onConfirm: function onConfirm() {\n      cancelChanges();\n    }\n  }))));\n};\n\nDataManagerProvider.defaultProps = {\n  components: {}\n};\nDataManagerProvider.propTypes = {\n  allIcons: _propTypes[\"default\"].array.isRequired,\n  children: _propTypes[\"default\"].node.isRequired,\n  components: _propTypes[\"default\"].object,\n  contentTypes: _propTypes[\"default\"].object.isRequired,\n  isLoading: _propTypes[\"default\"].bool.isRequired,\n  isLoadingForDataToBeSet: _propTypes[\"default\"].bool.isRequired,\n  initialData: _propTypes[\"default\"].object.isRequired,\n  modifiedData: _propTypes[\"default\"].object.isRequired,\n  reservedNames: _propTypes[\"default\"].object.isRequired\n};\nvar mapStateToProps = (0, _selectors[\"default\"])();\nvar withConnect = (0, _reactRedux.connect)(mapStateToProps, null);\n\nvar _default = (0, _redux.compose)(withConnect)( /*#__PURE__*/(0, _react.memo)(DataManagerProvider));\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-type-builder/admin/src/containers/DataManagerProvider/index.js"],"names":["DataManagerProvider","allIcons","children","components","contentTypes","isLoading","isLoadingForDataToBeSet","initialData","modifiedData","reservedNames","dispatch","getPlugin","strapi","pluginId","apis","cancel","infoModals","toggleInfoModal","autoReload","emitEvent","formatMessage","fetchUserPermissions","pathname","push","contentTypeMatch","componentMatch","formatMessageRef","current","isInDevelopmentMode","isInContentTypeView","firstKeyToMainSchema","currentUid","abortController","AbortController","signal","getDataRef","endPoint","Promise","all","map","method","componentsArray","data","contentTypesArray","orderedComponents","orderedContenTypes","type","GET_DATA_SUCCEEDED","get","console","error","err","notification","toggle","message","id","setModifiedData","didModifiedComponents","length","addAttribute","attributeToSet","forTarget","targetUid","isEditing","initialAttribute","shouldAddComponentToData","actionType","EDIT_ATTRIBUTE","ADD_ATTRIBUTE","addCreatedComponentToDynamicZone","dynamicZoneTarget","componentsToAdd","ADD_CREATED_COMPONENT_TO_DYNAMIC_ZONE","cancelChanges","toggleModalCancel","CANCEL_CHANGES","createSchema","schemaType","uid","componentCategory","CREATE_SCHEMA","CREATE_COMPONENT_SCHEMA","changeDynamicZoneComponents","newComponents","CHANGE_DYNAMIC_ZONE_COMPONENTS","removeAttribute","mainDataKey","attributeToRemoveName","componentUid","REMOVE_FIELD_FROM_DISPLAYED_COMPONENT","REMOVE_FIELD","deleteCategory","categoryUid","requestURL","userConfirm","window","confirm","search","lockApp","updatePermissions","RELOAD_PLUGIN","unlockApp","deleteData","isTemporary","DELETE_NOT_SAVED_TYPE","editCategory","body","getAllComponentsThatHaveAComponentInTheirAttributes","allCompos","Object","assign","currentEditedCompo","composWithCompos","getAllNestedComponents","appNestedCompo","editingDataNestedCompos","removeComponentFromDynamicZone","dzName","componentToRemoveIndex","REMOVE_COMPONENT_FROM_DYNAMIC_ZONE","currentSchemas","schemaToSet","schema","attributes","retrievedComponents","newSchemaToSet","dataShape","hasJustCreatedSchema","SET_MODIFIED_DATA","shouldRedirect","dataSet","keys","includes","redirectEndpoint","allowedEndpoints","filter","sort","submitData","additionalContentTypeData","isCreating","contentType","forms","mutateContentTypeSchema","component","baseURL","oldName","newName","response","prev","updateSchema","componentUID","UPDATE_SCHEMA","allComponentsCategories","allComponentsIconAlreadyTaken","componentsGroupedByCategory","componentsThatHaveOtherComponentInTheirAttributes","nestedComponents","sortedContentTypesList","defaultProps","propTypes","PropTypes","array","isRequired","node","object","bool","mapStateToProps","withConnect"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useMemo, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { get, groupBy, set, size } from 'lodash';\nimport {\n  request,\n  LoadingIndicatorPage,\n  useGlobalContext,\n  PopUpWarning,\n  useStrapi,\n  useUser,\n} from 'strapi-helper-plugin';\nimport { useHistory, useLocation, useRouteMatch, Redirect } from 'react-router-dom';\nimport { connect, useDispatch } from 'react-redux';\nimport { compose } from 'redux';\nimport DataManagerContext from '../../contexts/DataManagerContext';\nimport getTrad from '../../utils/getTrad';\nimport makeUnique from '../../utils/makeUnique';\nimport pluginId from '../../pluginId';\nimport FormModal from '../FormModal';\nimport createDataObject from './utils/createDataObject';\nimport createModifiedDataSchema, {\n  orderAllDataAttributesWithImmutable,\n} from './utils/createModifiedDataSchema';\nimport retrieveSpecificInfoFromComponents from './utils/retrieveSpecificInfoFromComponents';\nimport retrieveComponentsFromSchema from './utils/retrieveComponentsFromSchema';\nimport retrieveNestedComponents from './utils/retrieveNestedComponents';\nimport { retrieveComponentsThatHaveComponents } from './utils/retrieveComponentsThatHaveComponents';\nimport {\n  getComponentsToPost,\n  formatMainDataType,\n  getCreatedAndModifiedComponents,\n  sortContentType,\n} from './utils/cleanData';\n\nimport {\n  ADD_ATTRIBUTE,\n  ADD_CREATED_COMPONENT_TO_DYNAMIC_ZONE,\n  CANCEL_CHANGES,\n  CHANGE_DYNAMIC_ZONE_COMPONENTS,\n  CREATE_SCHEMA,\n  CREATE_COMPONENT_SCHEMA,\n  DELETE_NOT_SAVED_TYPE,\n  EDIT_ATTRIBUTE,\n  GET_DATA_SUCCEEDED,\n  RELOAD_PLUGIN,\n  REMOVE_FIELD_FROM_DISPLAYED_COMPONENT,\n  REMOVE_COMPONENT_FROM_DYNAMIC_ZONE,\n  REMOVE_FIELD,\n  SET_MODIFIED_DATA,\n  UPDATE_SCHEMA,\n} from './constants';\nimport makeSelectDataManagerProvider from './selectors';\n\nconst DataManagerProvider = ({\n  allIcons,\n  children,\n  components,\n  contentTypes,\n  isLoading,\n  isLoadingForDataToBeSet,\n  initialData,\n  modifiedData,\n  reservedNames,\n}) => {\n  const dispatch = useDispatch();\n  const {\n    strapi: { getPlugin },\n  } = useStrapi();\n  const { apis } = getPlugin(pluginId);\n  const [infoModals, toggleInfoModal] = useState({ cancel: false });\n  const { autoReload, emitEvent, formatMessage } = useGlobalContext();\n  const { fetchUserPermissions } = useUser();\n\n  const { pathname } = useLocation();\n  const { push } = useHistory();\n  const contentTypeMatch = useRouteMatch(`/plugins/${pluginId}/content-types/:uid`);\n  const componentMatch = useRouteMatch(\n    `/plugins/${pluginId}/component-categories/:categoryUid/:componentUid`\n  );\n\n  const formatMessageRef = useRef();\n  formatMessageRef.current = formatMessage;\n  const isInDevelopmentMode = autoReload;\n\n  const isInContentTypeView = contentTypeMatch !== null;\n  const firstKeyToMainSchema = isInContentTypeView ? 'contentType' : 'component';\n  const currentUid = isInContentTypeView\n    ? get(contentTypeMatch, 'params.uid', null)\n    : get(componentMatch, 'params.componentUid', null);\n  const abortController = new AbortController();\n  const { signal } = abortController;\n  const getDataRef = useRef();\n  const endPoint = isInContentTypeView ? 'content-types' : 'components';\n\n  getDataRef.current = async () => {\n    try {\n      const [\n        { data: componentsArray },\n        { data: contentTypesArray },\n        reservedNames,\n      ] = await Promise.all(\n        ['components', 'content-types', 'reserved-names'].map(endPoint => {\n          return request(`/${pluginId}/${endPoint}`, {\n            method: 'GET',\n            signal,\n          });\n        })\n      );\n\n      const components = createDataObject(componentsArray);\n      const contentTypes = createDataObject(contentTypesArray);\n      const orderedComponents = orderAllDataAttributesWithImmutable({\n        components,\n      });\n      const orderedContenTypes = orderAllDataAttributesWithImmutable({\n        components: contentTypes,\n      });\n\n      dispatch({\n        type: GET_DATA_SUCCEEDED,\n        components: orderedComponents.get('components'),\n        contentTypes: orderedContenTypes.get('components'),\n        reservedNames,\n      });\n    } catch (err) {\n      console.error({ err });\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n    }\n  };\n\n  useEffect(() => {\n    getDataRef.current();\n  }, []);\n\n  useEffect(() => {\n    // We need to set the modifiedData after the data has been retrieved\n    // and also on pathname change\n    if (!isLoading && currentUid) {\n      setModifiedData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLoading, pathname, currentUid]);\n\n  useEffect(() => {\n    if (!autoReload) {\n      strapi.notification.toggle({\n        type: 'info',\n        message: { id: getTrad('notification.info.autoreaload-disable') },\n      });\n    }\n  }, [autoReload]);\n\n  const didModifiedComponents =\n    getCreatedAndModifiedComponents(modifiedData.components || {}, components).length > 0;\n\n  const addAttribute = (\n    attributeToSet,\n    forTarget,\n    targetUid,\n    isEditing = false,\n    initialAttribute,\n    shouldAddComponentToData = false\n  ) => {\n    const actionType = isEditing ? EDIT_ATTRIBUTE : ADD_ATTRIBUTE;\n\n    dispatch({\n      type: actionType,\n      attributeToSet,\n      forTarget,\n      targetUid,\n      initialAttribute,\n      shouldAddComponentToData,\n    });\n  };\n\n  const addCreatedComponentToDynamicZone = (dynamicZoneTarget, componentsToAdd) => {\n    dispatch({\n      type: ADD_CREATED_COMPONENT_TO_DYNAMIC_ZONE,\n      dynamicZoneTarget,\n      componentsToAdd,\n    });\n  };\n\n  const cancelChanges = () => {\n    toggleModalCancel();\n    dispatch({ type: CANCEL_CHANGES });\n  };\n\n  const createSchema = (\n    data,\n    schemaType,\n    uid,\n    componentCategory,\n    shouldAddComponentToData = false\n  ) => {\n    const type = schemaType === 'contentType' ? CREATE_SCHEMA : CREATE_COMPONENT_SCHEMA;\n\n    dispatch({\n      type,\n      data,\n      componentCategory,\n      schemaType,\n      uid,\n      shouldAddComponentToData,\n    });\n  };\n\n  const changeDynamicZoneComponents = (dynamicZoneTarget, newComponents) => {\n    dispatch({\n      type: CHANGE_DYNAMIC_ZONE_COMPONENTS,\n      dynamicZoneTarget,\n      newComponents,\n    });\n  };\n\n  const removeAttribute = (mainDataKey, attributeToRemoveName, componentUid = '') => {\n    const type =\n      mainDataKey === 'components' ? REMOVE_FIELD_FROM_DISPLAYED_COMPONENT : REMOVE_FIELD;\n\n    if (mainDataKey === 'contentType') {\n      emitEvent('willDeleteFieldOfContentType');\n    }\n\n    dispatch({\n      type,\n      mainDataKey,\n      attributeToRemoveName,\n      componentUid,\n    });\n  };\n\n  const deleteCategory = async categoryUid => {\n    try {\n      const requestURL = `/${pluginId}/component-categories/${categoryUid}`;\n      // eslint-disable-next-line no-alert\n      const userConfirm = window.confirm(\n        formatMessage({\n          id: getTrad('popUpWarning.bodyMessage.category.delete'),\n        })\n      );\n      // Close the modal\n      push({ search: '' });\n\n      if (userConfirm) {\n        strapi.lockApp();\n\n        await request(requestURL, { method: 'DELETE' }, true);\n\n        await updatePermissions();\n\n        // Reload the plugin so the cycle is new again\n        dispatch({ type: RELOAD_PLUGIN });\n        // Refetch all the data\n        getDataRef.current();\n      }\n    } catch (err) {\n      console.error({ err });\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n    } finally {\n      strapi.unlockApp();\n    }\n  };\n\n  const deleteData = async () => {\n    try {\n      const requestURL = `/${pluginId}/${endPoint}/${currentUid}`;\n      const isTemporary = get(modifiedData, [firstKeyToMainSchema, 'isTemporary'], false);\n      // eslint-disable-next-line no-alert\n      const userConfirm = window.confirm(\n        formatMessage({\n          id: getTrad(\n            `popUpWarning.bodyMessage.${isInContentTypeView ? 'contentType' : 'component'}.delete`\n          ),\n        })\n      );\n\n      // Close the modal\n      push({ search: '' });\n\n      if (userConfirm) {\n        if (isTemporary) {\n          // Delete the not saved type\n          // Here we just need to reset the components to the initial ones and also the content types\n          // Doing so will trigging a url change since the type doesn't exist in either the contentTypes or the components\n          // so the modified and the initial data will also be reset in the useEffect...\n          dispatch({ type: DELETE_NOT_SAVED_TYPE });\n\n          return;\n        }\n\n        strapi.lockApp();\n\n        await request(requestURL, { method: 'DELETE' }, true);\n\n        // Reload the plugin so the cycle is new again\n        dispatch({ type: RELOAD_PLUGIN });\n\n        // Refetch the permissions\n        await updatePermissions();\n\n        // Refetch all the data\n        getDataRef.current();\n      }\n    } catch (err) {\n      console.error({ err });\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n    } finally {\n      strapi.unlockApp();\n    }\n  };\n\n  const editCategory = async (categoryUid, body) => {\n    try {\n      const requestURL = `/${pluginId}/component-categories/${categoryUid}`;\n\n      // Close the modal\n      push({ search: '' });\n\n      // Lock the app\n      strapi.lockApp();\n\n      // Update the category\n      await request(requestURL, { method: 'PUT', body }, true);\n\n      await updatePermissions();\n\n      // Reload the plugin so the cycle is new again\n      dispatch({ type: RELOAD_PLUGIN });\n      // Refetch all the data\n      getDataRef.current();\n    } catch (err) {\n      console.error({ err });\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n    } finally {\n      strapi.unlockApp();\n    }\n  };\n\n  const getAllComponentsThatHaveAComponentInTheirAttributes = () => {\n    // We need to create an object with all the non modified compos\n    // plus the ones that are created on the fly\n    const allCompos = Object.assign({}, components, modifiedData.components);\n\n    // Since we apply the modification of a specific component only in the modified data\n    // we need to update all compos with the modifications\n    if (!isInContentTypeView) {\n      const currentEditedCompo = get(modifiedData, 'component', {});\n\n      set(allCompos, get(currentEditedCompo, ['uid'], ''), currentEditedCompo);\n    }\n\n    const composWithCompos = retrieveComponentsThatHaveComponents(allCompos);\n\n    return makeUnique(composWithCompos);\n  };\n\n  const getAllNestedComponents = () => {\n    const appNestedCompo = retrieveNestedComponents(components);\n    const editingDataNestedCompos = retrieveNestedComponents(modifiedData.components || {});\n\n    return makeUnique([...editingDataNestedCompos, ...appNestedCompo]);\n  };\n\n  const removeComponentFromDynamicZone = (dzName, componentToRemoveIndex) => {\n    dispatch({\n      type: REMOVE_COMPONENT_FROM_DYNAMIC_ZONE,\n      dzName,\n      componentToRemoveIndex,\n    });\n  };\n\n  const setModifiedData = () => {\n    const currentSchemas = isInContentTypeView ? contentTypes : components;\n    const schemaToSet = get(currentSchemas, currentUid, {\n      schema: { attributes: {} },\n    });\n\n    const retrievedComponents = retrieveComponentsFromSchema(\n      schemaToSet.schema.attributes,\n      components\n    );\n    const newSchemaToSet = createModifiedDataSchema(\n      schemaToSet,\n      retrievedComponents,\n      components,\n      isInContentTypeView\n    );\n\n    const dataShape = orderAllDataAttributesWithImmutable(newSchemaToSet, isInContentTypeView);\n\n    const hasJustCreatedSchema =\n      get(schemaToSet, 'isTemporary', false) &&\n      size(get(schemaToSet, 'schema.attributes', {})) === 0;\n\n    dispatch({\n      type: SET_MODIFIED_DATA,\n      schemaToSet: dataShape,\n      hasJustCreatedSchema,\n    });\n  };\n\n  const shouldRedirect = useMemo(() => {\n    const dataSet = isInContentTypeView ? contentTypes : components;\n\n    return !Object.keys(dataSet).includes(currentUid) && !isLoading;\n  }, [components, contentTypes, currentUid, isInContentTypeView, isLoading]);\n\n  const redirectEndpoint = useMemo(() => {\n    const allowedEndpoints = Object.keys(contentTypes)\n      .filter(uid => get(contentTypes, [uid, 'schema', 'visible'], true))\n      .sort();\n\n    return get(allowedEndpoints, '0', '');\n  }, [contentTypes]);\n\n  if (shouldRedirect) {\n    return <Redirect to={`/plugins/${pluginId}/content-types/${redirectEndpoint}`} />;\n  }\n\n  const submitData = async additionalContentTypeData => {\n    try {\n      const isCreating = get(modifiedData, [firstKeyToMainSchema, 'isTemporary'], false);\n      const body = {\n        components: getComponentsToPost(\n          modifiedData.components,\n          components,\n          currentUid,\n          isCreating\n        ),\n      };\n\n      if (isInContentTypeView) {\n        const contentType = apis.forms.mutateContentTypeSchema(\n          {\n            ...formatMainDataType(modifiedData.contentType),\n            ...additionalContentTypeData,\n          },\n          initialData.contentType\n        );\n\n        body.contentType = contentType;\n\n        emitEvent('willSaveContentType');\n      } else {\n        body.component = formatMainDataType(modifiedData.component, true);\n\n        emitEvent('willSaveComponent');\n      }\n\n      const method = isCreating ? 'POST' : 'PUT';\n\n      const baseURL = `/${pluginId}/${endPoint}`;\n      const requestURL = isCreating ? baseURL : `${baseURL}/${currentUid}`;\n\n      // Lock the app\n      strapi.lockApp();\n\n      await request(requestURL, { method, body }, true);\n\n      await updatePermissions();\n\n      // Submit ct tracking success\n      if (isInContentTypeView) {\n        emitEvent('didSaveContentType');\n\n        const oldName = get(body, ['contentType', 'schema', 'name'], '');\n        const newName = get(initialData, ['contentType', 'schema', 'name'], '');\n\n        if (!isCreating && oldName !== newName) {\n          emitEvent('didEditNameOfContentType');\n        }\n      } else {\n        emitEvent('didSaveComponent');\n      }\n\n      // Reload the plugin so the cycle is new again\n      dispatch({ type: RELOAD_PLUGIN });\n      // Refetch all the data\n      getDataRef.current();\n    } catch (err) {\n      if (!isInContentTypeView) {\n        emitEvent('didNotSaveComponent');\n      }\n\n      console.error({ err: err.response });\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n    } finally {\n      strapi.unlockApp();\n    }\n  };\n\n  // Open the modal warning cancel changes\n  const toggleModalCancel = () => {\n    toggleInfoModal(prev => ({ ...prev, cancel: !prev.cancel }));\n  };\n\n  const updatePermissions = async () => {\n    await fetchUserPermissions();\n  };\n\n  const updateSchema = (data, schemaType, componentUID) => {\n    dispatch({\n      type: UPDATE_SCHEMA,\n      data,\n      schemaType,\n      uid: componentUID,\n    });\n  };\n\n  return (\n    <DataManagerContext.Provider\n      value={{\n        addAttribute,\n        addCreatedComponentToDynamicZone,\n        allComponentsCategories: retrieveSpecificInfoFromComponents(components, ['category']),\n        allComponentsIconAlreadyTaken: retrieveSpecificInfoFromComponents(components, [\n          'schema',\n          'icon',\n        ]),\n        allIcons,\n        changeDynamicZoneComponents,\n        components,\n        componentsGroupedByCategory: groupBy(components, 'category'),\n        componentsThatHaveOtherComponentInTheirAttributes: getAllComponentsThatHaveAComponentInTheirAttributes(),\n        contentTypes,\n        createSchema,\n        deleteCategory,\n        deleteData,\n        editCategory,\n        isInDevelopmentMode,\n        initialData,\n        isInContentTypeView,\n        modifiedData,\n        nestedComponents: getAllNestedComponents(),\n        removeAttribute,\n        removeComponentFromDynamicZone,\n        reservedNames,\n        setModifiedData,\n        sortedContentTypesList: sortContentType(contentTypes),\n        submitData,\n        toggleModalCancel,\n        updateSchema,\n      }}\n    >\n      {isLoadingForDataToBeSet ? (\n        <LoadingIndicatorPage />\n      ) : (\n        <>\n          {children}\n          {isInDevelopmentMode && (\n            <>\n              <FormModal />\n              <PopUpWarning\n                isOpen={infoModals.cancel}\n                toggleModal={toggleModalCancel}\n                content={{\n                  message: getTrad(\n                    `popUpWarning.bodyMessage.cancel-modifications${\n                      didModifiedComponents ? '.with-components' : ''\n                    }`\n                  ),\n                }}\n                popUpWarningType=\"danger\"\n                onConfirm={() => {\n                  cancelChanges();\n                }}\n              />\n            </>\n          )}\n        </>\n      )}\n    </DataManagerContext.Provider>\n  );\n};\n\nDataManagerProvider.defaultProps = {\n  components: {},\n};\n\nDataManagerProvider.propTypes = {\n  allIcons: PropTypes.array.isRequired,\n  children: PropTypes.node.isRequired,\n  components: PropTypes.object,\n  contentTypes: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  isLoadingForDataToBeSet: PropTypes.bool.isRequired,\n  initialData: PropTypes.object.isRequired,\n  modifiedData: PropTypes.object.isRequired,\n  reservedNames: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = makeSelectDataManagerProvider();\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect)(memo(DataManagerProvider));\n"]},"metadata":{},"sourceType":"script"}