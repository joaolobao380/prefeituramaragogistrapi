{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _formik = require(\"formik\");\n\nvar _schemas = _interopRequireDefault(require(\"../../schemas\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _SettingsModal = _interopRequireDefault(require(\"../SettingsModal\"));\n\nvar _useDefaultLocales2 = _interopRequireDefault(require(\"../../hooks/useDefaultLocales\"));\n\nvar _useAddLocale2 = _interopRequireDefault(require(\"../../hooks/useAddLocale\"));\n\nvar _BaseForm = _interopRequireDefault(require(\"./BaseForm\"));\n\nvar _AdvancedForm = _interopRequireDefault(require(\"./AdvancedForm\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ModalCreate = function ModalCreate(_ref) {\n  var alreadyUsedLocales = _ref.alreadyUsedLocales,\n      onClose = _ref.onClose,\n      isOpened = _ref.isOpened;\n\n  var _useDefaultLocales = (0, _useDefaultLocales2[\"default\"])(),\n      defaultLocales = _useDefaultLocales.defaultLocales,\n      isLoading = _useDefaultLocales.isLoading;\n\n  var _useAddLocale = (0, _useAddLocale2[\"default\"])(),\n      isAdding = _useAddLocale.isAdding,\n      addLocale = _useAddLocale.addLocale;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useUser = (0, _strapiHelperPlugin.useUser)(),\n      fetchUserPermissions = _useUser.fetchUserPermissions;\n\n  var shouldUpdatePermissions = (0, _react.useRef)(false);\n\n  if (isLoading) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(\"p\", null, formatMessage({\n      id: (0, _utils.getTrad)('Settings.locales.modal.create.defaultLocales.loading')\n    })));\n  }\n\n  var handleClosed = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!shouldUpdatePermissions.current) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return fetchUserPermissions();\n\n            case 3:\n              shouldUpdatePermissions.current = true;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleClosed() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var options = (defaultLocales || []).map(function (locale) {\n    return {\n      label: locale.code,\n      value: locale.name\n    };\n  }).filter(function (_ref3) {\n    var label = _ref3.label;\n    var foundLocale = alreadyUsedLocales.find(function (_ref4) {\n      var code = _ref4.code;\n      return code === label;\n    });\n    return !foundLocale;\n  });\n  var defaultOption = options[0];\n\n  if (!defaultOption) {\n    return null;\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.Modal, {\n    isOpen: isOpened,\n    onToggle: onClose,\n    withoverflow: \"true\",\n    onClosed: handleClosed\n  }, /*#__PURE__*/_react[\"default\"].createElement(_formik.Formik, {\n    initialValues: {\n      code: defaultOption.label,\n      displayName: defaultOption.value,\n      isDefault: false\n    },\n    onSubmit: function onSubmit(values) {\n      return addLocale({\n        code: values.code,\n        name: values.displayName,\n        isDefault: values.isDefault\n      }).then(function () {\n        shouldUpdatePermissions.current = true;\n      }).then(function () {\n        onClose();\n      });\n    },\n    validationSchema: _schemas[\"default\"]\n  }, function (_ref5) {\n    var handleSubmit = _ref5.handleSubmit,\n        errors = _ref5.errors;\n    return /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/_react[\"default\"].createElement(_SettingsModal[\"default\"], {\n      title: formatMessage({\n        id: (0, _utils.getTrad)('Settings.locales.modal.title')\n      }),\n      breadCrumb: [formatMessage({\n        id: (0, _utils.getTrad)('Settings.list.actions.add')\n      })],\n      tabsAriaLabel: formatMessage({\n        id: (0, _utils.getTrad)('Settings.locales.modal.create.tab.label')\n      }),\n      tabsId: \"i18n-settings-tabs-create\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.TabPanel, null, /*#__PURE__*/_react[\"default\"].createElement(_BaseForm[\"default\"], {\n      options: options,\n      defaultOption: defaultOption,\n      alreadyUsedLocales: alreadyUsedLocales\n    })), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.TabPanel, null, /*#__PURE__*/_react[\"default\"].createElement(_AdvancedForm[\"default\"], null))), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.ModalFooter, null, /*#__PURE__*/_react[\"default\"].createElement(\"section\", null, /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n      type: \"button\",\n      color: \"cancel\",\n      onClick: onClose\n    }, formatMessage({\n      id: 'app.components.Button.cancel'\n    })), /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n      color: \"success\",\n      type: \"submit\",\n      isLoading: isAdding,\n      disabled: Object.keys(errors).length > 0\n    }, formatMessage({\n      id: (0, _utils.getTrad)('Settings.locales.modal.create.confirmation')\n    })))));\n  }));\n};\n\nModalCreate.defaultProps = {\n  alreadyUsedLocales: []\n};\nModalCreate.propTypes = {\n  alreadyUsedLocales: _propTypes[\"default\"].array,\n  onClose: _propTypes[\"default\"].func.isRequired,\n  isOpened: _propTypes[\"default\"].bool.isRequired\n};\nvar _default = ModalCreate;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/components/ModalCreate/index.js"],"names":["ModalCreate","alreadyUsedLocales","onClose","isOpened","defaultLocales","isLoading","isAdding","addLocale","formatMessage","fetchUserPermissions","shouldUpdatePermissions","id","handleClosed","current","options","map","locale","label","code","value","name","filter","foundLocale","find","defaultOption","displayName","isDefault","values","then","localeFormSchema","handleSubmit","errors","Object","keys","length","defaultProps","propTypes","PropTypes","array","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalFooter, TabPanel, useUser } from 'strapi-helper-plugin';\nimport { useIntl } from 'react-intl';\nimport { Button } from '@buffetjs/core';\nimport { Formik } from 'formik';\nimport localeFormSchema from '../../schemas';\nimport { getTrad } from '../../utils';\nimport SettingsModal from '../SettingsModal';\nimport useDefaultLocales from '../../hooks/useDefaultLocales';\nimport useAddLocale from '../../hooks/useAddLocale';\nimport BaseForm from './BaseForm';\nimport AdvancedForm from './AdvancedForm';\n\nconst ModalCreate = ({ alreadyUsedLocales, onClose, isOpened }) => {\n  const { defaultLocales, isLoading } = useDefaultLocales();\n  const { isAdding, addLocale } = useAddLocale();\n  const { formatMessage } = useIntl();\n\n  const { fetchUserPermissions } = useUser();\n  const shouldUpdatePermissions = useRef(false);\n\n  if (isLoading) {\n    return (\n      <div>\n        <p>\n          {formatMessage({ id: getTrad('Settings.locales.modal.create.defaultLocales.loading') })}\n        </p>\n      </div>\n    );\n  }\n\n  const handleClosed = async () => {\n    if (shouldUpdatePermissions.current) {\n      await fetchUserPermissions();\n    }\n\n    shouldUpdatePermissions.current = true;\n  };\n\n  const options = (defaultLocales || [])\n    .map(locale => ({\n      label: locale.code,\n      value: locale.name,\n    }))\n    .filter(({ label }) => {\n      const foundLocale = alreadyUsedLocales.find(({ code }) => code === label);\n\n      return !foundLocale;\n    });\n\n  const defaultOption = options[0];\n\n  if (!defaultOption) {\n    return null;\n  }\n\n  return (\n    <Modal isOpen={isOpened} onToggle={onClose} withoverflow=\"true\" onClosed={handleClosed}>\n      <Formik\n        initialValues={{\n          code: defaultOption.label,\n          displayName: defaultOption.value,\n          isDefault: false,\n        }}\n        onSubmit={values =>\n          addLocale({\n            code: values.code,\n            name: values.displayName,\n            isDefault: values.isDefault,\n          })\n            .then(() => {\n              shouldUpdatePermissions.current = true;\n            })\n            .then(() => {\n              onClose();\n            })}\n        validationSchema={localeFormSchema}\n      >\n        {({ handleSubmit, errors }) => (\n          <form onSubmit={handleSubmit}>\n            <SettingsModal\n              title={formatMessage({\n                id: getTrad('Settings.locales.modal.title'),\n              })}\n              breadCrumb={[formatMessage({ id: getTrad('Settings.list.actions.add') })]}\n              tabsAriaLabel={formatMessage({\n                id: getTrad('Settings.locales.modal.create.tab.label'),\n              })}\n              tabsId=\"i18n-settings-tabs-create\"\n            >\n              <TabPanel>\n                <BaseForm\n                  options={options}\n                  defaultOption={defaultOption}\n                  alreadyUsedLocales={alreadyUsedLocales}\n                />\n              </TabPanel>\n              <TabPanel>\n                <AdvancedForm />\n              </TabPanel>\n            </SettingsModal>\n\n            <ModalFooter>\n              <section>\n                <Button type=\"button\" color=\"cancel\" onClick={onClose}>\n                  {formatMessage({ id: 'app.components.Button.cancel' })}\n                </Button>\n                <Button\n                  color=\"success\"\n                  type=\"submit\"\n                  isLoading={isAdding}\n                  disabled={Object.keys(errors).length > 0}\n                >\n                  {formatMessage({ id: getTrad('Settings.locales.modal.create.confirmation') })}\n                </Button>\n              </section>\n            </ModalFooter>\n          </form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n\nModalCreate.defaultProps = {\n  alreadyUsedLocales: [],\n};\n\nModalCreate.propTypes = {\n  alreadyUsedLocales: PropTypes.array,\n  onClose: PropTypes.func.isRequired,\n  isOpened: PropTypes.bool.isRequired,\n};\n\nexport default ModalCreate;\n"]},"metadata":{},"sourceType":"script"}