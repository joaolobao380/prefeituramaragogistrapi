{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.crudInitialState = exports[\"default\"] = void 0;\n\nvar _immer = _interopRequireDefault(require(\"immer\"));\n\nvar _constants = require(\"./constants\");\n\n/* eslint-disable consistent-return */\n// NOTE: instead of creating a shared reducer here, we could also create a hook\n// that returns the dispatch and the state, however it will mess with the linter\n// and force us to either disable the linter for the hooks dependencies array rule or\n// require us to add the dispatch to the array wich is not wanted. This refacto does not require us to\n// to do any of this.\nvar crudInitialState = {\n  componentsDataStructure: {},\n  contentTypeDataStructure: {},\n  isLoading: true,\n  data: {},\n  status: 'resolved'\n};\nexports.crudInitialState = crudInitialState;\n\nvar crudReducer = function crudReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : crudInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return (0, _immer[\"default\"])(state, function (draftState) {\n    switch (action.type) {\n      case _constants.GET_DATA:\n        {\n          draftState.isLoading = true;\n          draftState.data = {};\n          break;\n        }\n\n      case _constants.GET_DATA_SUCCEEDED:\n        {\n          draftState.isLoading = false;\n          draftState.data = action.data;\n          break;\n        }\n\n      case _constants.INIT_FORM:\n        {\n          if (action.data) {\n            draftState.isLoading = false;\n            draftState.data = action.data;\n            break;\n          }\n\n          draftState.isLoading = false;\n          draftState.data = state.contentTypeDataStructure;\n          break;\n        }\n\n      case _constants.RESET_PROPS:\n        {\n          return crudInitialState;\n        }\n\n      case _constants.SET_DATA_STRUCTURES:\n        {\n          draftState.componentsDataStructure = action.componentsDataStructure;\n          draftState.contentTypeDataStructure = action.contentTypeDataStructure;\n          break;\n        }\n\n      case _constants.SET_STATUS:\n        {\n          draftState.status = action.status;\n          break;\n        }\n\n      case _constants.SUBMIT_SUCCEEDED:\n        {\n          draftState.data = action.data;\n          break;\n        }\n\n      default:\n        return draftState;\n    }\n  });\n};\n\nvar _default = crudReducer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/sharedReducers/crudReducer/reducer.js"],"names":["crudInitialState","componentsDataStructure","contentTypeDataStructure","isLoading","data","status","crudReducer","state","action","draftState","type","GET_DATA","GET_DATA_SUCCEEDED","INIT_FORM","RESET_PROPS","SET_DATA_STRUCTURES","SET_STATUS","SUBMIT_SUCCEEDED"],"mappings":";;;;;;;;;AACA;;AAQA;;AATA;AAGA;AACA;AACA;AACA;AACA;AAYA,IAAMA,gBAAgB,GAAG;AACvBC,EAAAA,uBAAuB,EAAE,EADF;AAEvBC,EAAAA,wBAAwB,EAAE,EAFH;AAGvBC,EAAAA,SAAS,EAAE,IAHY;AAIvBC,EAAAA,IAAI,EAAE,EAJiB;AAKvBC,EAAAA,MAAM,EAAE;AALe,CAAzB;;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAACC,KAAD,uEAASP,gBAAT;AAAA,MAA2BQ,MAA3B;AAAA,SAClB,uBAAQD,KAAR,EAAe,UAAAE,UAAU,EAAI;AAC3B,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKC,mBAAL;AAAe;AACbF,UAAAA,UAAU,CAACN,SAAX,GAAuB,IAAvB;AACAM,UAAAA,UAAU,CAACL,IAAX,GAAkB,EAAlB;AACA;AACD;;AACD,WAAKQ,6BAAL;AAAyB;AACvBH,UAAAA,UAAU,CAACN,SAAX,GAAuB,KAAvB;AACAM,UAAAA,UAAU,CAACL,IAAX,GAAkBI,MAAM,CAACJ,IAAzB;AACA;AACD;;AACD,WAAKS,oBAAL;AAAgB;AACd,cAAIL,MAAM,CAACJ,IAAX,EAAiB;AACfK,YAAAA,UAAU,CAACN,SAAX,GAAuB,KAAvB;AACAM,YAAAA,UAAU,CAACL,IAAX,GAAkBI,MAAM,CAACJ,IAAzB;AAEA;AACD;;AAEDK,UAAAA,UAAU,CAACN,SAAX,GAAuB,KAAvB;AACAM,UAAAA,UAAU,CAACL,IAAX,GAAkBG,KAAK,CAACL,wBAAxB;AACA;AACD;;AACD,WAAKY,sBAAL;AAAkB;AAChB,iBAAOd,gBAAP;AACD;;AACD,WAAKe,8BAAL;AAA0B;AACxBN,UAAAA,UAAU,CAACR,uBAAX,GAAqCO,MAAM,CAACP,uBAA5C;AACAQ,UAAAA,UAAU,CAACP,wBAAX,GAAsCM,MAAM,CAACN,wBAA7C;AACA;AACD;;AACD,WAAKc,qBAAL;AAAiB;AACfP,UAAAA,UAAU,CAACJ,MAAX,GAAoBG,MAAM,CAACH,MAA3B;AACA;AACD;;AACD,WAAKY,2BAAL;AAAuB;AACrBR,UAAAA,UAAU,CAACL,IAAX,GAAkBI,MAAM,CAACJ,IAAzB;AACA;AACD;;AACD;AACE,eAAOK,UAAP;AAxCJ;AA0CD,GA3CD,CADkB;AAAA,CAApB;;eA8CeH,W","sourcesContent":["/* eslint-disable consistent-return */\nimport produce from 'immer';\n\n// NOTE: instead of creating a shared reducer here, we could also create a hook\n// that returns the dispatch and the state, however it will mess with the linter\n// and force us to either disable the linter for the hooks dependencies array rule or\n// require us to add the dispatch to the array wich is not wanted. This refacto does not require us to\n// to do any of this.\n\nimport {\n  GET_DATA,\n  GET_DATA_SUCCEEDED,\n  INIT_FORM,\n  RESET_PROPS,\n  SET_DATA_STRUCTURES,\n  SET_STATUS,\n  SUBMIT_SUCCEEDED,\n} from './constants';\n\nconst crudInitialState = {\n  componentsDataStructure: {},\n  contentTypeDataStructure: {},\n  isLoading: true,\n  data: {},\n  status: 'resolved',\n};\n\nconst crudReducer = (state = crudInitialState, action) =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case GET_DATA: {\n        draftState.isLoading = true;\n        draftState.data = {};\n        break;\n      }\n      case GET_DATA_SUCCEEDED: {\n        draftState.isLoading = false;\n        draftState.data = action.data;\n        break;\n      }\n      case INIT_FORM: {\n        if (action.data) {\n          draftState.isLoading = false;\n          draftState.data = action.data;\n\n          break;\n        }\n\n        draftState.isLoading = false;\n        draftState.data = state.contentTypeDataStructure;\n        break;\n      }\n      case RESET_PROPS: {\n        return crudInitialState;\n      }\n      case SET_DATA_STRUCTURES: {\n        draftState.componentsDataStructure = action.componentsDataStructure;\n        draftState.contentTypeDataStructure = action.contentTypeDataStructure;\n        break;\n      }\n      case SET_STATUS: {\n        draftState.status = action.status;\n        break;\n      }\n      case SUBMIT_SUCCEEDED: {\n        draftState.data = action.data;\n        break;\n      }\n      default:\n        return draftState;\n    }\n  });\n\nexport default crudReducer;\nexport { crudInitialState };\n"]},"metadata":{},"sourceType":"script"}