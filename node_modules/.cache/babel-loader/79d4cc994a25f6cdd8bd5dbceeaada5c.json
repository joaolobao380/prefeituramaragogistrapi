{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _lodash = require(\"lodash\");\n\nvar _init = _interopRequireDefault(require(\"./init\"));\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar usePlugins = function usePlugins() {\n  var shouldFetchData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState, function () {\n    return (0, _init[\"default\"])(_reducer.initialState, shouldFetchData);\n  }),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      permissions = _useReducer2$.permissions,\n      routes = _useReducer2$.routes,\n      policies = _useReducer2$.policies,\n      isLoading = _useReducer2$.isLoading,\n      dispatch = _useReducer2[1];\n\n  var fetchPlugins = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n    var _yield$Promise$all, _yield$Promise$all2, _permissions, _routes, _policies, message;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch({\n              type: 'GET_DATA'\n            });\n            _context.next = 4;\n            return Promise.all([\"/\".concat(_pluginId[\"default\"], \"/permissions\"), \"/\".concat(_pluginId[\"default\"], \"/routes\"), \"/\".concat(_pluginId[\"default\"], \"/policies\")].map(function (endpoint) {\n              return (0, _strapiHelperPlugin.request)(endpoint, {\n                method: 'GET'\n              });\n            }));\n\n          case 4:\n            _yield$Promise$all = _context.sent;\n            _yield$Promise$all2 = (0, _slicedToArray2[\"default\"])(_yield$Promise$all, 3);\n            _permissions = _yield$Promise$all2[0].permissions;\n            _routes = _yield$Promise$all2[1].routes;\n            _policies = _yield$Promise$all2[2].policies;\n            dispatch({\n              type: 'GET_DATA_SUCCEEDED',\n              permissions: (0, _utils.cleanPermissions)(_permissions),\n              routes: _routes,\n              policies: [{\n                label: formatMessage({\n                  id: (0, _utils.getTrad)('Policies.InputSelect.empty')\n                }),\n                value: 'empty__string_value'\n              }].concat((0, _toConsumableArray2[\"default\"])((0, _utils.formatPolicies)(_policies)))\n            });\n            _context.next = 17;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            message = (0, _lodash.get)(_context.t0, ['response', 'payload', 'message'], 'An error occured');\n            dispatch({\n              type: 'GET_DATA_ERROR'\n            });\n\n            if (message !== 'Forbidden') {\n              strapi.notification.toggle({\n                type: 'warning',\n                message: message\n              });\n            }\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  })), [formatMessage]);\n  (0, _react.useEffect)(function () {\n    if (shouldFetchData) {\n      fetchPlugins();\n    }\n  }, [fetchPlugins, shouldFetchData]);\n  return {\n    permissions: permissions,\n    routes: routes,\n    policies: policies,\n    getData: fetchPlugins,\n    isLoading: isLoading\n  };\n};\n\nvar _default = usePlugins;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-users-permissions/admin/src/hooks/usePlugins/index.js"],"names":["usePlugins","shouldFetchData","formatMessage","reducer","initialState","permissions","routes","policies","isLoading","dispatch","fetchPlugins","type","Promise","all","pluginId","map","endpoint","method","label","id","value","message","strapi","notification","toggle","getData"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,GAA4B;AAAA,MAA3BC,eAA2B,uEAAT,IAAS;;AAC7C,iBAA0B,yBAA1B;AAAA,MAAQC,aAAR,YAAQA,aAAR;;AACA,oBAAiE,uBAC/DC,mBAD+D,EAE/DC,qBAF+D,EAG/D;AAAA,WAAM,sBAAKA,qBAAL,EAAmBH,eAAnB,CAAN;AAAA,GAH+D,CAAjE;AAAA;AAAA;AAAA,MAASI,WAAT,iBAASA,WAAT;AAAA,MAAsBC,MAAtB,iBAAsBA,MAAtB;AAAA,MAA8BC,QAA9B,iBAA8BA,QAA9B;AAAA,MAAwCC,SAAxC,iBAAwCA,SAAxC;AAAA,MAAqDC,QAArD;;AAMA,MAAMC,YAAY,GAAG,oHAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAE7BD,YAAAA,QAAQ,CAAC;AACPE,cAAAA,IAAI,EAAE;AADC,aAAD,CAAR;AAF6B;AAAA,mBAM6BC,OAAO,CAACC,GAAR,CACxD,YAAKC,oBAAL,8BAAiCA,oBAAjC,yBAAwDA,oBAAxD,gBAA6EC,GAA7E,CAAiF,UAAAC,QAAQ;AAAA,qBACvF,iCAAQA,QAAR,EAAkB;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAAlB,CADuF;AAAA,aAAzF,CADwD,CAN7B;;AAAA;AAAA;AAAA;AAMpBZ,YAAAA,YANoB,0BAMpBA,WANoB;AAMHC,YAAAA,OANG,0BAMHA,MANG;AAMSC,YAAAA,SANT,0BAMSA,QANT;AAY7BE,YAAAA,QAAQ,CAAC;AACPE,cAAAA,IAAI,EAAE,oBADC;AAEPN,cAAAA,WAAW,EAAE,6BAAiBA,YAAjB,CAFN;AAGPC,cAAAA,MAAM,EAANA,OAHO;AAIPC,cAAAA,QAAQ,GACN;AACEW,gBAAAA,KAAK,EAAEhB,aAAa,CAAC;AAAEiB,kBAAAA,EAAE,EAAE,oBAAQ,4BAAR;AAAN,iBAAD,CADtB;AAEEC,gBAAAA,KAAK,EAAE;AAFT,eADM,6CAKH,2BAAeb,SAAf,CALG;AAJD,aAAD,CAAR;AAZ6B;AAAA;;AAAA;AAAA;AAAA;AAyBvBc,YAAAA,OAzBuB,GAyBb,8BAAS,CAAC,UAAD,EAAa,SAAb,EAAwB,SAAxB,CAAT,EAA6C,kBAA7C,CAzBa;AA2B7BZ,YAAAA,QAAQ,CAAC;AACPE,cAAAA,IAAI,EAAE;AADC,aAAD,CAAR;;AAIA,gBAAIU,OAAO,KAAK,WAAhB,EAA6B;AAC3BC,cAAAA,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2B;AACzBb,gBAAAA,IAAI,EAAE,SADmB;AAEzBU,gBAAAA,OAAO,EAAPA;AAFyB,eAA3B;AAID;;AApC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ,IAsClB,CAACnB,aAAD,CAtCkB,CAArB;AAwCA,wBAAU,YAAM;AACd,QAAID,eAAJ,EAAqB;AACnBS,MAAAA,YAAY;AACb;AACF,GAJD,EAIG,CAACA,YAAD,EAAeT,eAAf,CAJH;AAMA,SAAO;AACLI,IAAAA,WAAW,EAAXA,WADK;AAELC,IAAAA,MAAM,EAANA,MAFK;AAGLC,IAAAA,QAAQ,EAARA,QAHK;AAILkB,IAAAA,OAAO,EAAEf,YAJJ;AAKLF,IAAAA,SAAS,EAATA;AALK,GAAP;AAOD,CA7DD;;eA+DeR,U","sourcesContent":["import { useCallback, useEffect, useReducer } from 'react';\nimport { request } from 'strapi-helper-plugin';\nimport { useIntl } from 'react-intl';\nimport { get } from 'lodash';\nimport init from './init';\nimport pluginId from '../../pluginId';\nimport { cleanPermissions, formatPolicies, getTrad } from '../../utils';\nimport reducer, { initialState } from './reducer';\n\nconst usePlugins = (shouldFetchData = true) => {\n  const { formatMessage } = useIntl();\n  const [{ permissions, routes, policies, isLoading }, dispatch] = useReducer(\n    reducer,\n    initialState,\n    () => init(initialState, shouldFetchData)\n  );\n\n  const fetchPlugins = useCallback(async () => {\n    try {\n      dispatch({\n        type: 'GET_DATA',\n      });\n\n      const [{ permissions }, { routes }, { policies }] = await Promise.all(\n        [`/${pluginId}/permissions`, `/${pluginId}/routes`, `/${pluginId}/policies`].map(endpoint =>\n          request(endpoint, { method: 'GET' })\n        )\n      );\n\n      dispatch({\n        type: 'GET_DATA_SUCCEEDED',\n        permissions: cleanPermissions(permissions),\n        routes,\n        policies: [\n          {\n            label: formatMessage({ id: getTrad('Policies.InputSelect.empty') }),\n            value: 'empty__string_value',\n          },\n          ...formatPolicies(policies),\n        ],\n      });\n    } catch (err) {\n      const message = get(err, ['response', 'payload', 'message'], 'An error occured');\n\n      dispatch({\n        type: 'GET_DATA_ERROR',\n      });\n\n      if (message !== 'Forbidden') {\n        strapi.notification.toggle({\n          type: 'warning',\n          message,\n        });\n      }\n    }\n  }, [formatMessage]);\n\n  useEffect(() => {\n    if (shouldFetchData) {\n      fetchPlugins();\n    }\n  }, [fetchPlugins, shouldFetchData]);\n\n  return {\n    permissions,\n    routes,\n    policies,\n    getData: fetchPlugins,\n    isLoading,\n  };\n};\n\nexport default usePlugins;\n"]},"metadata":{},"sourceType":"script"}