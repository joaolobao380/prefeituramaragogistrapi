{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar Filter = function Filter(_ref) {\n  var displayName = _ref.displayName,\n      filter = _ref.filter,\n      name = _ref.name,\n      onClick = _ref.onClick,\n      value = _ref.value;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var label = /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    color: \"mediumBlue\",\n    as: \"span\"\n  }, displayName), /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    as: \"span\",\n    color: \"mediumBlue\",\n    fontWeight: \"bold\"\n  }, \"\\xA0\", formatMessage({\n    id: \"components.FilterOptions.FILTER_TYPES.\".concat(filter)\n  }), \"\\xA0\"), /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    as: \"span\",\n    color: \"mediumBlue\"\n  }, value));\n\n  var handleClick = function handleClick() {\n    onClick({\n      target: {\n        name: name,\n        value: value\n      }\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_core.Option, {\n    label: label,\n    margin: \"0 10px 6px 0\",\n    onClick: handleClick\n  });\n};\n\nFilter.defaultProps = {\n  onClick: function onClick() {}\n};\nFilter.propTypes = {\n  filter: _propTypes[\"default\"].string.isRequired,\n  displayName: _propTypes[\"default\"].string.isRequired,\n  name: _propTypes[\"default\"].string.isRequired,\n  onClick: _propTypes[\"default\"].func,\n  value: _propTypes[\"default\"].string.isRequired\n};\nvar _default = Filter;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/components/Users/Filter/index.js"],"names":["Filter","displayName","filter","name","onClick","value","formatMessage","label","id","handleClick","target","defaultProps","propTypes","PropTypes","string","isRequired","func"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS,OAAmD;AAAA,MAAhDC,WAAgD,QAAhDA,WAAgD;AAAA,MAAnCC,MAAmC,QAAnCA,MAAmC;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAChE,iBAA0B,yBAA1B;AAAA,MAAQC,aAAR,YAAQA,aAAR;;AACA,MAAMC,KAAK,gBACT,+EACE,gCAAC,UAAD;AAAM,IAAA,KAAK,EAAC,YAAZ;AAAyB,IAAA,EAAE,EAAC;AAA5B,KACGN,WADH,CADF,eAIE,gCAAC,UAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAgB,IAAA,KAAK,EAAC,YAAtB;AAAmC,IAAA,UAAU,EAAC;AAA9C,aACSK,aAAa,CAAC;AAAEE,IAAAA,EAAE,kDAA2CN,MAA3C;AAAJ,GAAD,CADtB,SAJF,eAOE,gCAAC,UAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAgB,IAAA,KAAK,EAAC;AAAtB,KACGG,KADH,CAPF,CADF;;AAcA,MAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBL,IAAAA,OAAO,CAAC;AAAEM,MAAAA,MAAM,EAAE;AAAEP,QAAAA,IAAI,EAAJA,IAAF;AAAQE,QAAAA,KAAK,EAALA;AAAR;AAAV,KAAD,CAAP;AACD,GAFD;;AAIA,sBAAO,gCAAC,YAAD;AAAQ,IAAA,KAAK,EAAEE,KAAf;AAAsB,IAAA,MAAM,EAAC,cAA7B;AAA4C,IAAA,OAAO,EAAEE;AAArD,IAAP;AACD,CArBD;;AAuBAT,MAAM,CAACW,YAAP,GAAsB;AACpBP,EAAAA,OAAO,EAAE,mBAAM,CAAE;AADG,CAAtB;AAIAJ,MAAM,CAACY,SAAP,GAAmB;AACjBV,EAAAA,MAAM,EAAEW,sBAAUC,MAAV,CAAiBC,UADR;AAEjBd,EAAAA,WAAW,EAAEY,sBAAUC,MAAV,CAAiBC,UAFb;AAGjBZ,EAAAA,IAAI,EAAEU,sBAAUC,MAAV,CAAiBC,UAHN;AAIjBX,EAAAA,OAAO,EAAES,sBAAUG,IAJF;AAKjBX,EAAAA,KAAK,EAAEQ,sBAAUC,MAAV,CAAiBC;AALP,CAAnB;eAQef,M","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Option, Text } from '@buffetjs/core';\n\nconst Filter = ({ displayName, filter, name, onClick, value }) => {\n  const { formatMessage } = useIntl();\n  const label = (\n    <>\n      <Text color=\"mediumBlue\" as=\"span\">\n        {displayName}\n      </Text>\n      <Text as=\"span\" color=\"mediumBlue\" fontWeight=\"bold\">\n        &nbsp;{formatMessage({ id: `components.FilterOptions.FILTER_TYPES.${filter}` })}&nbsp;\n      </Text>\n      <Text as=\"span\" color=\"mediumBlue\">\n        {value}\n      </Text>\n    </>\n  );\n\n  const handleClick = () => {\n    onClick({ target: { name, value } });\n  };\n\n  return <Option label={label} margin=\"0 10px 6px 0\" onClick={handleClick} />;\n};\n\nFilter.defaultProps = {\n  onClick: () => {},\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  displayName: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"script"}