{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _cloneDeep = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\nvar _checkPermissions = _interopRequireDefault(require(\"./checkPermissions\"));\n\nvar _config = require(\"../../../config\");\n\nvar _getSettingsMenuLinksPermissions = _interopRequireDefault(require(\"./getSettingsMenuLinksPermissions\"));\n\nvar getGeneralLinks = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(permissions, generalSectionRawLinks, settingsMenu, shouldUpdateStrapi) {\n    var generalSectionPermissionsPromises, generalSectionLinksPermissions, authorizedGeneralSectionLinks, settingsLinkPermissions, settingsLinkIndex, hasPermission, authorizedGeneralLinksClone;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            generalSectionPermissionsPromises = (0, _checkPermissions[\"default\"])(permissions, generalSectionRawLinks);\n            _context.next = 3;\n            return Promise.all(generalSectionPermissionsPromises);\n\n          case 3:\n            generalSectionLinksPermissions = _context.sent;\n            authorizedGeneralSectionLinks = generalSectionRawLinks.filter(function (_, index) {\n              return generalSectionLinksPermissions[index];\n            });\n            settingsLinkPermissions = (0, _getSettingsMenuLinksPermissions[\"default\"])(settingsMenu);\n            settingsLinkIndex = authorizedGeneralSectionLinks.findIndex(function (obj) {\n              return obj.destination === _config.SETTINGS_BASE_URL;\n            });\n\n            if (!(settingsLinkIndex === -1)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", []);\n\n          case 9:\n            hasPermission = settingsLinkPermissions.every(Boolean);\n\n            if (hasPermission) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", []);\n\n          case 12:\n            authorizedGeneralLinksClone = (0, _cloneDeep[\"default\"])(authorizedGeneralSectionLinks);\n            authorizedGeneralLinksClone[settingsLinkIndex].permissions = settingsLinkPermissions;\n            authorizedGeneralLinksClone[settingsLinkIndex].notificationCount = shouldUpdateStrapi ? 1 : 0;\n            return _context.abrupt(\"return\", authorizedGeneralLinksClone);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getGeneralLinks(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = getGeneralLinks;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/containers/LeftMenu/utils/getGeneralLinks.js"],"names":["getGeneralLinks","permissions","generalSectionRawLinks","settingsMenu","shouldUpdateStrapi","generalSectionPermissionsPromises","Promise","all","generalSectionLinksPermissions","authorizedGeneralSectionLinks","filter","_","index","settingsLinkPermissions","settingsLinkIndex","findIndex","obj","destination","SETTINGS_BASE_URL","hasPermission","every","Boolean","authorizedGeneralLinksClone","notificationCount"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,eAAe;AAAA,2FAAG,iBACtBC,WADsB,EAEtBC,sBAFsB,EAGtBC,YAHsB,EAItBC,kBAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAMhBC,YAAAA,iCANgB,GAMoB,kCAAiBJ,WAAjB,EAA8BC,sBAA9B,CANpB;AAAA;AAAA,mBAOuBI,OAAO,CAACC,GAAR,CAAYF,iCAAZ,CAPvB;;AAAA;AAOhBG,YAAAA,8BAPgB;AAShBC,YAAAA,6BATgB,GASgBP,sBAAsB,CAACQ,MAAvB,CACpC,UAACC,CAAD,EAAIC,KAAJ;AAAA,qBAAcJ,8BAA8B,CAACI,KAAD,CAA5C;AAAA,aADoC,CAThB;AAahBC,YAAAA,uBAbgB,GAaU,iDAAgCV,YAAhC,CAbV;AAchBW,YAAAA,iBAdgB,GAcIL,6BAA6B,CAACM,SAA9B,CACxB,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,WAAJ,KAAoBC,yBAAxB;AAAA,aADqB,CAdJ;;AAAA,kBAkBlBJ,iBAAiB,KAAK,CAAC,CAlBL;AAAA;AAAA;AAAA;;AAAA,6CAmBb,EAnBa;;AAAA;AAsBhBK,YAAAA,aAtBgB,GAsBAN,uBAAuB,CAACO,KAAxB,CAA8BC,OAA9B,CAtBA;;AAAA,gBAwBjBF,aAxBiB;AAAA;AAAA;AAAA;;AAAA,6CAyBb,EAzBa;;AAAA;AA4BhBG,YAAAA,2BA5BgB,GA4Bc,2BAAUb,6BAAV,CA5Bd;AA8BtBa,YAAAA,2BAA2B,CAACR,iBAAD,CAA3B,CAA+Cb,WAA/C,GAA6DY,uBAA7D;AACAS,YAAAA,2BAA2B,CAACR,iBAAD,CAA3B,CAA+CS,iBAA/C,GAAmEnB,kBAAkB,GAAG,CAAH,GAAO,CAA5F;AA/BsB,6CAiCfkB,2BAjCe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAftB,eAAe;AAAA;AAAA;AAAA,GAArB;;eAoCeA,e","sourcesContent":["import cloneDeep from 'lodash/cloneDeep';\nimport checkPermissions from './checkPermissions';\nimport { SETTINGS_BASE_URL } from '../../../config';\nimport getSettingsMenuLinksPermissions from './getSettingsMenuLinksPermissions';\n\nconst getGeneralLinks = async (\n  permissions,\n  generalSectionRawLinks,\n  settingsMenu,\n  shouldUpdateStrapi\n) => {\n  const generalSectionPermissionsPromises = checkPermissions(permissions, generalSectionRawLinks);\n  const generalSectionLinksPermissions = await Promise.all(generalSectionPermissionsPromises);\n\n  const authorizedGeneralSectionLinks = generalSectionRawLinks.filter(\n    (_, index) => generalSectionLinksPermissions[index]\n  );\n\n  const settingsLinkPermissions = getSettingsMenuLinksPermissions(settingsMenu);\n  const settingsLinkIndex = authorizedGeneralSectionLinks.findIndex(\n    obj => obj.destination === SETTINGS_BASE_URL\n  );\n\n  if (settingsLinkIndex === -1) {\n    return [];\n  }\n\n  const hasPermission = settingsLinkPermissions.every(Boolean);\n\n  if (!hasPermission) {\n    return [];\n  }\n\n  const authorizedGeneralLinksClone = cloneDeep(authorizedGeneralSectionLinks);\n\n  authorizedGeneralLinksClone[settingsLinkIndex].permissions = settingsLinkPermissions;\n  authorizedGeneralLinksClone[settingsLinkIndex].notificationCount = shouldUpdateStrapi ? 1 : 0;\n\n  return authorizedGeneralLinksClone;\n};\n\nexport default getGeneralLinks;\n"]},"metadata":{},"sourceType":"script"}