{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _icons = require(\"@buffetjs/icons\");\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactstrap = require(\"reactstrap\");\n\nvar _permissions = _interopRequireDefault(require(\"../../permissions\"));\n\nvar _hooks = require(\"../../hooks\");\n\nvar _ListBaselineAlignment = _interopRequireDefault(require(\"../../components/ListBaselineAlignment\"));\n\nvar _ListRow = _interopRequireDefault(require(\"../../components/ListRow\"));\n\nvar _ModalForm = _interopRequireDefault(require(\"../../components/ModalForm\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _forms = _interopRequireDefault(require(\"./utils/forms\"));\n\nvar _schema = _interopRequireDefault(require(\"./utils/schema\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar EmailTemplatesPage = function EmailTemplatesPage() {\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      emitEvent = _useGlobalContext.emitEvent;\n\n  var emitEventRef = (0, _react.useRef)(emitEvent);\n  var buttonSubmitRef = (0, _react.useRef)(null);\n  var pageTitle = formatMessage({\n    id: (0, _utils.getTrad)('HeaderNav.link.emailTemplates')\n  });\n  var updatePermissions = (0, _react.useMemo)(function () {\n    return {\n      update: _permissions[\"default\"].updateEmailTemplates\n    };\n  }, []);\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      isSubmiting = _useState4[0],\n      setIsSubmiting = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      showForm = _useState6[0],\n      setShowForm = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(null),\n      _useState8 = (0, _slicedToArray2[\"default\"])(_useState7, 2),\n      templateToEdit = _useState8[0],\n      setTemplateToEdit = _useState8[1];\n\n  var _useForm = (0, _hooks.useForm)('email-templates', updatePermissions),\n      canUpdate = _useForm.allowedActions.canUpdate,\n      dispatchResetForm = _useForm.dispatchResetForm,\n      dispatchSetFormErrors = _useForm.dispatchSetFormErrors,\n      dispatchSubmitSucceeded = _useForm.dispatchSubmitSucceeded,\n      formErrors = _useForm.formErrors,\n      handleChange = _useForm.handleChange,\n      isLoading = _useForm.isLoading,\n      isLoadingForPermissions = _useForm.isLoadingForPermissions,\n      modifiedData = _useForm.modifiedData;\n\n  var emailTemplates = (0, _react.useMemo)(function () {\n    return Object.keys(modifiedData).reduce(function (acc, current) {\n      var _modifiedData$current = modifiedData[current],\n          display = _modifiedData$current.display,\n          icon = _modifiedData$current.icon;\n      acc.push({\n        id: current,\n        name: formatMessage({\n          id: (0, _utils.getTrad)(display)\n        }),\n        icon: ['fas', icon]\n      });\n      return acc;\n    }, []);\n  }, [modifiedData, formatMessage]);\n  var listTitle = (0, _react.useMemo)(function () {\n    var count = emailTemplates.length;\n    return formatMessage({\n      id: (0, _utils.getTrad)(\"List.title.emailTemplates.\".concat(count > 1 ? 'plural' : 'singular'))\n    }, {\n      number: count\n    });\n  }, [emailTemplates.length, formatMessage]);\n  var handleClosed = (0, _react.useCallback)(function () {\n    setTemplateToEdit(null);\n    setShowForm(false);\n    dispatchResetForm();\n  }, [dispatchResetForm]);\n  var handleToggle = (0, _react.useCallback)(function () {\n    setIsOpen(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var handleClickEdit = (0, _react.useCallback)(function (template) {\n    setTemplateToEdit(template);\n    handleToggle();\n  }, [handleToggle]);\n  var handleSubmit = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(e) {\n      var errors;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              errors = {};\n              _context.prev = 2;\n              setIsSubmiting(true);\n              _context.next = 6;\n              return _schema[\"default\"].validate(modifiedData[templateToEdit.id], {\n                abortEarly: false\n              });\n\n            case 6:\n              strapi.lockAppWithOverlay();\n              _context.prev = 7;\n              emitEventRef.current('willEditEmailTemplates');\n              _context.next = 11;\n              return (0, _strapiHelperPlugin.request)((0, _utils.getRequestURL)('email-templates'), {\n                method: 'PUT',\n                body: {\n                  'email-templates': modifiedData\n                }\n              });\n\n            case 11:\n              emitEventRef.current('didEditEmailTemplates');\n              strapi.notification.toggle({\n                type: 'success',\n                message: {\n                  id: (0, _utils.getTrad)('notification.success.submit')\n                }\n              });\n              dispatchSubmitSucceeded();\n              handleToggle();\n              _context.next = 21;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](7);\n              console.error(_context.t0);\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n\n            case 21:\n              _context.next = 26;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t1 = _context[\"catch\"](2);\n              errors = (0, _strapiHelperPlugin.getYupInnerErrors)(_context.t1);\n\n            case 26:\n              _context.prev = 26;\n              setIsSubmiting(false);\n              strapi.unlockApp();\n              return _context.finish(26);\n\n            case 30:\n              dispatchSetFormErrors(errors);\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 23, 26, 30], [7, 17]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [dispatchSetFormErrors, dispatchSubmitSucceeded, modifiedData, templateToEdit, handleToggle]);\n  var handleClick = (0, _react.useCallback)(function () {\n    buttonSubmitRef.current.click();\n  }, []);\n  var handleOpened = (0, _react.useCallback)(function () {\n    setShowForm(true);\n  }, []);\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.SettingsPageTitle, {\n    name: pageTitle\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_custom.Header, {\n    title: {\n      label: pageTitle\n    },\n    isLoading: isLoadingForPermissions || isLoading\n  }), /*#__PURE__*/_react[\"default\"].createElement(_ListBaselineAlignment[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_custom.List, {\n    title: listTitle,\n    items: emailTemplates,\n    isLoading: isLoadingForPermissions || isLoading,\n    customRowComponent: function customRowComponent(template) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_ListRow[\"default\"], (0, _extends2[\"default\"])({}, template, {\n        onClick: function onClick() {\n          if (canUpdate) {\n            handleClickEdit(template);\n          }\n        },\n        links: [{\n          icon: canUpdate ? /*#__PURE__*/_react[\"default\"].createElement(_icons.Pencil, {\n            fill: \"#0e1622\"\n          }) : null,\n          onClick: function onClick(e) {\n            e.stopPropagation();\n            handleClickEdit(template);\n          }\n        }]\n      }));\n    }\n  })), /*#__PURE__*/_react[\"default\"].createElement(_ModalForm[\"default\"], {\n    isOpen: isOpen,\n    onOpened: handleOpened,\n    onToggle: handleToggle,\n    onClosed: handleClosed,\n    headerBreadcrumbs: [(0, _utils.getTrad)('PopUpForm.header.edit.email-templates'), (0, _lodash.get)(templateToEdit, 'name', '')],\n    onClick: handleClick,\n    onCancel: handleToggle,\n    isLoading: isSubmiting\n  }, showForm && /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactstrap.Row, null, _forms[\"default\"].map(function (input) {\n    var id = (0, _lodash.get)(templateToEdit, 'id');\n    return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.SizedInput, (0, _extends2[\"default\"])({\n      key: input.name\n    }, input, {\n      error: formErrors[input.name],\n      name: \"\".concat(id, \".\").concat(input.name),\n      onChange: handleChange,\n      value: (0, _lodash.get)(modifiedData, [id].concat((0, _toConsumableArray2[\"default\"])(input.name.split('.'))), '')\n    }));\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      display: 'none'\n    },\n    ref: buttonSubmitRef\n  }, \"hidden button to use the native form event\"))));\n};\n\nvar _default = EmailTemplatesPage;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-users-permissions/admin/src/containers/EmailTemplates/index.js"],"names":["EmailTemplatesPage","formatMessage","emitEvent","emitEventRef","buttonSubmitRef","pageTitle","id","updatePermissions","update","pluginPermissions","updateEmailTemplates","isOpen","setIsOpen","isSubmiting","setIsSubmiting","showForm","setShowForm","templateToEdit","setTemplateToEdit","canUpdate","allowedActions","dispatchResetForm","dispatchSetFormErrors","dispatchSubmitSucceeded","formErrors","handleChange","isLoading","isLoadingForPermissions","modifiedData","emailTemplates","Object","keys","reduce","acc","current","display","icon","push","name","listTitle","count","length","number","handleClosed","handleToggle","prev","handleClickEdit","template","handleSubmit","e","preventDefault","errors","schema","validate","abortEarly","strapi","lockAppWithOverlay","method","body","notification","toggle","type","message","console","error","unlockApp","handleClick","click","handleOpened","label","onClick","stopPropagation","forms","map","input","split"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,iBAA0B,yBAA1B;AAAA,MAAQC,aAAR,YAAQA,aAAR;;AACA,0BAAsB,2CAAtB;AAAA,MAAQC,SAAR,qBAAQA,SAAR;;AACA,MAAMC,YAAY,GAAG,mBAAOD,SAAP,CAArB;AACA,MAAME,eAAe,GAAG,mBAAO,IAAP,CAAxB;AACA,MAAMC,SAAS,GAAGJ,aAAa,CAAC;AAAEK,IAAAA,EAAE,EAAE,oBAAQ,+BAAR;AAAN,GAAD,CAA/B;AACA,MAAMC,iBAAiB,GAAG,oBAAQ,YAAM;AACtC,WAAO;AAAEC,MAAAA,MAAM,EAAEC,wBAAkBC;AAA5B,KAAP;AACD,GAFyB,EAEvB,EAFuB,CAA1B;;AAGA,kBAA4B,qBAAS,KAAT,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAsC,qBAAS,KAAT,CAAtC;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAgC,qBAAS,KAAT,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA4C,qBAAS,IAAT,CAA5C;AAAA;AAAA,MAAOC,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,iBAUI,oBAAQ,iBAAR,EAA2BX,iBAA3B,CAVJ;AAAA,MACoBY,SADpB,YACEC,cADF,CACoBD,SADpB;AAAA,MAEEE,iBAFF,YAEEA,iBAFF;AAAA,MAGEC,qBAHF,YAGEA,qBAHF;AAAA,MAIEC,uBAJF,YAIEA,uBAJF;AAAA,MAKEC,UALF,YAKEA,UALF;AAAA,MAMEC,YANF,YAMEA,YANF;AAAA,MAOEC,SAPF,YAOEA,SAPF;AAAA,MAQEC,uBARF,YAQEA,uBARF;AAAA,MASEC,YATF,YASEA,YATF;;AAYA,MAAMC,cAAc,GAAG,oBAAQ,YAAM;AACnC,WAAOC,MAAM,CAACC,IAAP,CAAYH,YAAZ,EAA0BI,MAA1B,CAAiC,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACxD,kCAA0BN,YAAY,CAACM,OAAD,CAAtC;AAAA,UAAQC,OAAR,yBAAQA,OAAR;AAAA,UAAiBC,IAAjB,yBAAiBA,IAAjB;AAEAH,MAAAA,GAAG,CAACI,IAAJ,CAAS;AACP/B,QAAAA,EAAE,EAAE4B,OADG;AAEPI,QAAAA,IAAI,EAAErC,aAAa,CAAC;AAAEK,UAAAA,EAAE,EAAE,oBAAQ6B,OAAR;AAAN,SAAD,CAFZ;AAGPC,QAAAA,IAAI,EAAE,CAAC,KAAD,EAAQA,IAAR;AAHC,OAAT;AAMA,aAAOH,GAAP;AACD,KAVM,EAUJ,EAVI,CAAP;AAWD,GAZsB,EAYpB,CAACL,YAAD,EAAe3B,aAAf,CAZoB,CAAvB;AAcA,MAAMsC,SAAS,GAAG,oBAAQ,YAAM;AAC9B,QAAMC,KAAK,GAAGX,cAAc,CAACY,MAA7B;AAEA,WAAOxC,aAAa,CAClB;AACEK,MAAAA,EAAE,EAAE,wDAAqCkC,KAAK,GAAG,CAAR,GAAY,QAAZ,GAAuB,UAA5D;AADN,KADkB,EAIlB;AAAEE,MAAAA,MAAM,EAAEF;AAAV,KAJkB,CAApB;AAMD,GATiB,EASf,CAACX,cAAc,CAACY,MAAhB,EAAwBxC,aAAxB,CATe,CAAlB;AAWA,MAAM0C,YAAY,GAAG,wBAAY,YAAM;AACrCzB,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAK,IAAAA,iBAAiB;AAClB,GAJoB,EAIlB,CAACA,iBAAD,CAJkB,CAArB;AAMA,MAAMuB,YAAY,GAAG,wBAAY,YAAM;AACrChC,IAAAA,SAAS,CAAC,UAAAiC,IAAI;AAAA,aAAI,CAACA,IAAL;AAAA,KAAL,CAAT;AACD,GAFoB,EAElB,EAFkB,CAArB;AAIA,MAAMC,eAAe,GAAG,wBACtB,UAAAC,QAAQ,EAAI;AACV7B,IAAAA,iBAAiB,CAAC6B,QAAD,CAAjB;AACAH,IAAAA,YAAY;AACb,GAJqB,EAKtB,CAACA,YAAD,CALsB,CAAxB;AAQA,MAAMI,YAAY,GAAG;AAAA,6FACnB,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,CAAC,CAACC,cAAF;AAEIC,cAAAA,MAHN,GAGe,EAHf;AAAA;AAMIrC,cAAAA,cAAc,CAAC,IAAD,CAAd;AANJ;AAAA,qBAOUsC,mBAAOC,QAAP,CAAgBzB,YAAY,CAACX,cAAc,CAACX,EAAhB,CAA5B,EAAiD;AAAEgD,gBAAAA,UAAU,EAAE;AAAd,eAAjD,CAPV;;AAAA;AASIC,cAAAA,MAAM,CAACC,kBAAP;AATJ;AAYMrD,cAAAA,YAAY,CAAC+B,OAAb,CAAqB,wBAArB;AAZN;AAAA,qBAcY,iCAAQ,0BAAc,iBAAd,CAAR,EAA0C;AAC9CuB,gBAAAA,MAAM,EAAE,KADsC;AAE9CC,gBAAAA,IAAI,EAAE;AAAE,qCAAmB9B;AAArB;AAFwC,eAA1C,CAdZ;;AAAA;AAmBMzB,cAAAA,YAAY,CAAC+B,OAAb,CAAqB,uBAArB;AAEAqB,cAAAA,MAAM,CAACI,YAAP,CAAoBC,MAApB,CAA2B;AACzBC,gBAAAA,IAAI,EAAE,SADmB;AAEzBC,gBAAAA,OAAO,EAAE;AAAExD,kBAAAA,EAAE,EAAE,oBAAQ,6BAAR;AAAN;AAFgB,eAA3B;AAKAiB,cAAAA,uBAAuB;AAEvBqB,cAAAA,YAAY;AA5BlB;AAAA;;AAAA;AAAA;AAAA;AA8BMmB,cAAAA,OAAO,CAACC,KAAR;AAEAT,cAAAA,MAAM,CAACI,YAAP,CAAoBC,MAApB,CAA2B;AACzBC,gBAAAA,IAAI,EAAE,SADmB;AAEzBC,gBAAAA,OAAO,EAAE;AAAExD,kBAAAA,EAAE,EAAE;AAAN;AAFgB,eAA3B;;AAhCN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsCI6C,cAAAA,MAAM,GAAG,uDAAT;;AAtCJ;AAAA;AAwCIrC,cAAAA,cAAc,CAAC,KAAD,CAAd;AACAyC,cAAAA,MAAM,CAACU,SAAP;AAzCJ;;AAAA;AA4CE3C,cAAAA,qBAAqB,CAAC6B,MAAD,CAArB;;AA5CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADmB;;AAAA;AAAA;AAAA;AAAA,OA+CnB,CAAC7B,qBAAD,EAAwBC,uBAAxB,EAAiDK,YAAjD,EAA+DX,cAA/D,EAA+E2B,YAA/E,CA/CmB,CAArB;AAkDA,MAAMsB,WAAW,GAAG,wBAAY,YAAM;AACpC9D,IAAAA,eAAe,CAAC8B,OAAhB,CAAwBiC,KAAxB;AACD,GAFmB,EAEjB,EAFiB,CAApB;AAIA,MAAMC,YAAY,GAAG,wBAAY,YAAM;AACrCpD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFoB,EAElB,EAFkB,CAArB;AAIA,sBACE,+EACE,gCAAC,qCAAD;AAAmB,IAAA,IAAI,EAAEX;AAAzB,IADF,eAEE,0DACE,gCAAC,cAAD;AAAQ,IAAA,KAAK,EAAE;AAAEgE,MAAAA,KAAK,EAAEhE;AAAT,KAAf;AAAqC,IAAA,SAAS,EAAEsB,uBAAuB,IAAID;AAA3E,IADF,eAEE,gCAAC,iCAAD,OAFF,eAGE,gCAAC,YAAD;AACE,IAAA,KAAK,EAAEa,SADT;AAEE,IAAA,KAAK,EAAEV,cAFT;AAGE,IAAA,SAAS,EAAEF,uBAAuB,IAAID,SAHxC;AAIE,IAAA,kBAAkB,EAAE,4BAAAqB,QAAQ;AAAA,0BAC1B,gCAAC,mBAAD,gCACMA,QADN;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI5B,SAAJ,EAAe;AACb2B,YAAAA,eAAe,CAACC,QAAD,CAAf;AACD;AACF,SANH;AAOE,QAAA,KAAK,EAAE,CACL;AACEX,UAAAA,IAAI,EAAEjB,SAAS,gBAAG,gCAAC,aAAD;AAAQ,YAAA,IAAI,EAAC;AAAb,YAAH,GAA+B,IADhD;AAEEmD,UAAAA,OAAO,EAAE,iBAAArB,CAAC,EAAI;AACZA,YAAAA,CAAC,CAACsB,eAAF;AACAzB,YAAAA,eAAe,CAACC,QAAD,CAAf;AACD;AALH,SADK;AAPT,SAD0B;AAAA;AAJ9B,IAHF,CAFF,eA8BE,gCAAC,qBAAD;AACE,IAAA,MAAM,EAAEpC,MADV;AAEE,IAAA,QAAQ,EAAEyD,YAFZ;AAGE,IAAA,QAAQ,EAAExB,YAHZ;AAIE,IAAA,QAAQ,EAAED,YAJZ;AAKE,IAAA,iBAAiB,EAAE,CACjB,oBAAQ,uCAAR,CADiB,EAEjB,iBAAI1B,cAAJ,EAAoB,MAApB,EAA4B,EAA5B,CAFiB,CALrB;AASE,IAAA,OAAO,EAAEiD,WATX;AAUE,IAAA,QAAQ,EAAEtB,YAVZ;AAWE,IAAA,SAAS,EAAE/B;AAXb,KAaGE,QAAQ,iBACP;AAAM,IAAA,QAAQ,EAAEiC;AAAhB,kBACE,gCAAC,eAAD,QACGwB,kBAAMC,GAAN,CAAU,UAAAC,KAAK,EAAI;AAClB,QAAMpE,EAAE,GAAG,iBAAIW,cAAJ,EAAoB,IAApB,CAAX;AAEA,wBACE,gCAAC,8BAAD;AACE,MAAA,GAAG,EAAEyD,KAAK,CAACpC;AADb,OAEMoC,KAFN;AAGE,MAAA,KAAK,EAAElD,UAAU,CAACkD,KAAK,CAACpC,IAAP,CAHnB;AAIE,MAAA,IAAI,YAAKhC,EAAL,cAAWoE,KAAK,CAACpC,IAAjB,CAJN;AAKE,MAAA,QAAQ,EAAEb,YALZ;AAME,MAAA,KAAK,EAAE,iBAAIG,YAAJ,GAAmBtB,EAAnB,6CAA0BoE,KAAK,CAACpC,IAAN,CAAWqC,KAAX,CAAiB,GAAjB,CAA1B,IAAkD,EAAlD;AANT,OADF;AAUD,GAbA,CADH,CADF,eAiBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAExC,MAAAA,OAAO,EAAE;AAAX,KAA7B;AAAkD,IAAA,GAAG,EAAE/B;AAAvD,kDAjBF,CAdJ,CA9BF,CADF;AAsED,CArMD;;eAuMeJ,kB","sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Header, List } from '@buffetjs/custom';\nimport { Pencil } from '@buffetjs/icons';\nimport { get } from 'lodash';\nimport {\n  SettingsPageTitle,\n  SizedInput,\n  useGlobalContext,\n  request,\n  getYupInnerErrors,\n} from 'strapi-helper-plugin';\nimport { Row } from 'reactstrap';\nimport pluginPermissions from '../../permissions';\nimport { useForm } from '../../hooks';\nimport ListBaselineAlignment from '../../components/ListBaselineAlignment';\nimport ListRow from '../../components/ListRow';\nimport ModalForm from '../../components/ModalForm';\nimport { getRequestURL, getTrad } from '../../utils';\nimport forms from './utils/forms';\nimport schema from './utils/schema';\n\nconst EmailTemplatesPage = () => {\n  const { formatMessage } = useIntl();\n  const { emitEvent } = useGlobalContext();\n  const emitEventRef = useRef(emitEvent);\n  const buttonSubmitRef = useRef(null);\n  const pageTitle = formatMessage({ id: getTrad('HeaderNav.link.emailTemplates') });\n  const updatePermissions = useMemo(() => {\n    return { update: pluginPermissions.updateEmailTemplates };\n  }, []);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSubmiting, setIsSubmiting] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [templateToEdit, setTemplateToEdit] = useState(null);\n\n  const {\n    allowedActions: { canUpdate },\n    dispatchResetForm,\n    dispatchSetFormErrors,\n    dispatchSubmitSucceeded,\n    formErrors,\n    handleChange,\n    isLoading,\n    isLoadingForPermissions,\n    modifiedData,\n  } = useForm('email-templates', updatePermissions);\n\n  const emailTemplates = useMemo(() => {\n    return Object.keys(modifiedData).reduce((acc, current) => {\n      const { display, icon } = modifiedData[current];\n\n      acc.push({\n        id: current,\n        name: formatMessage({ id: getTrad(display) }),\n        icon: ['fas', icon],\n      });\n\n      return acc;\n    }, []);\n  }, [modifiedData, formatMessage]);\n\n  const listTitle = useMemo(() => {\n    const count = emailTemplates.length;\n\n    return formatMessage(\n      {\n        id: getTrad(`List.title.emailTemplates.${count > 1 ? 'plural' : 'singular'}`),\n      },\n      { number: count }\n    );\n  }, [emailTemplates.length, formatMessage]);\n\n  const handleClosed = useCallback(() => {\n    setTemplateToEdit(null);\n    setShowForm(false);\n    dispatchResetForm();\n  }, [dispatchResetForm]);\n\n  const handleToggle = useCallback(() => {\n    setIsOpen(prev => !prev);\n  }, []);\n\n  const handleClickEdit = useCallback(\n    template => {\n      setTemplateToEdit(template);\n      handleToggle();\n    },\n    [handleToggle]\n  );\n\n  const handleSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n\n      let errors = {};\n\n      try {\n        setIsSubmiting(true);\n        await schema.validate(modifiedData[templateToEdit.id], { abortEarly: false });\n\n        strapi.lockAppWithOverlay();\n\n        try {\n          emitEventRef.current('willEditEmailTemplates');\n\n          await request(getRequestURL('email-templates'), {\n            method: 'PUT',\n            body: { 'email-templates': modifiedData },\n          });\n\n          emitEventRef.current('didEditEmailTemplates');\n\n          strapi.notification.toggle({\n            type: 'success',\n            message: { id: getTrad('notification.success.submit') },\n          });\n\n          dispatchSubmitSucceeded();\n\n          handleToggle();\n        } catch (err) {\n          console.error(err);\n\n          strapi.notification.toggle({\n            type: 'warning',\n            message: { id: 'notification.error' },\n          });\n        }\n      } catch (err) {\n        errors = getYupInnerErrors(err);\n      } finally {\n        setIsSubmiting(false);\n        strapi.unlockApp();\n      }\n\n      dispatchSetFormErrors(errors);\n    },\n    [dispatchSetFormErrors, dispatchSubmitSucceeded, modifiedData, templateToEdit, handleToggle]\n  );\n\n  const handleClick = useCallback(() => {\n    buttonSubmitRef.current.click();\n  }, []);\n\n  const handleOpened = useCallback(() => {\n    setShowForm(true);\n  }, []);\n\n  return (\n    <>\n      <SettingsPageTitle name={pageTitle} />\n      <div>\n        <Header title={{ label: pageTitle }} isLoading={isLoadingForPermissions || isLoading} />\n        <ListBaselineAlignment />\n        <List\n          title={listTitle}\n          items={emailTemplates}\n          isLoading={isLoadingForPermissions || isLoading}\n          customRowComponent={template => (\n            <ListRow\n              {...template}\n              onClick={() => {\n                if (canUpdate) {\n                  handleClickEdit(template);\n                }\n              }}\n              links={[\n                {\n                  icon: canUpdate ? <Pencil fill=\"#0e1622\" /> : null,\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleClickEdit(template);\n                  },\n                },\n              ]}\n            />\n          )}\n        />\n      </div>\n      <ModalForm\n        isOpen={isOpen}\n        onOpened={handleOpened}\n        onToggle={handleToggle}\n        onClosed={handleClosed}\n        headerBreadcrumbs={[\n          getTrad('PopUpForm.header.edit.email-templates'),\n          get(templateToEdit, 'name', ''),\n        ]}\n        onClick={handleClick}\n        onCancel={handleToggle}\n        isLoading={isSubmiting}\n      >\n        {showForm && (\n          <form onSubmit={handleSubmit}>\n            <Row>\n              {forms.map(input => {\n                const id = get(templateToEdit, 'id');\n\n                return (\n                  <SizedInput\n                    key={input.name}\n                    {...input}\n                    error={formErrors[input.name]}\n                    name={`${id}.${input.name}`}\n                    onChange={handleChange}\n                    value={get(modifiedData, [id, ...input.name.split('.')], '')}\n                  />\n                );\n              })}\n            </Row>\n            <button type=\"submit\" style={{ display: 'none' }} ref={buttonSubmitRef}>\n              hidden button to use the native form event\n            </button>\n          </form>\n        )}\n      </ModalForm>\n    </>\n  );\n};\n\nexport default EmailTemplatesPage;\n"]},"metadata":{},"sourceType":"script"}