{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.orderAllDataAttributesWithImmutable = exports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _immutable = require(\"immutable\");\n\nvar _lodash = require(\"lodash\");\n\nvar createModifiedDataSchema = function createModifiedDataSchema(contentTypeSchema, retrievedComponents, allComponentsSchema, isInContentTypeView) {\n  var _schema;\n\n  var componentsAssociatedToContentType = retrievedComponents.reduce(function (acc, current) {\n    var componentSchema = (0, _lodash.get)(allComponentsSchema, current, {});\n    acc[current] = componentSchema;\n    return acc;\n  }, {});\n  var keyName = isInContentTypeView ? 'contentType' : 'component';\n  var schema = (_schema = {}, (0, _defineProperty2[\"default\"])(_schema, keyName, contentTypeSchema), (0, _defineProperty2[\"default\"])(_schema, \"components\", componentsAssociatedToContentType), _schema);\n  return schema;\n};\n\nvar orderAllDataAttributesWithImmutable = function orderAllDataAttributesWithImmutable(allDataSchema, isInContentTypeView) {\n  var attributesPath = ['schema', 'attributes'];\n  var componentsSchema = allDataSchema.components;\n  var componentsWithImmutableSchema = Object.keys(componentsSchema).reduce(function (acc, current) {\n    var currentSchema = (0, _lodash.get)(componentsSchema, [current], {});\n    var currentAttributes = (0, _lodash.get)(currentSchema, attributesPath, {});\n    var fromJSAttributes = Object.keys(currentAttributes).reduce(function (acc, current) {\n      acc[current] = (0, _immutable.fromJS)(currentAttributes[current]);\n      return acc;\n    }, {}); // TODO refacto\n\n    var currentImmutableSchemas = (0, _immutable.fromJS)(currentSchema).setIn(['schema', 'attributes'], (0, _immutable.fromJS)((0, _immutable.OrderedMap)(fromJSAttributes)));\n    acc[current] = (0, _immutable.fromJS)(currentImmutableSchemas);\n    return acc;\n  }, {});\n  var keyName = isInContentTypeView ? 'contentType' : 'component';\n  var mainSchema = (0, _lodash.get)(allDataSchema, [keyName], {});\n  var mainImmutableSchema = (0, _immutable.fromJS)(mainSchema).setIn(attributesPath, (0, _immutable.fromJS)((0, _immutable.OrderedMap)(Object.keys((0, _lodash.get)(mainSchema, attributesPath, {})).reduce(function (acc, current) {\n    acc[current] = (0, _immutable.fromJS)((0, _lodash.get)(mainSchema, [].concat(attributesPath, [current]), {}));\n    return acc;\n  }, {}))));\n  var immutableData = (0, _immutable.fromJS)((0, _defineProperty2[\"default\"])({\n    components: componentsWithImmutableSchema\n  }, keyName, mainImmutableSchema));\n  return immutableData;\n};\n\nexports.orderAllDataAttributesWithImmutable = orderAllDataAttributesWithImmutable;\nvar _default = createModifiedDataSchema;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-type-builder/admin/src/containers/DataManagerProvider/utils/createModifiedDataSchema.js"],"names":["createModifiedDataSchema","contentTypeSchema","retrievedComponents","allComponentsSchema","isInContentTypeView","componentsAssociatedToContentType","reduce","acc","current","componentSchema","keyName","schema","orderAllDataAttributesWithImmutable","allDataSchema","attributesPath","componentsSchema","components","componentsWithImmutableSchema","Object","keys","currentSchema","currentAttributes","fromJSAttributes","currentImmutableSchemas","setIn","mainSchema","mainImmutableSchema","immutableData"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,CAC/BC,iBAD+B,EAE/BC,mBAF+B,EAG/BC,mBAH+B,EAI/BC,mBAJ+B,EAK5B;AAAA;;AACH,MAAMC,iCAAiC,GAAGH,mBAAmB,CAACI,MAApB,CACxC,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAChB,QAAMC,eAAe,GAAG,iBAAIN,mBAAJ,EAAyBK,OAAzB,EAAkC,EAAlC,CAAxB;AAEAD,IAAAA,GAAG,CAACC,OAAD,CAAH,GAAeC,eAAf;AAEA,WAAOF,GAAP;AACD,GAPuC,EAQxC,EARwC,CAA1C;AAUA,MAAMG,OAAO,GAAGN,mBAAmB,GAAG,aAAH,GAAmB,WAAtD;AACA,MAAMO,MAAM,4DACTD,OADS,EACCT,iBADD,2DAEEI,iCAFF,WAAZ;AAKA,SAAOM,MAAP;AACD,CAvBD;;AAyBA,IAAMC,mCAAmC,GAAG,SAAtCA,mCAAsC,CAC1CC,aAD0C,EAE1CT,mBAF0C,EAGvC;AACH,MAAMU,cAAc,GAAG,CAAC,QAAD,EAAW,YAAX,CAAvB;AACA,MAAMC,gBAAgB,GAAGF,aAAa,CAACG,UAAvC;AACA,MAAMC,6BAA6B,GAAGC,MAAM,CAACC,IAAP,CAAYJ,gBAAZ,EAA8BT,MAA9B,CACpC,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAChB,QAAMY,aAAa,GAAG,iBAAIL,gBAAJ,EAAsB,CAACP,OAAD,CAAtB,EAAiC,EAAjC,CAAtB;AAEA,QAAMa,iBAAiB,GAAG,iBAAID,aAAJ,EAAmBN,cAAnB,EAAmC,EAAnC,CAA1B;AAEA,QAAMQ,gBAAgB,GAAGJ,MAAM,CAACC,IAAP,CAAYE,iBAAZ,EAA+Bf,MAA/B,CACvB,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAChBD,MAAAA,GAAG,CAACC,OAAD,CAAH,GAAe,uBAAOa,iBAAiB,CAACb,OAAD,CAAxB,CAAf;AAEA,aAAOD,GAAP;AACD,KALsB,EAMvB,EANuB,CAAzB,CALgB,CAchB;;AACA,QAAMgB,uBAAuB,GAAG,uBAAOH,aAAP,EAAsBI,KAAtB,CAC9B,CAAC,QAAD,EAAW,YAAX,CAD8B,EAE9B,uBAAO,2BAAWF,gBAAX,CAAP,CAF8B,CAAhC;AAKAf,IAAAA,GAAG,CAACC,OAAD,CAAH,GAAe,uBAAOe,uBAAP,CAAf;AAEA,WAAOhB,GAAP;AACD,GAxBmC,EAyBpC,EAzBoC,CAAtC;AA2BA,MAAMG,OAAO,GAAGN,mBAAmB,GAAG,aAAH,GAAmB,WAAtD;AACA,MAAMqB,UAAU,GAAG,iBAAIZ,aAAJ,EAAmB,CAACH,OAAD,CAAnB,EAA8B,EAA9B,CAAnB;AACA,MAAMgB,mBAAmB,GAAG,uBAAOD,UAAP,EAAmBD,KAAnB,CAC1BV,cAD0B,EAE1B,uBACE,2BACEI,MAAM,CAACC,IAAP,CAAY,iBAAIM,UAAJ,EAAgBX,cAAhB,EAAgC,EAAhC,CAAZ,EAAiDR,MAAjD,CACE,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAChBD,IAAAA,GAAG,CAACC,OAAD,CAAH,GAAe,uBACb,iBAAIiB,UAAJ,YAAoBX,cAApB,GAAoCN,OAApC,IAA8C,EAA9C,CADa,CAAf;AAIA,WAAOD,GAAP;AACD,GAPH,EAQE,EARF,CADF,CADF,CAF0B,CAA5B;AAkBA,MAAMoB,aAAa,GAAG;AACpBX,IAAAA,UAAU,EAAEC;AADQ,KAEnBP,OAFmB,EAETgB,mBAFS,EAAtB;AAKA,SAAOC,aAAP;AACD,CA3DD;;;eA6De3B,wB","sourcesContent":["import { fromJS, OrderedMap } from 'immutable';\nimport { get } from 'lodash';\n\nconst createModifiedDataSchema = (\n  contentTypeSchema,\n  retrievedComponents,\n  allComponentsSchema,\n  isInContentTypeView\n) => {\n  const componentsAssociatedToContentType = retrievedComponents.reduce(\n    (acc, current) => {\n      const componentSchema = get(allComponentsSchema, current, {});\n\n      acc[current] = componentSchema;\n\n      return acc;\n    },\n    {}\n  );\n  const keyName = isInContentTypeView ? 'contentType' : 'component';\n  const schema = {\n    [keyName]: contentTypeSchema,\n    components: componentsAssociatedToContentType,\n  };\n\n  return schema;\n};\n\nconst orderAllDataAttributesWithImmutable = (\n  allDataSchema,\n  isInContentTypeView\n) => {\n  const attributesPath = ['schema', 'attributes'];\n  const componentsSchema = allDataSchema.components;\n  const componentsWithImmutableSchema = Object.keys(componentsSchema).reduce(\n    (acc, current) => {\n      const currentSchema = get(componentsSchema, [current], {});\n\n      const currentAttributes = get(currentSchema, attributesPath, {});\n\n      const fromJSAttributes = Object.keys(currentAttributes).reduce(\n        (acc, current) => {\n          acc[current] = fromJS(currentAttributes[current]);\n\n          return acc;\n        },\n        {}\n      );\n\n      // TODO refacto\n      const currentImmutableSchemas = fromJS(currentSchema).setIn(\n        ['schema', 'attributes'],\n        fromJS(OrderedMap(fromJSAttributes))\n      );\n\n      acc[current] = fromJS(currentImmutableSchemas);\n\n      return acc;\n    },\n    {}\n  );\n  const keyName = isInContentTypeView ? 'contentType' : 'component';\n  const mainSchema = get(allDataSchema, [keyName], {});\n  const mainImmutableSchema = fromJS(mainSchema).setIn(\n    attributesPath,\n    fromJS(\n      OrderedMap(\n        Object.keys(get(mainSchema, attributesPath, {})).reduce(\n          (acc, current) => {\n            acc[current] = fromJS(\n              get(mainSchema, [...attributesPath, current], {})\n            );\n\n            return acc;\n          },\n          {}\n        )\n      )\n    )\n  );\n\n  const immutableData = fromJS({\n    components: componentsWithImmutableSchema,\n    [keyName]: mainImmutableSchema,\n  });\n\n  return immutableData;\n};\n\nexport default createModifiedDataSchema;\nexport { orderAllDataAttributesWithImmutable };\n"]},"metadata":{},"sourceType":"script"}