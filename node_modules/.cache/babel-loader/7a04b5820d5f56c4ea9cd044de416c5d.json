{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactFastCompare = _interopRequireDefault(require(\"react-fast-compare\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _hooks = require(\"../../hooks\");\n\nvar _actions = require(\"../../sharedReducers/crudReducer/actions\");\n\nvar _selectors = _interopRequireDefault(require(\"../../sharedReducers/crudReducer/selectors\"));\n\nvar _utils2 = require(\"./utils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// This container is used to handle the CRUD\nvar CollectionTypeFormWrapper = function CollectionTypeFormWrapper(_ref) {\n  var allLayoutData = _ref.allLayoutData,\n      children = _ref.children,\n      slug = _ref.slug,\n      id = _ref.id,\n      origin = _ref.origin;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      emitEvent = _useGlobalContext.emitEvent;\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push,\n      replace = _useHistory.replace;\n\n  var _useQueryParams = (0, _strapiHelperPlugin.useQueryParams)(),\n      _useQueryParams2 = (0, _slicedToArray2[\"default\"])(_useQueryParams, 1),\n      rawQuery = _useQueryParams2[0].rawQuery;\n\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  var _useSelector = (0, _reactRedux.useSelector)(_selectors[\"default\"]),\n      componentsDataStructure = _useSelector.componentsDataStructure,\n      contentTypeDataStructure = _useSelector.contentTypeDataStructure,\n      data = _useSelector.data,\n      isLoading = _useSelector.isLoading,\n      status = _useSelector.status;\n\n  var redirectionLink = (0, _hooks.useFindRedirectionLink)(slug);\n  var isMounted = (0, _react.useRef)(true);\n  var emitEventRef = (0, _react.useRef)(emitEvent);\n  var allLayoutDataRef = (0, _react.useRef)(allLayoutData);\n  var isCreatingEntry = id === null;\n  var requestURL = (0, _react.useMemo)(function () {\n    if (isCreatingEntry && !origin) {\n      return null;\n    }\n\n    return (0, _utils2.getRequestUrl)(\"\".concat(slug, \"/\").concat(origin || id));\n  }, [slug, id, isCreatingEntry, origin]);\n  var cleanClonedData = (0, _react.useCallback)(function (data) {\n    if (!origin) {\n      return data;\n    }\n\n    var cleaned = (0, _strapiHelperPlugin.contentManagementUtilRemoveFieldsFromData)(data, allLayoutDataRef.current.contentType, allLayoutDataRef.current.components);\n    return cleaned;\n  }, [origin]);\n  var cleanReceivedData = (0, _react.useCallback)(function (data) {\n    var cleaned = (0, _utils.removePasswordFieldsFromData)(data, allLayoutDataRef.current.contentType, allLayoutDataRef.current.components);\n    return (0, _strapiHelperPlugin.formatComponentData)(cleaned, allLayoutDataRef.current.contentType, allLayoutDataRef.current.components);\n  }, []); // SET THE DEFAULT LAYOUT the effect is applied when the slug changes\n\n  (0, _react.useEffect)(function () {\n    var componentsDataStructure = Object.keys(allLayoutData.components).reduce(function (acc, current) {\n      var defaultComponentForm = (0, _utils.createDefaultForm)((0, _lodash.get)(allLayoutData, ['components', current, 'attributes'], {}), allLayoutData.components);\n      acc[current] = (0, _strapiHelperPlugin.formatComponentData)(defaultComponentForm, allLayoutData.components[current], allLayoutData.components);\n      return acc;\n    }, {});\n    var contentTypeDataStructure = (0, _utils.createDefaultForm)(allLayoutData.contentType.attributes, allLayoutData.components);\n    var contentTypeDataStructureFormatted = (0, _strapiHelperPlugin.formatComponentData)(contentTypeDataStructure, allLayoutData.contentType, allLayoutData.components);\n    dispatch((0, _actions.setDataStructures)(componentsDataStructure, contentTypeDataStructureFormatted));\n  }, [allLayoutData, dispatch]);\n  (0, _react.useEffect)(function () {\n    return function () {\n      dispatch((0, _actions.resetProps)());\n    };\n  }, [dispatch]);\n  (0, _react.useEffect)(function () {\n    var abortController = new AbortController();\n    var signal = abortController.signal;\n\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(signal) {\n        var _data, resStatus;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch((0, _actions.getData)());\n                _context.prev = 1;\n                _context.next = 4;\n                return (0, _strapiHelperPlugin.request)(requestURL, {\n                  method: 'GET',\n                  signal: signal\n                });\n\n              case 4:\n                _data = _context.sent;\n                dispatch((0, _actions.getDataSucceeded)(cleanReceivedData(cleanClonedData(_data))));\n                _context.next = 18;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n\n                if (!(_context.t0.name === 'AbortError')) {\n                  _context.next = 12;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 12:\n                console.error(_context.t0);\n                resStatus = (0, _lodash.get)(_context.t0, 'response.status', null);\n\n                if (!(resStatus === 404)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                push(redirectionLink);\n                return _context.abrupt(\"return\");\n\n              case 17:\n                // Not allowed to read a document\n                if (resStatus === 403) {\n                  strapi.notification.info((0, _utils.getTrad)('permissions.not-allowed.update'));\n                  push(redirectionLink);\n                }\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n\n      return function fetchData(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(); // This is needed in order to reset the form when the query changes\n\n\n    var init = /*#__PURE__*/function () {\n      var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return dispatch((0, _actions.getData)());\n\n              case 2:\n                _context2.next = 4;\n                return dispatch((0, _actions.initForm)(rawQuery));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function init() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    if (!isMounted.current) {\n      return function () {};\n    }\n\n    if (requestURL) {\n      fetchData(signal);\n    } else {\n      init();\n    }\n\n    return function () {\n      abortController.abort();\n    };\n  }, [cleanClonedData, cleanReceivedData, push, requestURL, dispatch, rawQuery, redirectionLink]);\n  var displayErrors = (0, _react.useCallback)(function (err) {\n    var errorPayload = err.response.payload;\n    console.error(errorPayload);\n    var errorMessage = (0, _lodash.get)(errorPayload, ['message'], 'Bad Request'); // TODO handle errors correctly when back-end ready\n\n    if (Array.isArray(errorMessage)) {\n      errorMessage = (0, _lodash.get)(errorMessage, ['0', 'messages', '0', 'id']);\n    }\n\n    if (typeof errorMessage === 'string') {\n      strapi.notification.error(errorMessage);\n    }\n  }, []);\n  var onDelete = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(trackerProperty) {\n      var response;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              emitEventRef.current('willDeleteEntry', trackerProperty);\n              _context3.next = 4;\n              return (0, _strapiHelperPlugin.request)((0, _utils2.getRequestUrl)(\"\".concat(slug, \"/\").concat(id)), {\n                method: 'DELETE'\n              });\n\n            case 4:\n              response = _context3.sent;\n              strapi.notification.success((0, _utils.getTrad)('success.record.delete'));\n              emitEventRef.current('didDeleteEntry', trackerProperty);\n              return _context3.abrupt(\"return\", Promise.resolve(response));\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              emitEventRef.current('didNotDeleteEntry', _objectSpread({\n                error: _context3.t0\n              }, trackerProperty));\n              return _context3.abrupt(\"return\", Promise.reject(_context3.t0));\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 10]]);\n    }));\n\n    return function (_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [id, slug]);\n  var onDeleteSucceeded = (0, _react.useCallback)(function () {\n    replace(redirectionLink);\n  }, [redirectionLink, replace]);\n  var onPost = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(body, trackerProperty) {\n      var endPoint, response;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              endPoint = \"\".concat((0, _utils2.getRequestUrl)(slug)).concat(rawQuery);\n              _context4.prev = 1;\n              // Show a loading button in the EditView/Header.js && lock the app => no navigation\n              dispatch((0, _actions.setStatus)('submit-pending'));\n              _context4.next = 5;\n              return (0, _strapiHelperPlugin.request)(endPoint, {\n                method: 'POST',\n                body: body\n              });\n\n            case 5:\n              response = _context4.sent;\n              emitEventRef.current('didCreateEntry', trackerProperty);\n              strapi.notification.toggle({\n                type: 'success',\n                message: {\n                  id: (0, _utils.getTrad)('success.record.save')\n                }\n              });\n              dispatch((0, _actions.submitSucceeded)(cleanReceivedData(response))); // Enable navigation and remove loaders\n\n              dispatch((0, _actions.setStatus)('resolved'));\n              replace(\"/plugins/\".concat(_pluginId[\"default\"], \"/collectionType/\").concat(slug, \"/\").concat(response.id).concat(rawQuery));\n              _context4.next = 18;\n              break;\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](1);\n              emitEventRef.current('didNotCreateEntry', {\n                error: _context4.t0,\n                trackerProperty: trackerProperty\n              });\n              displayErrors(_context4.t0);\n              dispatch((0, _actions.setStatus)('resolved'));\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 13]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }(), [cleanReceivedData, displayErrors, replace, slug, dispatch, rawQuery]);\n  var onPublish = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n    var endPoint, _data2;\n\n    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            emitEventRef.current('willPublishEntry');\n            endPoint = (0, _utils2.getRequestUrl)(\"\".concat(slug, \"/\").concat(id, \"/actions/publish\"));\n            dispatch((0, _actions.setStatus)('publish-pending'));\n            _context5.next = 6;\n            return (0, _strapiHelperPlugin.request)(endPoint, {\n              method: 'POST'\n            });\n\n          case 6:\n            _data2 = _context5.sent;\n            emitEventRef.current('didPublishEntry');\n            dispatch((0, _actions.submitSucceeded)(cleanReceivedData(_data2)));\n            dispatch((0, _actions.setStatus)('resolved'));\n            strapi.notification.toggle({\n              type: 'success',\n              message: {\n                id: (0, _utils.getTrad)('success.record.publish')\n              }\n            });\n            _context5.next = 17;\n            break;\n\n          case 13:\n            _context5.prev = 13;\n            _context5.t0 = _context5[\"catch\"](0);\n            displayErrors(_context5.t0);\n            dispatch((0, _actions.setStatus)('resolved'));\n\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 13]]);\n  })), [cleanReceivedData, displayErrors, id, slug, dispatch]);\n  var onPut = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(body, trackerProperty) {\n      var endPoint, response;\n      return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              endPoint = (0, _utils2.getRequestUrl)(\"\".concat(slug, \"/\").concat(id));\n              _context6.prev = 1;\n              emitEventRef.current('willEditEntry', trackerProperty);\n              dispatch((0, _actions.setStatus)('submit-pending'));\n              _context6.next = 6;\n              return (0, _strapiHelperPlugin.request)(endPoint, {\n                method: 'PUT',\n                body: body\n              });\n\n            case 6:\n              response = _context6.sent;\n              emitEventRef.current('didEditEntry', {\n                trackerProperty: trackerProperty\n              });\n              strapi.notification.toggle({\n                type: 'success',\n                message: {\n                  id: (0, _utils.getTrad)('success.record.save')\n                }\n              });\n              dispatch((0, _actions.submitSucceeded)(cleanReceivedData(response)));\n              dispatch((0, _actions.setStatus)('resolved'));\n              _context6.next = 18;\n              break;\n\n            case 13:\n              _context6.prev = 13;\n              _context6.t0 = _context6[\"catch\"](1);\n              emitEventRef.current('didNotEditEntry', {\n                error: _context6.t0,\n                trackerProperty: trackerProperty\n              });\n              displayErrors(_context6.t0);\n              dispatch((0, _actions.setStatus)('resolved'));\n\n            case 18:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 13]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }(), [cleanReceivedData, displayErrors, slug, id, dispatch]);\n  var onUnpublish = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7() {\n    var endPoint, response;\n    return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            endPoint = (0, _utils2.getRequestUrl)(\"\".concat(slug, \"/\").concat(id, \"/actions/unpublish\"));\n            dispatch((0, _actions.setStatus)('unpublish-pending'));\n            _context7.prev = 2;\n            emitEventRef.current('willUnpublishEntry');\n            _context7.next = 6;\n            return (0, _strapiHelperPlugin.request)(endPoint, {\n              method: 'POST'\n            });\n\n          case 6:\n            response = _context7.sent;\n            emitEventRef.current('didUnpublishEntry');\n            strapi.notification.success((0, _utils.getTrad)('success.record.unpublish'));\n            dispatch((0, _actions.submitSucceeded)(cleanReceivedData(response)));\n            dispatch((0, _actions.setStatus)('resolved'));\n            _context7.next = 17;\n            break;\n\n          case 13:\n            _context7.prev = 13;\n            _context7.t0 = _context7[\"catch\"](2);\n            dispatch((0, _actions.setStatus)('resolved'));\n            displayErrors(_context7.t0);\n\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[2, 13]]);\n  })), [cleanReceivedData, displayErrors, id, slug, dispatch]);\n  return children({\n    componentsDataStructure: componentsDataStructure,\n    contentTypeDataStructure: contentTypeDataStructure,\n    data: data,\n    isCreatingEntry: isCreatingEntry,\n    isLoadingForData: isLoading,\n    onDelete: onDelete,\n    onDeleteSucceeded: onDeleteSucceeded,\n    onPost: onPost,\n    onPublish: onPublish,\n    onPut: onPut,\n    onUnpublish: onUnpublish,\n    status: status,\n    redirectionLink: redirectionLink\n  });\n};\n\nCollectionTypeFormWrapper.defaultProps = {\n  id: null,\n  origin: null\n};\nCollectionTypeFormWrapper.propTypes = {\n  allLayoutData: _propTypes[\"default\"].exact({\n    components: _propTypes[\"default\"].object.isRequired,\n    contentType: _propTypes[\"default\"].shape({\n      apiID: _propTypes[\"default\"].string.isRequired,\n      attributes: _propTypes[\"default\"].object.isRequired,\n      info: _propTypes[\"default\"].object.isRequired,\n      isDisplayed: _propTypes[\"default\"].bool.isRequired,\n      kind: _propTypes[\"default\"].string.isRequired,\n      layouts: _propTypes[\"default\"].object.isRequired,\n      metadatas: _propTypes[\"default\"].object.isRequired,\n      options: _propTypes[\"default\"].object.isRequired,\n      pluginOptions: _propTypes[\"default\"].object,\n      settings: _propTypes[\"default\"].object.isRequired,\n      uid: _propTypes[\"default\"].string.isRequired\n    }).isRequired\n  }).isRequired,\n  children: _propTypes[\"default\"].func.isRequired,\n  id: _propTypes[\"default\"].string,\n  origin: _propTypes[\"default\"].string,\n  slug: _propTypes[\"default\"].string.isRequired\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(CollectionTypeFormWrapper, _reactFastCompare[\"default\"]);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/CollectionTypeFormWrapper/index.js"],"names":["CollectionTypeFormWrapper","allLayoutData","children","slug","id","origin","emitEvent","push","replace","rawQuery","dispatch","selectCrudReducer","componentsDataStructure","contentTypeDataStructure","data","isLoading","status","redirectionLink","isMounted","emitEventRef","allLayoutDataRef","isCreatingEntry","requestURL","cleanClonedData","cleaned","current","contentType","components","cleanReceivedData","Object","keys","reduce","acc","defaultComponentForm","attributes","contentTypeDataStructureFormatted","abortController","AbortController","signal","fetchData","method","name","console","error","resStatus","strapi","notification","info","init","abort","displayErrors","err","errorPayload","response","payload","errorMessage","Array","isArray","onDelete","trackerProperty","success","Promise","resolve","reject","onDeleteSucceeded","onPost","body","endPoint","toggle","type","message","pluginId","onPublish","onPut","onUnpublish","isLoadingForData","defaultProps","propTypes","PropTypes","exact","object","isRequired","shape","apiID","string","isDisplayed","bool","kind","layouts","metadatas","options","pluginOptions","settings","uid","func","isEqual"],"mappings":"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","sourcesContent":["import { memo, useCallback, useEffect, useMemo, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { get } from 'lodash';\nimport {\n  request,\n  useGlobalContext,\n  useQueryParams,\n  formatComponentData,\n  contentManagementUtilRemoveFieldsFromData,\n} from 'strapi-helper-plugin';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEqual from 'react-fast-compare';\nimport { createDefaultForm, getTrad, removePasswordFieldsFromData } from '../../utils';\nimport pluginId from '../../pluginId';\nimport { useFindRedirectionLink } from '../../hooks';\nimport {\n  getData,\n  getDataSucceeded,\n  initForm,\n  resetProps,\n  setDataStructures,\n  setStatus,\n  submitSucceeded,\n} from '../../sharedReducers/crudReducer/actions';\nimport selectCrudReducer from '../../sharedReducers/crudReducer/selectors';\nimport { getRequestUrl } from './utils';\n\n// This container is used to handle the CRUD\nconst CollectionTypeFormWrapper = ({ allLayoutData, children, slug, id, origin }) => {\n  const { emitEvent } = useGlobalContext();\n  const { push, replace } = useHistory();\n  const [{ rawQuery }] = useQueryParams();\n  const dispatch = useDispatch();\n  const {\n    componentsDataStructure,\n    contentTypeDataStructure,\n    data,\n    isLoading,\n    status,\n  } = useSelector(selectCrudReducer);\n  const redirectionLink = useFindRedirectionLink(slug);\n\n  const isMounted = useRef(true);\n  const emitEventRef = useRef(emitEvent);\n\n  const allLayoutDataRef = useRef(allLayoutData);\n\n  const isCreatingEntry = id === null;\n\n  const requestURL = useMemo(() => {\n    if (isCreatingEntry && !origin) {\n      return null;\n    }\n\n    return getRequestUrl(`${slug}/${origin || id}`);\n  }, [slug, id, isCreatingEntry, origin]);\n\n  const cleanClonedData = useCallback(\n    data => {\n      if (!origin) {\n        return data;\n      }\n\n      const cleaned = contentManagementUtilRemoveFieldsFromData(\n        data,\n        allLayoutDataRef.current.contentType,\n        allLayoutDataRef.current.components\n      );\n\n      return cleaned;\n    },\n    [origin]\n  );\n\n  const cleanReceivedData = useCallback(data => {\n    const cleaned = removePasswordFieldsFromData(\n      data,\n      allLayoutDataRef.current.contentType,\n      allLayoutDataRef.current.components\n    );\n\n    return formatComponentData(\n      cleaned,\n      allLayoutDataRef.current.contentType,\n      allLayoutDataRef.current.components\n    );\n  }, []);\n\n  // SET THE DEFAULT LAYOUT the effect is applied when the slug changes\n  useEffect(() => {\n    const componentsDataStructure = Object.keys(allLayoutData.components).reduce((acc, current) => {\n      const defaultComponentForm = createDefaultForm(\n        get(allLayoutData, ['components', current, 'attributes'], {}),\n        allLayoutData.components\n      );\n\n      acc[current] = formatComponentData(\n        defaultComponentForm,\n        allLayoutData.components[current],\n        allLayoutData.components\n      );\n\n      return acc;\n    }, {});\n\n    const contentTypeDataStructure = createDefaultForm(\n      allLayoutData.contentType.attributes,\n      allLayoutData.components\n    );\n\n    const contentTypeDataStructureFormatted = formatComponentData(\n      contentTypeDataStructure,\n      allLayoutData.contentType,\n      allLayoutData.components\n    );\n\n    dispatch(setDataStructures(componentsDataStructure, contentTypeDataStructureFormatted));\n  }, [allLayoutData, dispatch]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetProps());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const { signal } = abortController;\n\n    const fetchData = async signal => {\n      dispatch(getData());\n\n      try {\n        const data = await request(requestURL, { method: 'GET', signal });\n\n        dispatch(getDataSucceeded(cleanReceivedData(cleanClonedData(data))));\n      } catch (err) {\n        if (err.name === 'AbortError') {\n          return;\n        }\n\n        console.error(err);\n\n        const resStatus = get(err, 'response.status', null);\n\n        if (resStatus === 404) {\n          push(redirectionLink);\n\n          return;\n        }\n\n        // Not allowed to read a document\n        if (resStatus === 403) {\n          strapi.notification.info(getTrad('permissions.not-allowed.update'));\n\n          push(redirectionLink);\n        }\n      }\n    };\n\n    // This is needed in order to reset the form when the query changes\n    const init = async () => {\n      await dispatch(getData());\n      await dispatch(initForm(rawQuery));\n    };\n\n    if (!isMounted.current) {\n      return () => {};\n    }\n\n    if (requestURL) {\n      fetchData(signal);\n    } else {\n      init();\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [cleanClonedData, cleanReceivedData, push, requestURL, dispatch, rawQuery, redirectionLink]);\n\n  const displayErrors = useCallback(err => {\n    const errorPayload = err.response.payload;\n    console.error(errorPayload);\n\n    let errorMessage = get(errorPayload, ['message'], 'Bad Request');\n\n    // TODO handle errors correctly when back-end ready\n    if (Array.isArray(errorMessage)) {\n      errorMessage = get(errorMessage, ['0', 'messages', '0', 'id']);\n    }\n\n    if (typeof errorMessage === 'string') {\n      strapi.notification.error(errorMessage);\n    }\n  }, []);\n\n  const onDelete = useCallback(\n    async trackerProperty => {\n      try {\n        emitEventRef.current('willDeleteEntry', trackerProperty);\n\n        const response = await request(getRequestUrl(`${slug}/${id}`), {\n          method: 'DELETE',\n        });\n\n        strapi.notification.success(getTrad('success.record.delete'));\n\n        emitEventRef.current('didDeleteEntry', trackerProperty);\n\n        return Promise.resolve(response);\n      } catch (err) {\n        emitEventRef.current('didNotDeleteEntry', { error: err, ...trackerProperty });\n\n        return Promise.reject(err);\n      }\n    },\n    [id, slug]\n  );\n\n  const onDeleteSucceeded = useCallback(() => {\n    replace(redirectionLink);\n  }, [redirectionLink, replace]);\n\n  const onPost = useCallback(\n    async (body, trackerProperty) => {\n      const endPoint = `${getRequestUrl(slug)}${rawQuery}`;\n\n      try {\n        // Show a loading button in the EditView/Header.js && lock the app => no navigation\n        dispatch(setStatus('submit-pending'));\n\n        const response = await request(endPoint, { method: 'POST', body });\n\n        emitEventRef.current('didCreateEntry', trackerProperty);\n        strapi.notification.toggle({\n          type: 'success',\n          message: { id: getTrad('success.record.save') },\n        });\n\n        dispatch(submitSucceeded(cleanReceivedData(response)));\n        // Enable navigation and remove loaders\n        dispatch(setStatus('resolved'));\n\n        replace(`/plugins/${pluginId}/collectionType/${slug}/${response.id}${rawQuery}`);\n      } catch (err) {\n        emitEventRef.current('didNotCreateEntry', { error: err, trackerProperty });\n        displayErrors(err);\n        dispatch(setStatus('resolved'));\n      }\n    },\n    [cleanReceivedData, displayErrors, replace, slug, dispatch, rawQuery]\n  );\n\n  const onPublish = useCallback(async () => {\n    try {\n      emitEventRef.current('willPublishEntry');\n      const endPoint = getRequestUrl(`${slug}/${id}/actions/publish`);\n\n      dispatch(setStatus('publish-pending'));\n\n      const data = await request(endPoint, { method: 'POST' });\n\n      emitEventRef.current('didPublishEntry');\n\n      dispatch(submitSucceeded(cleanReceivedData(data)));\n      dispatch(setStatus('resolved'));\n\n      strapi.notification.toggle({\n        type: 'success',\n        message: { id: getTrad('success.record.publish') },\n      });\n    } catch (err) {\n      displayErrors(err);\n      dispatch(setStatus('resolved'));\n    }\n  }, [cleanReceivedData, displayErrors, id, slug, dispatch]);\n\n  const onPut = useCallback(\n    async (body, trackerProperty) => {\n      const endPoint = getRequestUrl(`${slug}/${id}`);\n\n      try {\n        emitEventRef.current('willEditEntry', trackerProperty);\n\n        dispatch(setStatus('submit-pending'));\n\n        const response = await request(endPoint, { method: 'PUT', body });\n\n        emitEventRef.current('didEditEntry', { trackerProperty });\n        strapi.notification.toggle({\n          type: 'success',\n          message: { id: getTrad('success.record.save') },\n        });\n\n        dispatch(submitSucceeded(cleanReceivedData(response)));\n\n        dispatch(setStatus('resolved'));\n      } catch (err) {\n        emitEventRef.current('didNotEditEntry', { error: err, trackerProperty });\n        displayErrors(err);\n\n        dispatch(setStatus('resolved'));\n      }\n    },\n    [cleanReceivedData, displayErrors, slug, id, dispatch]\n  );\n\n  const onUnpublish = useCallback(async () => {\n    const endPoint = getRequestUrl(`${slug}/${id}/actions/unpublish`);\n\n    dispatch(setStatus('unpublish-pending'));\n\n    try {\n      emitEventRef.current('willUnpublishEntry');\n\n      const response = await request(endPoint, { method: 'POST' });\n\n      emitEventRef.current('didUnpublishEntry');\n      strapi.notification.success(getTrad('success.record.unpublish'));\n\n      dispatch(submitSucceeded(cleanReceivedData(response)));\n      dispatch(setStatus('resolved'));\n    } catch (err) {\n      dispatch(setStatus('resolved'));\n      displayErrors(err);\n    }\n  }, [cleanReceivedData, displayErrors, id, slug, dispatch]);\n\n  return children({\n    componentsDataStructure,\n    contentTypeDataStructure,\n    data,\n    isCreatingEntry,\n    isLoadingForData: isLoading,\n    onDelete,\n    onDeleteSucceeded,\n    onPost,\n    onPublish,\n    onPut,\n    onUnpublish,\n    status,\n    redirectionLink,\n  });\n};\n\nCollectionTypeFormWrapper.defaultProps = {\n  id: null,\n  origin: null,\n};\n\nCollectionTypeFormWrapper.propTypes = {\n  allLayoutData: PropTypes.exact({\n    components: PropTypes.object.isRequired,\n    contentType: PropTypes.shape({\n      apiID: PropTypes.string.isRequired,\n      attributes: PropTypes.object.isRequired,\n      info: PropTypes.object.isRequired,\n      isDisplayed: PropTypes.bool.isRequired,\n      kind: PropTypes.string.isRequired,\n      layouts: PropTypes.object.isRequired,\n      metadatas: PropTypes.object.isRequired,\n      options: PropTypes.object.isRequired,\n      pluginOptions: PropTypes.object,\n      settings: PropTypes.object.isRequired,\n      uid: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  children: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  origin: PropTypes.string,\n  slug: PropTypes.string.isRequired,\n};\n\nexport default memo(CollectionTypeFormWrapper, isEqual);\n"]},"metadata":{},"sourceType":"script"}