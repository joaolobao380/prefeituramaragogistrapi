{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortContentType = exports.formatMainDataType = exports.getCreatedAndModifiedComponents = exports.getComponentsToPost = exports.formatComponent = void 0;\n\nvar _lodash = require(\"lodash\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../../pluginId\"));\n\nvar _makeUnique = _interopRequireDefault(require(\"../../../utils/makeUnique\"));\n\nvar getCreatedAndModifiedComponents = function getCreatedAndModifiedComponents(allComponents, initialComponents) {\n  var componentUIDsToReturn = Object.keys(allComponents).filter(function (compoUid) {\n    var currentCompo = (0, _lodash.get)(allComponents, compoUid, {});\n    var initialCompo = (0, _lodash.get)(initialComponents, compoUid, {});\n    var hasComponentBeenCreated = (0, _lodash.get)(currentCompo, ['isTemporary'], false);\n    var hasComponentBeenModified = !(0, _lodash.isEqual)(currentCompo, initialCompo);\n    return hasComponentBeenCreated || hasComponentBeenModified;\n  });\n  return (0, _makeUnique[\"default\"])(componentUIDsToReturn);\n};\n\nexports.getCreatedAndModifiedComponents = getCreatedAndModifiedComponents;\n\nvar formatComponent = function formatComponent(component, mainDataUID) {\n  var isCreatingData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var formattedAttributes = formatAttributes((0, _lodash.get)(component, 'schema.attributes', {}), mainDataUID, isCreatingData, true); // Set tmpUID if the component has just been created\n  // Keep the uid if the component already exists\n\n  var compoUID = (0, _lodash.get)(component, 'isTemporary', false) ? {\n    tmpUID: component.uid\n  } : {\n    uid: component.uid\n  };\n  var formattedComponent = Object.assign({}, compoUID, {\n    category: component.category\n  }, // Omit the attributes since we want to format them\n  (0, _lodash.omit)(component.schema, 'attributes'), // Add the formatted attributes\n  {\n    attributes: formattedAttributes\n  });\n  return formattedComponent;\n};\n\nexports.formatComponent = formatComponent;\n\nvar formatMainDataType = function formatMainDataType(data) {\n  var isComponent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var isCreatingData = (0, _lodash.get)(data, 'isTemporary', false);\n  var mainDataUID = (0, _lodash.get)(data, 'uid', null);\n  var formattedAttributes = formatAttributes((0, _lodash.get)(data, 'schema.attributes', {}), mainDataUID, isCreatingData, false);\n  var initObj = isComponent ? {\n    category: (0, _lodash.get)(data, 'category', '')\n  } : {};\n  var formattedContentType = Object.assign(initObj, (0, _lodash.omit)(data.schema, 'attributes'), {\n    attributes: formattedAttributes\n  });\n  delete formattedContentType.uid;\n  delete formattedContentType.isTemporary;\n  delete formattedContentType.visible;\n  delete formattedContentType.restrictRelationsTo;\n  return formattedContentType;\n};\n/**\n *\n * @param {Object} attributes\n * @param {String} mainDataUID uid of the main data type\n * @param {Boolean} isCreatingMainData\n * @param {Boolean} isComponent\n */\n\n\nexports.formatMainDataType = formatMainDataType;\n\nvar formatAttributes = function formatAttributes(attributes, mainDataUID, isCreatingMainData, isComponent) {\n  return Object.keys(attributes).reduce(function (acc, current) {\n    var currentAttribute = (0, _lodash.get)(attributes, current, {});\n    var hasARelationWithMainDataUID = currentAttribute.target === mainDataUID;\n    var isRelationType = (0, _lodash.has)(currentAttribute, 'nature');\n    var currentTargetAttribute = (0, _lodash.get)(currentAttribute, 'targetAttribute', null);\n\n    if (!hasARelationWithMainDataUID) {\n      if (isRelationType) {\n        var relationAttr = Object.assign({}, currentAttribute, {\n          targetAttribute: formatRelationTargetAttribute(currentTargetAttribute)\n        });\n        acc[current] = removeNullKeys(relationAttr);\n      } else {\n        acc[current] = removeNullKeys(currentAttribute);\n      }\n    }\n\n    if (hasARelationWithMainDataUID) {\n      var target = currentAttribute.target;\n\n      if (isCreatingMainData) {\n        target = isComponent ? '__contentType__' : '__self__';\n      }\n\n      var formattedRelationAttribute = Object.assign({}, currentAttribute, {\n        target: target,\n        targetAttribute: formatRelationTargetAttribute(currentTargetAttribute)\n      });\n      acc[current] = removeNullKeys(formattedRelationAttribute);\n    }\n\n    return acc;\n  }, {});\n};\n\nvar formatRelationTargetAttribute = function formatRelationTargetAttribute(targetAttribute) {\n  return targetAttribute === '-' ? null : targetAttribute;\n};\n\nvar removeNullKeys = function removeNullKeys(obj) {\n  return Object.keys(obj).reduce(function (acc, current) {\n    if (obj[current] !== null && current !== 'plugin') {\n      acc[current] = obj[current];\n    }\n\n    return acc;\n  }, {});\n};\n\nvar getComponentsToPost = function getComponentsToPost(allComponents, initialComponents, mainDataUID) {\n  var isCreatingData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var componentsToFormat = getCreatedAndModifiedComponents(allComponents, initialComponents);\n  var formattedComponents = componentsToFormat.map(function (compoUID) {\n    var currentCompo = (0, _lodash.get)(allComponents, compoUID, {});\n    var formattedComponent = formatComponent(currentCompo, mainDataUID, isCreatingData);\n    return formattedComponent;\n  });\n  return formattedComponents;\n};\n\nexports.getComponentsToPost = getComponentsToPost;\n\nvar sortContentType = function sortContentType(types) {\n  return (0, _lodash.sortBy)(Object.keys(types).map(function (uid) {\n    return {\n      visible: types[uid].schema.visible,\n      name: uid,\n      title: types[uid].schema.name,\n      plugin: types[uid].plugin || null,\n      uid: uid,\n      to: \"/plugins/\".concat(_pluginId[\"default\"], \"/content-types/\").concat(uid),\n      kind: types[uid].schema.kind,\n      restrictRelationsTo: types[uid].schema.restrictRelationsTo\n    };\n  }).filter(function (obj) {\n    return obj !== null;\n  }), function (obj) {\n    return (0, _lodash.camelCase)(obj.title);\n  });\n};\n\nexports.sortContentType = sortContentType;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-type-builder/admin/src/containers/DataManagerProvider/utils/cleanData.js"],"names":["getCreatedAndModifiedComponents","allComponents","initialComponents","componentUIDsToReturn","Object","keys","filter","compoUid","currentCompo","initialCompo","hasComponentBeenCreated","hasComponentBeenModified","formatComponent","component","mainDataUID","isCreatingData","formattedAttributes","formatAttributes","compoUID","tmpUID","uid","formattedComponent","assign","category","schema","attributes","formatMainDataType","data","isComponent","initObj","formattedContentType","isTemporary","visible","restrictRelationsTo","isCreatingMainData","reduce","acc","current","currentAttribute","hasARelationWithMainDataUID","target","isRelationType","currentTargetAttribute","relationAttr","targetAttribute","formatRelationTargetAttribute","removeNullKeys","formattedRelationAttribute","obj","getComponentsToPost","componentsToFormat","formattedComponents","map","sortContentType","types","name","title","plugin","to","pluginId","kind"],"mappings":"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","sourcesContent":["import { get, has, isEqual, omit, sortBy, camelCase } from 'lodash';\n\nimport pluginId from '../../../pluginId';\nimport makeUnique from '../../../utils/makeUnique';\n\nconst getCreatedAndModifiedComponents = (allComponents, initialComponents) => {\n  const componentUIDsToReturn = Object.keys(allComponents).filter(compoUid => {\n    const currentCompo = get(allComponents, compoUid, {});\n    const initialCompo = get(initialComponents, compoUid, {});\n    const hasComponentBeenCreated = get(currentCompo, ['isTemporary'], false);\n    const hasComponentBeenModified = !isEqual(currentCompo, initialCompo);\n\n    return hasComponentBeenCreated || hasComponentBeenModified;\n  });\n\n  return makeUnique(componentUIDsToReturn);\n};\n\nconst formatComponent = (component, mainDataUID, isCreatingData = false) => {\n  const formattedAttributes = formatAttributes(\n    get(component, 'schema.attributes', {}),\n    mainDataUID,\n    isCreatingData,\n    true\n  );\n\n  // Set tmpUID if the component has just been created\n  // Keep the uid if the component already exists\n  const compoUID = get(component, 'isTemporary', false)\n    ? { tmpUID: component.uid }\n    : { uid: component.uid };\n\n  const formattedComponent = Object.assign(\n    {},\n    compoUID,\n    { category: component.category },\n    // Omit the attributes since we want to format them\n    omit(component.schema, 'attributes'),\n    // Add the formatted attributes\n    { attributes: formattedAttributes }\n  );\n\n  return formattedComponent;\n};\n\nconst formatMainDataType = (data, isComponent = false) => {\n  const isCreatingData = get(data, 'isTemporary', false);\n  const mainDataUID = get(data, 'uid', null);\n\n  const formattedAttributes = formatAttributes(\n    get(data, 'schema.attributes', {}),\n    mainDataUID,\n    isCreatingData,\n    false\n  );\n  const initObj = isComponent ? { category: get(data, 'category', '') } : {};\n\n  const formattedContentType = Object.assign(initObj, omit(data.schema, 'attributes'), {\n    attributes: formattedAttributes,\n  });\n\n  delete formattedContentType.uid;\n  delete formattedContentType.isTemporary;\n  delete formattedContentType.visible;\n  delete formattedContentType.restrictRelationsTo;\n\n  return formattedContentType;\n};\n\n/**\n *\n * @param {Object} attributes\n * @param {String} mainDataUID uid of the main data type\n * @param {Boolean} isCreatingMainData\n * @param {Boolean} isComponent\n */\nconst formatAttributes = (attributes, mainDataUID, isCreatingMainData, isComponent) => {\n  return Object.keys(attributes).reduce((acc, current) => {\n    const currentAttribute = get(attributes, current, {});\n    const hasARelationWithMainDataUID = currentAttribute.target === mainDataUID;\n    const isRelationType = has(currentAttribute, 'nature');\n    const currentTargetAttribute = get(currentAttribute, 'targetAttribute', null);\n\n    if (!hasARelationWithMainDataUID) {\n      if (isRelationType) {\n        const relationAttr = Object.assign({}, currentAttribute, {\n          targetAttribute: formatRelationTargetAttribute(currentTargetAttribute),\n        });\n\n        acc[current] = removeNullKeys(relationAttr);\n      } else {\n        acc[current] = removeNullKeys(currentAttribute);\n      }\n    }\n\n    if (hasARelationWithMainDataUID) {\n      let target = currentAttribute.target;\n\n      if (isCreatingMainData) {\n        target = isComponent ? '__contentType__' : '__self__';\n      }\n\n      const formattedRelationAttribute = Object.assign({}, currentAttribute, {\n        target,\n        targetAttribute: formatRelationTargetAttribute(currentTargetAttribute),\n      });\n\n      acc[current] = removeNullKeys(formattedRelationAttribute);\n    }\n\n    return acc;\n  }, {});\n};\n\nconst formatRelationTargetAttribute = targetAttribute =>\n  targetAttribute === '-' ? null : targetAttribute;\n\nconst removeNullKeys = obj =>\n  Object.keys(obj).reduce((acc, current) => {\n    if (obj[current] !== null && current !== 'plugin') {\n      acc[current] = obj[current];\n    }\n\n    return acc;\n  }, {});\n\nconst getComponentsToPost = (\n  allComponents,\n  initialComponents,\n  mainDataUID,\n  isCreatingData = false\n) => {\n  const componentsToFormat = getCreatedAndModifiedComponents(allComponents, initialComponents);\n  const formattedComponents = componentsToFormat.map(compoUID => {\n    const currentCompo = get(allComponents, compoUID, {});\n    const formattedComponent = formatComponent(currentCompo, mainDataUID, isCreatingData);\n\n    return formattedComponent;\n  });\n\n  return formattedComponents;\n};\n\nconst sortContentType = types =>\n  sortBy(\n    Object.keys(types)\n      .map(uid => ({\n        visible: types[uid].schema.visible,\n        name: uid,\n        title: types[uid].schema.name,\n        plugin: types[uid].plugin || null,\n        uid,\n        to: `/plugins/${pluginId}/content-types/${uid}`,\n        kind: types[uid].schema.kind,\n        restrictRelationsTo: types[uid].schema.restrictRelationsTo,\n      }))\n      .filter(obj => obj !== null),\n    obj => camelCase(obj.title)\n  );\n\nexport {\n  formatComponent,\n  getComponentsToPost,\n  getCreatedAndModifiedComponents,\n  formatMainDataType,\n  sortContentType,\n};\n"]},"metadata":{},"sourceType":"script"}