{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _utils = require(\"../../utils\");\n\nvar _LocaleList = _interopRequireDefault(require(\"../../components/LocaleList\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar LocaleSettingsPage = function LocaleSettingsPage(_ref) {\n  var canReadLocale = _ref.canReadLocale,\n      canCreateLocale = _ref.canCreateLocale,\n      canDeleteLocale = _ref.canDeleteLocale,\n      canUpdateLocale = _ref.canUpdateLocale;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isOpenedCreateModal = _useState2[0],\n      setIsOpenedCreateModal = _useState2[1];\n\n  var handleToggleModalCreate = canCreateLocale ? function () {\n    return setIsOpenedCreateModal(function (s) {\n      return !s;\n    });\n  } : undefined;\n  var actions = [{\n    label: formatMessage({\n      id: (0, _utils.getTrad)('Settings.list.actions.add')\n    }),\n    onClick: handleToggleModalCreate,\n    color: 'primary',\n    type: 'button',\n    icon: true,\n    Component: function Component(props) {\n      return canCreateLocale ? /*#__PURE__*/_react[\"default\"].createElement(_core.Button, props) : null;\n    },\n    style: {\n      paddingLeft: 15,\n      paddingRight: 15\n    }\n  }];\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_custom.Header, {\n    title: {\n      label: formatMessage({\n        id: (0, _utils.getTrad)('plugin.name')\n      })\n    },\n    content: formatMessage({\n      id: (0, _utils.getTrad)('Settings.list.description')\n    }),\n    actions: actions\n  }), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.BaselineAlignment, {\n    top: true,\n    size: \"3px\"\n  }), canReadLocale ? /*#__PURE__*/_react[\"default\"].createElement(_LocaleList[\"default\"], {\n    canUpdateLocale: canUpdateLocale,\n    canDeleteLocale: canDeleteLocale,\n    onToggleCreateModal: handleToggleModalCreate,\n    isCreating: isOpenedCreateModal\n  }) : null);\n};\n\nLocaleSettingsPage.propTypes = {\n  canReadLocale: _propTypes[\"default\"].bool.isRequired,\n  canCreateLocale: _propTypes[\"default\"].bool.isRequired,\n  canUpdateLocale: _propTypes[\"default\"].bool.isRequired,\n  canDeleteLocale: _propTypes[\"default\"].bool.isRequired\n};\nvar _default = LocaleSettingsPage;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/containers/SettingsPage/LocaleSettingsPage.js"],"names":["LocaleSettingsPage","canReadLocale","canCreateLocale","canDeleteLocale","canUpdateLocale","formatMessage","isOpenedCreateModal","setIsOpenedCreateModal","handleToggleModalCreate","s","undefined","actions","label","id","onClick","color","type","icon","Component","props","style","paddingLeft","paddingRight","propTypes","PropTypes","bool","isRequired"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,OAKrB;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,eAGI,QAHJA,eAGI;AAAA,MAFJC,eAEI,QAFJA,eAEI;AAAA,MADJC,eACI,QADJA,eACI;;AACJ,iBAA0B,yBAA1B;AAAA,MAAQC,aAAR,YAAQA,aAAR;;AACA,kBAAsD,qBAAS,KAAT,CAAtD;AAAA;AAAA,MAAOC,mBAAP;AAAA,MAA4BC,sBAA5B;;AAEA,MAAMC,uBAAuB,GAAGN,eAAe,GAC3C;AAAA,WAAMK,sBAAsB,CAAC,UAAAE,CAAC;AAAA,aAAI,CAACA,CAAL;AAAA,KAAF,CAA5B;AAAA,GAD2C,GAE3CC,SAFJ;AAIA,MAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAEP,aAAa,CAAC;AAAEQ,MAAAA,EAAE,EAAE,oBAAQ,2BAAR;AAAN,KAAD,CADtB;AAEEC,IAAAA,OAAO,EAAEN,uBAFX;AAGEO,IAAAA,KAAK,EAAE,SAHT;AAIEC,IAAAA,IAAI,EAAE,QAJR;AAKEC,IAAAA,IAAI,EAAE,IALR;AAMEC,IAAAA,SAAS,EAAE,mBAAAC,KAAK;AAAA,aAAKjB,eAAe,gBAAG,gCAAC,YAAD,EAAYiB,KAAZ,CAAH,GAA2B,IAA/C;AAAA,KANlB;AAOEC,IAAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAE,EADR;AAELC,MAAAA,YAAY,EAAE;AAFT;AAPT,GADc,CAAhB;AAeA,sBACE,+EACE,gCAAC,cAAD;AACE,IAAA,KAAK,EAAE;AACLV,MAAAA,KAAK,EAAEP,aAAa,CAAC;AAAEQ,QAAAA,EAAE,EAAE,oBAAQ,aAAR;AAAN,OAAD;AADf,KADT;AAIE,IAAA,OAAO,EAAER,aAAa,CAAC;AAAEQ,MAAAA,EAAE,EAAE,oBAAQ,2BAAR;AAAN,KAAD,CAJxB;AAKE,IAAA,OAAO,EAAEF;AALX,IADF,eASE,gCAAC,qCAAD;AAAmB,IAAA,GAAG,MAAtB;AAAuB,IAAA,IAAI,EAAC;AAA5B,IATF,EAWGV,aAAa,gBACZ,gCAAC,sBAAD;AACE,IAAA,eAAe,EAAEG,eADnB;AAEE,IAAA,eAAe,EAAED,eAFnB;AAGE,IAAA,mBAAmB,EAAEK,uBAHvB;AAIE,IAAA,UAAU,EAAEF;AAJd,IADY,GAOV,IAlBN,CADF;AAsBD,CAlDD;;AAoDAN,kBAAkB,CAACuB,SAAnB,GAA+B;AAC7BtB,EAAAA,aAAa,EAAEuB,sBAAUC,IAAV,CAAeC,UADD;AAE7BxB,EAAAA,eAAe,EAAEsB,sBAAUC,IAAV,CAAeC,UAFH;AAG7BtB,EAAAA,eAAe,EAAEoB,sBAAUC,IAAV,CAAeC,UAHH;AAI7BvB,EAAAA,eAAe,EAAEqB,sBAAUC,IAAV,CAAeC;AAJH,CAA/B;eAOe1B,kB","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { BaselineAlignment } from 'strapi-helper-plugin';\nimport { Header } from '@buffetjs/custom';\nimport { Button } from '@buffetjs/core';\nimport { getTrad } from '../../utils';\nimport LocaleList from '../../components/LocaleList';\n\nconst LocaleSettingsPage = ({\n  canReadLocale,\n  canCreateLocale,\n  canDeleteLocale,\n  canUpdateLocale,\n}) => {\n  const { formatMessage } = useIntl();\n  const [isOpenedCreateModal, setIsOpenedCreateModal] = useState(false);\n\n  const handleToggleModalCreate = canCreateLocale\n    ? () => setIsOpenedCreateModal(s => !s)\n    : undefined;\n\n  const actions = [\n    {\n      label: formatMessage({ id: getTrad('Settings.list.actions.add') }),\n      onClick: handleToggleModalCreate,\n      color: 'primary',\n      type: 'button',\n      icon: true,\n      Component: props => (canCreateLocale ? <Button {...props} /> : null),\n      style: {\n        paddingLeft: 15,\n        paddingRight: 15,\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Header\n        title={{\n          label: formatMessage({ id: getTrad('plugin.name') }),\n        }}\n        content={formatMessage({ id: getTrad('Settings.list.description') })}\n        actions={actions}\n      />\n\n      <BaselineAlignment top size=\"3px\" />\n\n      {canReadLocale ? (\n        <LocaleList\n          canUpdateLocale={canUpdateLocale}\n          canDeleteLocale={canDeleteLocale}\n          onToggleCreateModal={handleToggleModalCreate}\n          isCreating={isOpenedCreateModal}\n        />\n      ) : null}\n    </>\n  );\n};\n\nLocaleSettingsPage.propTypes = {\n  canReadLocale: PropTypes.bool.isRequired,\n  canCreateLocale: PropTypes.bool.isRequired,\n  canUpdateLocale: PropTypes.bool.isRequired,\n  canDeleteLocale: PropTypes.bool.isRequired,\n};\n\nexport default LocaleSettingsPage;\n"]},"metadata":{},"sourceType":"script"}