{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _ConditionsSelect = _interopRequireDefault(require(\"../ConditionsSelect\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nvar ActionRow = function ActionRow(_ref) {\n  var arrayOfOptionsGroupedByCategory = _ref.arrayOfOptionsGroupedByCategory,\n      isFormDisabled = _ref.isFormDisabled,\n      isGrey = _ref.isGrey,\n      label = _ref.label,\n      name = _ref.name,\n      onCategoryChange = _ref.onCategoryChange,\n      onChange = _ref.onChange,\n      value = _ref.value;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], {\n    isGrey: isGrey\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    style: {\n      width: 200\n    },\n    top: true,\n    left: true,\n    right: true,\n    bottom: true,\n    size: \"sm\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    lineHeight: \"19px\",\n    color: \"grey\",\n    fontSize: \"xs\",\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\"\n  }, formatMessage({\n    id: 'Settings.permissions.conditions.can'\n  }), \"\\xA0\"), /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    title: label,\n    lineHeight: \"19px\",\n    fontWeight: \"bold\",\n    fontSize: \"xs\",\n    textTransform: \"uppercase\",\n    color: \"mediumBlue\",\n    style: {\n      maxWidth: '60%'\n    },\n    ellipsis: true\n  }, label), /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    lineHeight: \"19px\",\n    color: \"grey\",\n    fontSize: \"xs\",\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\"\n  }, \"\\xA0\", formatMessage({\n    id: 'Settings.permissions.conditions.when'\n  })))), /*#__PURE__*/_react[\"default\"].createElement(_ConditionsSelect[\"default\"], {\n    arrayOfOptionsGroupedByCategory: arrayOfOptionsGroupedByCategory,\n    name: name,\n    isFormDisabled: isFormDisabled,\n    onCategoryChange: onCategoryChange,\n    onChange: onChange,\n    value: value\n  }));\n};\n\nActionRow.propTypes = {\n  arrayOfOptionsGroupedByCategory: _propTypes[\"default\"].array.isRequired,\n  isFormDisabled: _propTypes[\"default\"].bool.isRequired,\n  isGrey: _propTypes[\"default\"].bool.isRequired,\n  label: _propTypes[\"default\"].string.isRequired,\n  name: _propTypes[\"default\"].string.isRequired,\n  value: _propTypes[\"default\"].object.isRequired,\n  onCategoryChange: _propTypes[\"default\"].func.isRequired,\n  onChange: _propTypes[\"default\"].func.isRequired\n};\nvar _default = ActionRow;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/components/Roles/ConditionsModal/ActionRow/index.js"],"names":["ActionRow","arrayOfOptionsGroupedByCategory","isFormDisabled","isGrey","label","name","onCategoryChange","onChange","value","formatMessage","width","id","maxWidth","propTypes","PropTypes","array","isRequired","bool","string","object","func"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OASZ;AAAA,MARJC,+BAQI,QARJA,+BAQI;AAAA,MAPJC,cAOI,QAPJA,cAOI;AAAA,MANJC,MAMI,QANJA,MAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,gBAGI,QAHJA,gBAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,KACI,QADJA,KACI;;AACJ,iBAA0B,yBAA1B;AAAA,MAAQC,aAAR,YAAQA,aAAR;;AAEA,sBACE,gCAAC,mBAAD;AAAS,IAAA,MAAM,EAAEN;AAAjB,kBACE,gCAAC,YAAD;AAAQ,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAAf;AAA+B,IAAA,GAAG,MAAlC;AAAmC,IAAA,IAAI,MAAvC;AAAwC,IAAA,KAAK,MAA7C;AAA8C,IAAA,MAAM,MAApD;AAAqD,IAAA,IAAI,EAAC;AAA1D,kBACE,gCAAC,UAAD,qBACE,gCAAC,UAAD;AACE,IAAA,UAAU,EAAC,MADb;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,QAAQ,EAAC,IAHX;AAIE,IAAA,UAAU,EAAC,MAJb;AAKE,IAAA,aAAa,EAAC;AALhB,KAOGD,aAAa,CAAC;AACbE,IAAAA,EAAE,EAAE;AADS,GAAD,CAPhB,SADF,eAaE,gCAAC,UAAD;AACE,IAAA,KAAK,EAAEP,KADT;AAEE,IAAA,UAAU,EAAC,MAFb;AAGE,IAAA,UAAU,EAAC,MAHb;AAIE,IAAA,QAAQ,EAAC,IAJX;AAKE,IAAA,aAAa,EAAC,WALhB;AAME,IAAA,KAAK,EAAC,YANR;AAOE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE;AAAZ,KAPT;AAQE,IAAA,QAAQ;AARV,KAUGR,KAVH,CAbF,eAyBE,gCAAC,UAAD;AACE,IAAA,UAAU,EAAC,MADb;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,QAAQ,EAAC,IAHX;AAIE,IAAA,UAAU,EAAC,MAJb;AAKE,IAAA,aAAa,EAAC;AALhB,aAQGK,aAAa,CAAC;AACbE,IAAAA,EAAE,EAAE;AADS,GAAD,CARhB,CAzBF,CADF,CADF,eAyCE,gCAAC,4BAAD;AACE,IAAA,+BAA+B,EAAEV,+BADnC;AAEE,IAAA,IAAI,EAAEI,IAFR;AAGE,IAAA,cAAc,EAAEH,cAHlB;AAIE,IAAA,gBAAgB,EAAEI,gBAJpB;AAKE,IAAA,QAAQ,EAAEC,QALZ;AAME,IAAA,KAAK,EAAEC;AANT,IAzCF,CADF;AAoDD,CAhED;;AAkEAR,SAAS,CAACa,SAAV,GAAsB;AACpBZ,EAAAA,+BAA+B,EAAEa,sBAAUC,KAAV,CAAgBC,UAD7B;AAEpBd,EAAAA,cAAc,EAAEY,sBAAUG,IAAV,CAAeD,UAFX;AAGpBb,EAAAA,MAAM,EAAEW,sBAAUG,IAAV,CAAeD,UAHH;AAIpBZ,EAAAA,KAAK,EAAEU,sBAAUI,MAAV,CAAiBF,UAJJ;AAKpBX,EAAAA,IAAI,EAAES,sBAAUI,MAAV,CAAiBF,UALH;AAMpBR,EAAAA,KAAK,EAAEM,sBAAUK,MAAV,CAAiBH,UANJ;AAOpBV,EAAAA,gBAAgB,EAAEQ,sBAAUM,IAAV,CAAeJ,UAPb;AAQpBT,EAAAA,QAAQ,EAAEO,sBAAUM,IAAV,CAAeJ;AARL,CAAtB;eAUehB,S","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Padded, Flex } from '@buffetjs/core';\nimport { useIntl } from 'react-intl';\n\nimport ConditionsSelect from '../ConditionsSelect';\nimport Wrapper from './Wrapper';\n\nconst ActionRow = ({\n  arrayOfOptionsGroupedByCategory,\n  isFormDisabled,\n  isGrey,\n  label,\n  name,\n  onCategoryChange,\n  onChange,\n  value,\n}) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Wrapper isGrey={isGrey}>\n      <Padded style={{ width: 200 }} top left right bottom size=\"sm\">\n        <Flex>\n          <Text\n            lineHeight=\"19px\"\n            color=\"grey\"\n            fontSize=\"xs\"\n            fontWeight=\"bold\"\n            textTransform=\"uppercase\"\n          >\n            {formatMessage({\n              id: 'Settings.permissions.conditions.can',\n            })}\n            &nbsp;\n          </Text>\n          <Text\n            title={label}\n            lineHeight=\"19px\"\n            fontWeight=\"bold\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            color=\"mediumBlue\"\n            style={{ maxWidth: '60%' }}\n            ellipsis\n          >\n            {label}\n          </Text>\n          <Text\n            lineHeight=\"19px\"\n            color=\"grey\"\n            fontSize=\"xs\"\n            fontWeight=\"bold\"\n            textTransform=\"uppercase\"\n          >\n            &nbsp;\n            {formatMessage({\n              id: 'Settings.permissions.conditions.when',\n            })}\n          </Text>\n        </Flex>\n      </Padded>\n      <ConditionsSelect\n        arrayOfOptionsGroupedByCategory={arrayOfOptionsGroupedByCategory}\n        name={name}\n        isFormDisabled={isFormDisabled}\n        onCategoryChange={onCategoryChange}\n        onChange={onChange}\n        value={value}\n      />\n    </Wrapper>\n  );\n};\n\nActionRow.propTypes = {\n  arrayOfOptionsGroupedByCategory: PropTypes.array.isRequired,\n  isFormDisabled: PropTypes.bool.isRequired,\n  isGrey: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.object.isRequired,\n  onCategoryChange: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default ActionRow;\n"]},"metadata":{},"sourceType":"script"}