{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _lodash = require(\"lodash\");\n\nvar canEditContentType = function canEditContentType(data, modifiedData) {\n  var kind = (0, _lodash.get)(data, ['contentType', 'schema', 'kind'], ''); // if kind isn't modified or content type is a single type, there is no need to check attributes.\n\n  if (kind === 'singleType' || kind === modifiedData.kind) {\n    return true;\n  }\n\n  var contentTypeAttributes = (0, _lodash.get)(data, ['contentType', 'schema', 'attributes'], '');\n  var relationAttributes = Object.values(contentTypeAttributes).filter(function (_ref) {\n    var nature = _ref.nature;\n    return nature && !['oneWay', 'manyWay'].includes(nature);\n  });\n  return relationAttributes.length === 0;\n};\n\nvar _default = canEditContentType;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-type-builder/admin/src/containers/FormModal/utils/canEditContentType.js"],"names":["canEditContentType","data","modifiedData","kind","contentTypeAttributes","relationAttributes","Object","values","filter","nature","includes","length"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAOC,YAAP,EAAwB;AACjD,MAAMC,IAAI,GAAG,iBAAIF,IAAJ,EAAU,CAAC,aAAD,EAAgB,QAAhB,EAA0B,MAA1B,CAAV,EAA6C,EAA7C,CAAb,CADiD,CAGjD;;AACA,MAAIE,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAKD,YAAY,CAACC,IAAnD,EAAyD;AACvD,WAAO,IAAP;AACD;;AAED,MAAMC,qBAAqB,GAAG,iBAAIH,IAAJ,EAAU,CAAC,aAAD,EAAgB,QAAhB,EAA0B,YAA1B,CAAV,EAAmD,EAAnD,CAA9B;AACA,MAAMI,kBAAkB,GAAGC,MAAM,CAACC,MAAP,CAAcH,qBAAd,EAAqCI,MAArC,CACzB;AAAA,QAAGC,MAAH,QAAGA,MAAH;AAAA,WAAgBA,MAAM,IAAI,CAAC,CAAC,QAAD,EAAW,SAAX,EAAsBC,QAAtB,CAA+BD,MAA/B,CAA3B;AAAA,GADyB,CAA3B;AAIA,SAAOJ,kBAAkB,CAACM,MAAnB,KAA8B,CAArC;AACD,CAdD;;eAgBeX,kB","sourcesContent":["import { get } from 'lodash';\n\nconst canEditContentType = (data, modifiedData) => {\n  const kind = get(data, ['contentType', 'schema', 'kind'], '');\n\n  // if kind isn't modified or content type is a single type, there is no need to check attributes.\n  if (kind === 'singleType' || kind === modifiedData.kind) {\n    return true;\n  }\n\n  const contentTypeAttributes = get(data, ['contentType', 'schema', 'attributes'], '');\n  const relationAttributes = Object.values(contentTypeAttributes).filter(\n    ({ nature }) => nature && !['oneWay', 'manyWay'].includes(nature)\n  );\n\n  return relationAttributes.length === 0;\n};\n\nexport default canEditContentType;\n"]},"metadata":{},"sourceType":"script"}