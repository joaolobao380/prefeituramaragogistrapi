{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _react = require(\"react\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _constants = require(\"../constants\");\n\nvar fetchLocalesList = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n    var data;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return (0, _strapiHelperPlugin.request)('/i18n/locales', {\n              method: 'GET'\n            });\n\n          case 3:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            strapi.notification.toggle({\n              type: 'warning',\n              message: {\n                id: 'notification.error'\n              }\n            });\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function fetchLocalesList() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar useLocales = function useLocales() {\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var locales = (0, _reactRedux.useSelector)(function (state) {\n    return state.get('i18n_locales').locales;\n  });\n  var isLoading = (0, _reactRedux.useSelector)(function (state) {\n    return state.get('i18n_locales').isLoading;\n  });\n  (0, _react.useEffect)(function () {\n    fetchLocalesList().then(function (locales) {\n      return dispatch({\n        type: _constants.RESOLVE_LOCALES,\n        locales: locales\n      });\n    });\n  }, [dispatch]);\n  return {\n    locales: locales,\n    isLoading: isLoading\n  };\n};\n\nvar _default = useLocales;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/hooks/useLocales/index.js"],"names":["fetchLocalesList","method","data","strapi","notification","toggle","type","message","id","useLocales","dispatch","locales","state","get","isLoading","then","RESOLVE_LOCALES"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,gBAAgB;AAAA,2FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEF,iCAAQ,eAAR,EAAyB;AAC1CC,cAAAA,MAAM,EAAE;AADkC,aAAzB,CAFE;;AAAA;AAEfC,YAAAA,IAFe;AAAA,6CAMdA,IANc;;AAAA;AAAA;AAAA;AAQrBC,YAAAA,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2B;AACzBC,cAAAA,IAAI,EAAE,SADmB;AAEzBC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,EAAE,EAAE;AAAN;AAFgB,aAA3B;AARqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBR,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;AAiBA,IAAMS,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,QAAQ,GAAG,8BAAjB;AACA,MAAMC,OAAO,GAAG,6BAAY,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,GAAN,CAAU,cAAV,EAA0BF,OAA9B;AAAA,GAAjB,CAAhB;AACA,MAAMG,SAAS,GAAG,6BAAY,UAAAF,KAAK;AAAA,WAAIA,KAAK,CAACC,GAAN,CAAU,cAAV,EAA0BC,SAA9B;AAAA,GAAjB,CAAlB;AAEA,wBAAU,YAAM;AACdd,IAAAA,gBAAgB,GAAGe,IAAnB,CAAwB,UAAAJ,OAAO;AAAA,aAAID,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAEU,0BAAR;AAAyBL,QAAAA,OAAO,EAAPA;AAAzB,OAAD,CAAZ;AAAA,KAA/B;AACD,GAFD,EAEG,CAACD,QAAD,CAFH;AAIA,SAAO;AAAEC,IAAAA,OAAO,EAAPA,OAAF;AAAWG,IAAAA,SAAS,EAATA;AAAX,GAAP;AACD,CAVD;;eAYeL,U","sourcesContent":["import { useEffect } from 'react';\nimport { request } from 'strapi-helper-plugin';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RESOLVE_LOCALES } from '../constants';\n\nconst fetchLocalesList = async () => {\n  try {\n    const data = await request('/i18n/locales', {\n      method: 'GET',\n    });\n\n    return data;\n  } catch (e) {\n    strapi.notification.toggle({\n      type: 'warning',\n      message: { id: 'notification.error' },\n    });\n\n    return e;\n  }\n};\n\nconst useLocales = () => {\n  const dispatch = useDispatch();\n  const locales = useSelector(state => state.get('i18n_locales').locales);\n  const isLoading = useSelector(state => state.get('i18n_locales').isLoading);\n\n  useEffect(() => {\n    fetchLocalesList().then(locales => dispatch({ type: RESOLVE_LOCALES, locales }));\n  }, [dispatch]);\n\n  return { locales, isLoading };\n};\n\nexport default useLocales;\n"]},"metadata":{},"sourceType":"script"}