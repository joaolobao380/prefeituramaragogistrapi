{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialState = exports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _immutable = require(\"immutable\");\n\nvar initialState = (0, _immutable.fromJS)({\n  labelForm: {},\n  labelToEdit: '',\n  initialData: {},\n  modifiedData: {},\n  status: 'resolved'\n});\nexports.initialState = initialState;\n\nvar reducer = function reducer(state, action) {\n  var layoutPath = ['modifiedData', 'layouts', 'list'];\n\n  switch (action.type) {\n    case 'ADD_FIELD':\n      return state.updateIn(layoutPath, function (list) {\n        return list.push(action.item);\n      });\n\n    case 'MOVE_FIELD':\n      return state.updateIn(['modifiedData', 'layouts', 'list'], function (list) {\n        return list[\"delete\"](action.originalIndex).insert(action.atIndex, list.get(action.originalIndex));\n      });\n\n    case 'ON_CHANGE':\n      return state.updateIn(['modifiedData'].concat((0, _toConsumableArray2[\"default\"])(action.keys.split('.'))), function () {\n        return action.value;\n      });\n\n    case 'ON_CHANGE_LABEL_METAS':\n      return state.updateIn(['labelForm', action.name], function () {\n        return action.value;\n      });\n\n    case 'ON_RESET':\n      return state.update('modifiedData', function () {\n        return state.get('initialData');\n      });\n\n    case 'REMOVE_FIELD':\n      {\n        var defaultSortByPath = ['modifiedData', 'settings', 'defaultSortBy'];\n        var defaultSortBy = state.getIn(defaultSortByPath);\n        var attrPath = ['modifiedData', 'layouts', 'list', action.index];\n        var attrToBeRemoved = state.getIn(attrPath);\n        var firstAttr = state.getIn(['modifiedData', 'layouts', 'list', 1]);\n        var firstAttrType = state.getIn(['modifiedData', 'attributes', firstAttr, 'type']);\n        var attrToSelect = firstAttrType !== 'media' && firstAttrType !== 'richtext' ? firstAttr : 'id';\n        return state.removeIn(['modifiedData', 'layouts', 'list', action.index]).updateIn(defaultSortByPath, function () {\n          if (attrToBeRemoved === defaultSortBy) {\n            return attrToSelect;\n          }\n\n          return defaultSortBy;\n        });\n      }\n\n    case 'SET_LABEL_TO_EDIT':\n      return state.update('labelToEdit', function () {\n        return action.labelToEdit;\n      }).updateIn(['labelForm', 'label'], function () {\n        return state.getIn(['modifiedData', 'metadatas', action.labelToEdit, 'list', 'label']);\n      }).updateIn(['labelForm', 'sortable'], function () {\n        return state.getIn(['modifiedData', 'metadatas', action.labelToEdit, 'list', 'sortable']);\n      });\n\n    case 'UNSET_LABEL_TO_EDIT':\n      return state.update('labelToEdit', function () {\n        return '';\n      }).update('labelForm', function () {\n        return (0, _immutable.fromJS)({});\n      });\n\n    case 'SUBMIT_LABEL_FORM':\n      {\n        var metaPath = ['modifiedData', 'metadatas', state.get('labelToEdit'), 'list'];\n        return state.updateIn([].concat(metaPath, ['label']), function () {\n          return state.getIn(['labelForm', 'label']);\n        }).updateIn([].concat(metaPath, ['sortable']), function () {\n          return state.getIn(['labelForm', 'sortable']);\n        });\n      }\n\n    case 'SUBMIT_SUCCEEDED':\n      return state.update('initialData', function () {\n        return state.get('modifiedData');\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar _default = reducer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/ListSettingsView/reducer.js"],"names":["initialState","labelForm","labelToEdit","initialData","modifiedData","status","reducer","state","action","layoutPath","type","updateIn","list","push","item","originalIndex","insert","atIndex","get","keys","split","value","name","update","defaultSortByPath","defaultSortBy","getIn","attrPath","index","attrToBeRemoved","firstAttr","firstAttrType","attrToSelect","removeIn","metaPath"],"mappings":"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","sourcesContent":["import { fromJS } from 'immutable';\n\nconst initialState = fromJS({\n  labelForm: {},\n  labelToEdit: '',\n  initialData: {},\n  modifiedData: {},\n  status: 'resolved',\n});\n\nconst reducer = (state, action) => {\n  const layoutPath = ['modifiedData', 'layouts', 'list'];\n\n  switch (action.type) {\n    case 'ADD_FIELD':\n      return state.updateIn(layoutPath, list => list.push(action.item));\n\n    case 'MOVE_FIELD':\n      return state.updateIn(['modifiedData', 'layouts', 'list'], list => {\n        return list\n          .delete(action.originalIndex)\n          .insert(action.atIndex, list.get(action.originalIndex));\n      });\n    case 'ON_CHANGE':\n      return state.updateIn(['modifiedData', ...action.keys.split('.')], () => action.value);\n    case 'ON_CHANGE_LABEL_METAS':\n      return state.updateIn(['labelForm', action.name], () => action.value);\n    case 'ON_RESET':\n      return state.update('modifiedData', () => state.get('initialData'));\n    case 'REMOVE_FIELD': {\n      const defaultSortByPath = ['modifiedData', 'settings', 'defaultSortBy'];\n      const defaultSortBy = state.getIn(defaultSortByPath);\n      const attrPath = ['modifiedData', 'layouts', 'list', action.index];\n      const attrToBeRemoved = state.getIn(attrPath);\n\n      const firstAttr = state.getIn(['modifiedData', 'layouts', 'list', 1]);\n      const firstAttrType = state.getIn(['modifiedData', 'attributes', firstAttr, 'type']);\n      const attrToSelect =\n        firstAttrType !== 'media' && firstAttrType !== 'richtext' ? firstAttr : 'id';\n\n      return state\n        .removeIn(['modifiedData', 'layouts', 'list', action.index])\n        .updateIn(defaultSortByPath, () => {\n          if (attrToBeRemoved === defaultSortBy) {\n            return attrToSelect;\n          }\n\n          return defaultSortBy;\n        });\n    }\n    case 'SET_LABEL_TO_EDIT':\n      return state\n        .update('labelToEdit', () => action.labelToEdit)\n        .updateIn(['labelForm', 'label'], () =>\n          state.getIn(['modifiedData', 'metadatas', action.labelToEdit, 'list', 'label'])\n        )\n        .updateIn(['labelForm', 'sortable'], () =>\n          state.getIn(['modifiedData', 'metadatas', action.labelToEdit, 'list', 'sortable'])\n        );\n    case 'UNSET_LABEL_TO_EDIT':\n      return state.update('labelToEdit', () => '').update('labelForm', () => fromJS({}));\n    case 'SUBMIT_LABEL_FORM': {\n      const metaPath = ['modifiedData', 'metadatas', state.get('labelToEdit'), 'list'];\n\n      return state\n        .updateIn([...metaPath, 'label'], () => state.getIn(['labelForm', 'label']))\n        .updateIn([...metaPath, 'sortable'], () => state.getIn(['labelForm', 'sortable']));\n    }\n    case 'SUBMIT_SUCCEEDED':\n      return state.update('initialData', () => state.get('modifiedData'));\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\nexport { initialState };\n"]},"metadata":{},"sourceType":"script"}