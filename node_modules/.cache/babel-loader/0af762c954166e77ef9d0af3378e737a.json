{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _HeaderSearch = _interopRequireDefault(require(\"../../components/HeaderSearch\"));\n\nvar _PageTitle = _interopRequireDefault(require(\"../../components/PageTitle\"));\n\nvar _hooks = require(\"../../hooks\");\n\nvar _utils = require(\"../../utils\");\n\nvar _SettingsHeaderSearchContextProvider = _interopRequireDefault(require(\"../SettingsHeaderSearchContextProvider\"));\n\nvar _components = require(\"./components\");\n\nvar _utils2 = require(\"./utils\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n *\n * SettingsPage\n *\n */\n// NOTE TO PLUGINS DEVELOPERS:\n// If you modify this file you also need to update the documentation accordingly\n// Here's the file: strapi/docs/3.0.0-beta.x/plugin-development/frontend-settings-api.md\n// IF THE DOC IS NOT UPDATED THE PULL REQUEST WILL NOT BE MERGED\nfunction SettingsPage() {\n  var _useParams = (0, _reactRouterDom.useParams)(),\n      settingId = _useParams.settingId;\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      goBack = _useHistory.goBack;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      settingsBaseURL = _useGlobalContext.settingsBaseURL,\n      plugins = _useGlobalContext.plugins;\n\n  var _useState = (0, _react.useState)({\n    show: false,\n    label: ''\n  }),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      headerSearchState = _useState2[0],\n      setShowHeaderSearchState = _useState2[1];\n\n  var _useSettingsMenu = (0, _hooks.useSettingsMenu)(),\n      isLoading = _useSettingsMenu.isLoading,\n      menu = _useSettingsMenu.menu;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var pluginsGlobalLinks = (0, _react.useMemo)(function () {\n    return (0, _utils.retrieveGlobalLinks)(plugins);\n  }, [plugins]);\n  var appRoutes = (0, _react.useMemo)(function () {\n    return (0, _utils2.makeUniqueRoutes)(_utils2.routes.map(function (_ref) {\n      var to = _ref.to,\n          Component = _ref.Component,\n          exact = _ref.exact;\n      return (0, _utils2.createRoute)(Component, to, exact);\n    }));\n  }, []); // Create all the <Route /> that needs to be created by the plugins\n  // For instance the upload plugin needs to create a <Route />\n\n  var globalSectionCreatedRoutes = (0, _react.useMemo)(function () {\n    var routesToCreate = pluginsGlobalLinks.map(function (_ref2) {\n      var to = _ref2.to,\n          Component = _ref2.Component,\n          exact = _ref2.exact;\n      return (0, _utils2.createRoute)(Component, to, exact);\n    });\n    return (0, _utils2.makeUniqueRoutes)(routesToCreate);\n  }, [pluginsGlobalLinks]); // Same here for the plugins sections\n\n  var pluginsLinksRoutes = (0, _react.useMemo)(function () {\n    return (0, _utils2.createPluginsLinksRoutes)(menu);\n  }, [menu]); // Only display accessible sections\n\n  var filteredMenu = (0, _react.useMemo)(function () {\n    return (0, _utils2.getSectionsToDisplay)(menu);\n  }, [menu]);\n\n  var toggleHeaderSearch = function toggleHeaderSearch(label) {\n    return setShowHeaderSearchState(function (prev) {\n      if (prev.show) {\n        return {\n          show: false,\n          label: ''\n        };\n      }\n\n      return {\n        label: label,\n        show: true\n      };\n    });\n  }; // Since the useSettingsMenu hook can make API calls in order to check the links permissions\n  // We need to add a loading state to prevent redirecting the user while permissions are being checked\n\n\n  if (isLoading) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.LoadingIndicatorPage, null);\n  }\n\n  if (!settingId) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Redirect, {\n      to: \"\".concat(settingsBaseURL, \"/application-infos\")\n    });\n  }\n\n  var settingTitle = formatMessage({\n    id: 'app.components.LeftMenuLinkContainer.settings'\n  });\n  return /*#__PURE__*/_react[\"default\"].createElement(_SettingsHeaderSearchContextProvider[\"default\"], {\n    value: {\n      toggleHeaderSearch: toggleHeaderSearch\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_PageTitle[\"default\"], {\n    title: settingTitle\n  }), /*#__PURE__*/_react[\"default\"].createElement(_components.Wrapper, null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.BackHeader, {\n    onClick: goBack\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"row\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"col-md-3\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_components.MenuWrapper, null, /*#__PURE__*/_react[\"default\"].createElement(_components.ApplicationDetailLink, null), /*#__PURE__*/_react[\"default\"].createElement(_components.StyledLeftMenu, null, filteredMenu.map(function (item) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.LeftMenuList, (0, _extends2[\"default\"])({}, item, {\n      key: item.id\n    }));\n  })))), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"col-md-9\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Switch, null, appRoutes, globalSectionCreatedRoutes, pluginsLinksRoutes, /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Route, {\n    path: \"\".concat(settingsBaseURL, \"/:pluginId\"),\n    component: _components.SettingDispatcher\n  })))), headerSearchState.show && /*#__PURE__*/_react[\"default\"].createElement(_HeaderSearch[\"default\"], {\n    label: headerSearchState.label\n  })));\n}\n\nvar _default = /*#__PURE__*/(0, _react.memo)(SettingsPage);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/containers/SettingsPage/index.js"],"names":["SettingsPage","settingId","goBack","settingsBaseURL","plugins","show","label","headerSearchState","setShowHeaderSearchState","isLoading","menu","formatMessage","pluginsGlobalLinks","appRoutes","routes","map","to","Component","exact","globalSectionCreatedRoutes","routesToCreate","pluginsLinksRoutes","filteredMenu","toggleHeaderSearch","prev","settingTitle","id","item","SettingDispatcher"],"mappings":"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","sourcesContent":["/**\n *\n * SettingsPage\n *\n */\n\n// NOTE TO PLUGINS DEVELOPERS:\n// If you modify this file you also need to update the documentation accordingly\n// Here's the file: strapi/docs/3.0.0-beta.x/plugin-development/frontend-settings-api.md\n// IF THE DOC IS NOT UPDATED THE PULL REQUEST WILL NOT BE MERGED\n\nimport React, { memo, useMemo, useState } from 'react';\nimport {\n  BackHeader,\n  useGlobalContext,\n  LeftMenuList,\n  LoadingIndicatorPage,\n} from 'strapi-helper-plugin';\nimport { Switch, Redirect, Route, useParams, useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport HeaderSearch from '../../components/HeaderSearch';\nimport PageTitle from '../../components/PageTitle';\nimport { useSettingsMenu } from '../../hooks';\nimport { retrieveGlobalLinks } from '../../utils';\nimport SettingsSearchHeaderProvider from '../SettingsHeaderSearchContextProvider';\nimport {\n  ApplicationDetailLink,\n  MenuWrapper,\n  SettingDispatcher,\n  StyledLeftMenu,\n  Wrapper,\n} from './components';\n\nimport {\n  createRoute,\n  createPluginsLinksRoutes,\n  makeUniqueRoutes,\n  getSectionsToDisplay,\n  routes,\n} from './utils';\n\nfunction SettingsPage() {\n  const { settingId } = useParams();\n  const { goBack } = useHistory();\n  const { settingsBaseURL, plugins } = useGlobalContext();\n  const [headerSearchState, setShowHeaderSearchState] = useState({ show: false, label: '' });\n  const { isLoading, menu } = useSettingsMenu();\n  const { formatMessage } = useIntl();\n  const pluginsGlobalLinks = useMemo(() => retrieveGlobalLinks(plugins), [plugins]);\n\n  const appRoutes = useMemo(() => {\n    return makeUniqueRoutes(\n      routes.map(({ to, Component, exact }) => createRoute(Component, to, exact))\n    );\n  }, []);\n\n  // Create all the <Route /> that needs to be created by the plugins\n  // For instance the upload plugin needs to create a <Route />\n  const globalSectionCreatedRoutes = useMemo(() => {\n    const routesToCreate = pluginsGlobalLinks.map(({ to, Component, exact }) =>\n      createRoute(Component, to, exact)\n    );\n\n    return makeUniqueRoutes(routesToCreate);\n  }, [pluginsGlobalLinks]);\n\n  // Same here for the plugins sections\n  const pluginsLinksRoutes = useMemo(() => {\n    return createPluginsLinksRoutes(menu);\n  }, [menu]);\n\n  // Only display accessible sections\n  const filteredMenu = useMemo(() => getSectionsToDisplay(menu), [menu]);\n\n  const toggleHeaderSearch = label =>\n    setShowHeaderSearchState(prev => {\n      if (prev.show) {\n        return {\n          show: false,\n          label: '',\n        };\n      }\n\n      return { label, show: true };\n    });\n\n  // Since the useSettingsMenu hook can make API calls in order to check the links permissions\n  // We need to add a loading state to prevent redirecting the user while permissions are being checked\n  if (isLoading) {\n    return <LoadingIndicatorPage />;\n  }\n\n  if (!settingId) {\n    return <Redirect to={`${settingsBaseURL}/application-infos`} />;\n  }\n\n  const settingTitle = formatMessage({ id: 'app.components.LeftMenuLinkContainer.settings' });\n\n  return (\n    <SettingsSearchHeaderProvider value={{ toggleHeaderSearch }}>\n      <PageTitle title={settingTitle} />\n      <Wrapper>\n        <BackHeader onClick={goBack} />\n\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <MenuWrapper>\n              <ApplicationDetailLink />\n              <StyledLeftMenu>\n                {filteredMenu.map(item => {\n                  return <LeftMenuList {...item} key={item.id} />;\n                })}\n              </StyledLeftMenu>\n            </MenuWrapper>\n          </div>\n\n          <div className=\"col-md-9\">\n            <Switch>\n              {appRoutes}\n              {globalSectionCreatedRoutes}\n              {pluginsLinksRoutes}\n              <Route path={`${settingsBaseURL}/:pluginId`} component={SettingDispatcher} />\n            </Switch>\n          </div>\n        </div>\n        {headerSearchState.show && <HeaderSearch label={headerSearchState.label} />}\n      </Wrapper>\n    </SettingsSearchHeaderProvider>\n  );\n}\n\nexport default memo(SettingsPage);\n"]},"metadata":{},"sourceType":"script"}