{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _utils = require(\"../../utils\");\n\nvar _Cloud = _interopRequireDefault(require(\"../../icons/Cloud\"));\n\nvar _Label = _interopRequireDefault(require(\"./Label\"));\n\nvar _Input = _interopRequireDefault(require(\"../Input\"));\n\nvar _P = _interopRequireDefault(require(\"./P\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar InputFileModal = function InputFileModal(_ref) {\n  var name = _ref.name,\n      onChange = _ref.onChange;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isDragging = _useState2[0],\n      setIsDragging = _useState2[1];\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      formatMessage = _useGlobalContext.formatMessage;\n\n  var ref = /*#__PURE__*/(0, _react.createRef)();\n\n  var handleAllowDrop = function handleAllowDrop(e) {\n    return e.preventDefault();\n  };\n\n  var handleChange = function handleChange(_ref2) {\n    var files = _ref2.target.files;\n    onChange({\n      target: {\n        name: name,\n        value: files\n      }\n    });\n  };\n\n  var handleClick = function handleClick() {\n    ref.current.click();\n  };\n\n  var handleDragEnter = function handleDragEnter() {\n    setIsDragging(true);\n  };\n\n  var handleDragLeave = function handleDragLeave() {\n    setIsDragging(false);\n  };\n\n  var handleDrop = function handleDrop(e) {\n    e.preventDefault();\n    setIsDragging(false);\n    onChange({\n      target: {\n        name: name,\n        value: e.dataTransfer.files\n      }\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Label[\"default\"], {\n    htmlFor: name,\n    isDragging: isDragging,\n    onDragOver: handleAllowDrop,\n    onDragEnter: handleDragEnter,\n    onDrop: handleDrop\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Cloud[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_P[\"default\"], {\n    isDragging: isDragging\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"bold\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('input.label-bold')\n  }), \"\\xA0\"), /*#__PURE__*/_react[\"default\"].createElement(\"span\", null, formatMessage({\n    id: (0, _utils.getTrad)('input.label-normal')\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    type: \"button\",\n    id: \"button\",\n    name: \"button\",\n    color: \"primary\",\n    onClick: handleClick\n  }, formatMessage({\n    id: (0, _utils.getTrad)('input.button.label')\n  })), /*#__PURE__*/_react[\"default\"].createElement(_Input[\"default\"], {\n    ref: ref,\n    type: \"file\",\n    multiple: true,\n    name: name,\n    onChange: handleChange\n  }), isDragging && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"dragzone\",\n    onDragLeave: handleDragLeave\n  }));\n};\n\nInputFileModal.defaultProps = {\n  name: 'files',\n  onChange: function onChange() {}\n};\nInputFileModal.propTypes = {\n  name: _propTypes[\"default\"].string,\n  onChange: _propTypes[\"default\"].func\n};\nvar _default = InputFileModal;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/components/InputFileModal/index.js"],"names":["InputFileModal","name","onChange","isDragging","setIsDragging","formatMessage","ref","handleAllowDrop","e","preventDefault","handleChange","files","target","value","handleClick","current","click","handleDragEnter","handleDragLeave","handleDrop","dataTransfer","id","defaultProps","propTypes","PropTypes","string","func"],"mappings":"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","sourcesContent":["import React, { createRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@buffetjs/core';\nimport { useGlobalContext } from 'strapi-helper-plugin';\nimport { getTrad } from '../../utils';\nimport Cloud from '../../icons/Cloud';\nimport Label from './Label';\nimport Input from '../Input';\nimport P from './P';\n\nconst InputFileModal = ({ name, onChange }) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const { formatMessage } = useGlobalContext();\n  const ref = createRef();\n\n  const handleAllowDrop = e => e.preventDefault();\n\n  const handleChange = ({ target: { files } }) => {\n    onChange({ target: { name, value: files } });\n  };\n\n  const handleClick = () => {\n    ref.current.click();\n  };\n\n  const handleDragEnter = () => {\n    setIsDragging(true);\n  };\n\n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n\n    setIsDragging(false);\n    onChange({ target: { name, value: e.dataTransfer.files } });\n  };\n\n  return (\n    <Label\n      htmlFor={name}\n      isDragging={isDragging}\n      onDragOver={handleAllowDrop}\n      onDragEnter={handleDragEnter}\n      onDrop={handleDrop}\n    >\n      <Cloud />\n      <P isDragging={isDragging}>\n        <span className=\"bold\">{formatMessage({ id: getTrad('input.label-bold') })}&nbsp;</span>\n        <span>{formatMessage({ id: getTrad('input.label-normal') })}</span>\n      </P>\n      <Button type=\"button\" id=\"button\" name=\"button\" color=\"primary\" onClick={handleClick}>\n        {formatMessage({ id: getTrad('input.button.label') })}\n      </Button>\n      <Input ref={ref} type=\"file\" multiple name={name} onChange={handleChange} />\n      {isDragging && <div className=\"dragzone\" onDragLeave={handleDragLeave} />}\n    </Label>\n  );\n};\n\nInputFileModal.defaultProps = {\n  name: 'files',\n  onChange: () => {},\n};\n\nInputFileModal.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default InputFileModal;\n"]},"metadata":{},"sourceType":"script"}