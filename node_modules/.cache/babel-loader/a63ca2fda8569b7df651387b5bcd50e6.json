{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDnd = require(\"react-dnd\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDndHtml5Backend = require(\"react-dnd-html5-backend\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _utils = require(\"../../utils\");\n\nvar _CardBorder = _interopRequireDefault(require(\"../CardBorder\"));\n\nvar _CardImgWrapper = _interopRequireDefault(require(\"../CardImgWrapper\"));\n\nvar _CardPreview = _interopRequireDefault(require(\"../CardPreview\"));\n\nvar _CardErrorMessage = _interopRequireDefault(require(\"../CardErrorMessage\"));\n\nvar _FileInfos = _interopRequireDefault(require(\"../FileInfos\"));\n\nvar _CardTitle = _interopRequireDefault(require(\"../CardTitle\"));\n\nvar _Tag = _interopRequireDefault(require(\"../Tag\"));\n\nvar _CardWrapper = _interopRequireDefault(require(\"../CardWrapper\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar DraggableCard = function DraggableCard(_ref) {\n  var id = _ref.id,\n      checked = _ref.checked,\n      children = _ref.children,\n      errorMessage = _ref.errorMessage,\n      ext = _ref.ext,\n      hasError = _ref.hasError,\n      index = _ref.index,\n      isDraggable = _ref.isDraggable,\n      mime = _ref.mime,\n      moveAsset = _ref.moveAsset,\n      name = _ref.name,\n      onClick = _ref.onClick,\n      size = _ref.size,\n      type = _ref.type,\n      url = _ref.url,\n      withFileCaching = _ref.withFileCaching;\n  var ref = (0, _react.useRef)(null); // Adapted from https://react-dnd.github.io/react-dnd/examples/sortable/simple\n\n  var _useDrop = (0, _reactDnd.useDrop)({\n    accept: _utils.ItemTypes.MEDIA_CARD,\n    hover: function hover(item) {\n      if (!ref.current) {\n        return;\n      }\n\n      var dragIndex = item.index;\n      var hoverIndex = index; // Don't replace items with themselves\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      } // Directly move the asset for faster reorder\n      // It doing so makes lot of computations though\n\n\n      // Directly move the asset for faster reorder\n      // It doing so makes lot of computations though\n      moveAsset(dragIndex, hoverIndex); // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    }\n  }),\n      _useDrop2 = (0, _slicedToArray2[\"default\"])(_useDrop, 2),\n      drop = _useDrop2[1];\n\n  var fileSize = (0, _utils.formatBytes)(size, 0);\n  var fileType = mime || type;\n\n  var _useDrag = (0, _reactDnd.useDrag)({\n    item: {\n      type: _utils.ItemTypes.MEDIA_CARD,\n      id: id,\n      index: index,\n      checked: checked,\n      url: url,\n      fileType: fileType\n    },\n    canDrag: function canDrag() {\n      return isDraggable;\n    },\n    collect: function collect(monitor) {\n      return {\n        isDragging: monitor.isDragging()\n      };\n    }\n  }),\n      _useDrag2 = (0, _slicedToArray2[\"default\"])(_useDrag, 3),\n      isDragging = _useDrag2[0].isDragging,\n      drag = _useDrag2[1],\n      preview = _useDrag2[2]; // Remove the default preview when the item is being dragged\n  // The preview is handled by the DragLayer\n\n\n  (0, _react.useEffect)(function () {\n    preview((0, _reactDndHtml5Backend.getEmptyImage)(), {\n      captureDraggingState: true\n    });\n  }, [preview]);\n  var opacity = isDragging ? 0.2 : 1;\n\n  var handleClick = function handleClick() {\n    onClick(id);\n  };\n\n  drag(drop(ref));\n  return /*#__PURE__*/_react[\"default\"].createElement(_CardWrapper[\"default\"], {\n    onClick: handleClick,\n    isDraggable: isDraggable,\n    ref: ref,\n    style: {\n      opacity: opacity\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_CardImgWrapper[\"default\"], {\n    checked: checked,\n    small: true\n  }, /*#__PURE__*/_react[\"default\"].createElement(_CardPreview[\"default\"], {\n    extension: (0, _strapiHelperPlugin.getFileExtension)(ext),\n    hasError: hasError,\n    url: url,\n    type: fileType,\n    withFileCaching: withFileCaching\n  }), /*#__PURE__*/_react[\"default\"].createElement(_CardBorder[\"default\"], {\n    color: hasError ? 'orange' : 'mediumBlue',\n    shown: checked || hasError\n  }), children), /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(_CardTitle[\"default\"], null, name), /*#__PURE__*/_react[\"default\"].createElement(_Tag[\"default\"], {\n    label: (0, _utils.getType)(fileType)\n  })), /*#__PURE__*/_react[\"default\"].createElement(_FileInfos[\"default\"], {\n    extension: (0, _strapiHelperPlugin.getFileExtension)(ext),\n    size: fileSize\n  }), hasError && /*#__PURE__*/_react[\"default\"].createElement(_CardErrorMessage[\"default\"], null, errorMessage));\n};\n\nDraggableCard.defaultProps = {\n  checked: false,\n  children: null,\n  errorMessage: null,\n  ext: null,\n  id: null,\n  index: 0,\n  isDraggable: false,\n  hasError: false,\n  mime: null,\n  moveAsset: function moveAsset() {},\n  name: null,\n  onClick: function onClick() {},\n  size: 0,\n  type: null,\n  url: null,\n  withFileCaching: true\n};\nDraggableCard.propTypes = {\n  id: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n  checked: _propTypes[\"default\"].bool,\n  children: _propTypes[\"default\"].node,\n  errorMessage: _propTypes[\"default\"].string,\n  ext: _propTypes[\"default\"].string,\n  hasError: _propTypes[\"default\"].bool,\n  index: _propTypes[\"default\"].number,\n  isDraggable: _propTypes[\"default\"].bool,\n  mime: _propTypes[\"default\"].string,\n  moveAsset: _propTypes[\"default\"].func,\n  name: _propTypes[\"default\"].string,\n  onClick: _propTypes[\"default\"].func,\n  size: _propTypes[\"default\"].number,\n  type: _propTypes[\"default\"].string,\n  url: _propTypes[\"default\"].string,\n  withFileCaching: _propTypes[\"default\"].bool\n};\nvar _default = DraggableCard;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/components/SelectedAssets/DraggableCard.js"],"names":["DraggableCard","id","checked","children","errorMessage","ext","hasError","index","isDraggable","mime","moveAsset","name","onClick","size","type","url","withFileCaching","ref","accept","ItemTypes","MEDIA_CARD","hover","item","current","dragIndex","hoverIndex","drop","fileSize","fileType","canDrag","collect","monitor","isDragging","drag","preview","captureDraggingState","opacity","handleClick","defaultProps","propTypes","PropTypes","oneOfType","string","number","bool","node","func"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport PropTypes from 'prop-types';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { Flex } from '@buffetjs/core';\nimport { getFileExtension } from 'strapi-helper-plugin';\nimport { formatBytes, getType, ItemTypes } from '../../utils';\n\nimport Border from '../CardBorder';\nimport CardImgWrapper from '../CardImgWrapper';\nimport CardPreview from '../CardPreview';\nimport ErrorMessage from '../CardErrorMessage';\nimport FileInfos from '../FileInfos';\nimport Title from '../CardTitle';\nimport Tag from '../Tag';\nimport Wrapper from '../CardWrapper';\n\nconst DraggableCard = ({\n  id,\n  checked,\n  children,\n  errorMessage,\n  ext,\n  hasError,\n  index,\n  isDraggable,\n  mime,\n  moveAsset,\n  name,\n  onClick,\n  size,\n  type,\n  url,\n  withFileCaching,\n}) => {\n  const ref = useRef(null);\n  // Adapted from https://react-dnd.github.io/react-dnd/examples/sortable/simple\n  const [, drop] = useDrop({\n    accept: ItemTypes.MEDIA_CARD,\n    hover(item) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      // Directly move the asset for faster reorder\n      // It doing so makes lot of computations though\n      moveAsset(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    },\n  });\n\n  const fileSize = formatBytes(size, 0);\n  const fileType = mime || type;\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: { type: ItemTypes.MEDIA_CARD, id, index, checked, url, fileType },\n    canDrag: () => isDraggable,\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  // Remove the default preview when the item is being dragged\n  // The preview is handled by the DragLayer\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true });\n  }, [preview]);\n\n  const opacity = isDragging ? 0.2 : 1;\n\n  const handleClick = () => {\n    onClick(id);\n  };\n\n  drag(drop(ref));\n\n  return (\n    <Wrapper onClick={handleClick} isDraggable={isDraggable} ref={ref} style={{ opacity }}>\n      <CardImgWrapper checked={checked} small>\n        <CardPreview\n          extension={getFileExtension(ext)}\n          hasError={hasError}\n          url={url}\n          type={fileType}\n          withFileCaching={withFileCaching}\n        />\n        <Border color={hasError ? 'orange' : 'mediumBlue'} shown={checked || hasError} />\n        {children}\n      </CardImgWrapper>\n      <Flex>\n        <Title>{name}</Title>\n        <Tag label={getType(fileType)} />\n      </Flex>\n      <FileInfos extension={getFileExtension(ext)} size={fileSize} />\n      {hasError && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Wrapper>\n  );\n};\n\nDraggableCard.defaultProps = {\n  checked: false,\n  children: null,\n  errorMessage: null,\n  ext: null,\n  id: null,\n  index: 0,\n  isDraggable: false,\n  hasError: false,\n  mime: null,\n  moveAsset: () => {},\n  name: null,\n  onClick: () => {},\n  size: 0,\n  type: null,\n  url: null,\n  withFileCaching: true,\n};\n\nDraggableCard.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  checked: PropTypes.bool,\n  children: PropTypes.node,\n  errorMessage: PropTypes.string,\n  ext: PropTypes.string,\n  hasError: PropTypes.bool,\n  index: PropTypes.number,\n  isDraggable: PropTypes.bool,\n  mime: PropTypes.string,\n  moveAsset: PropTypes.func,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  size: PropTypes.number,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  withFileCaching: PropTypes.bool,\n};\n\nexport default DraggableCard;\n"]},"metadata":{},"sourceType":"script"}