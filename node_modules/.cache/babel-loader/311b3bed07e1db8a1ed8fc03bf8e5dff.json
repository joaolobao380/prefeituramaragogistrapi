{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _icons = require(\"@buffetjs/icons\");\n\nvar _styles = require(\"@buffetjs/styles\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactFontawesome = require(\"@fortawesome/react-fontawesome\");\n\nvar _utils = require(\"../../utils\");\n\nvar _Download = _interopRequireDefault(require(\"../../icons/Download\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar CardControl = function CardControl(_ref) {\n  var title = _ref.title,\n      color = _ref.color,\n      onClick = _ref.onClick,\n      small = _ref.small,\n      type = _ref.type,\n      iconStyle = _ref.iconStyle;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      formatMessage = _useGlobalContext.formatMessage;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      tooltipIsDisplayed = _useState2[0],\n      setTooltipIsDisplayed = _useState2[1];\n\n  var handleToggleTooltip = function handleToggleTooltip() {\n    setTooltipIsDisplayed(function (prev) {\n      return !prev;\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], {\n    onClick: onClick,\n    color: color,\n    type: type,\n    small: small,\n    onMouseEnter: handleToggleTooltip,\n    onMouseLeave: handleToggleTooltip,\n    \"data-for\": type,\n    \"data-tip\": formatMessage({\n      id: (0, _utils.getTrad)(\"control-card.\".concat(title))\n    })\n  }, type === 'pencil' && /*#__PURE__*/_react[\"default\"].createElement(_icons.Pencil, {\n    fill: color\n  }), type === 'plus' && /*#__PURE__*/_react[\"default\"].createElement(_icons.Plus, {\n    fill: color\n  }), type === 'download' && /*#__PURE__*/_react[\"default\"].createElement(_Download[\"default\"], {\n    fill: color\n  }), !['pencil', 'clear', 'plus', 'download'].includes(type) && /*#__PURE__*/_react[\"default\"].createElement(_reactFontawesome.FontAwesomeIcon, {\n    style: iconStyle,\n    icon: type\n  })), tooltipIsDisplayed && /*#__PURE__*/_react[\"default\"].createElement(_styles.Tooltip, {\n    id: type\n  }));\n};\n\nCardControl.defaultProps = {\n  color: '#b3b5b9',\n  iconStyle: null,\n  onClick: function onClick() {},\n  small: false,\n  type: 'pencil'\n};\nCardControl.propTypes = {\n  color: _propTypes[\"default\"].string,\n  iconStyle: _propTypes[\"default\"].object,\n  onClick: _propTypes[\"default\"].func,\n  small: _propTypes[\"default\"].bool,\n  type: _propTypes[\"default\"].string,\n  title: _propTypes[\"default\"].string.isRequired\n};\nvar _default = CardControl;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/components/CardControl/index.js"],"names":["CardControl","title","color","onClick","small","type","iconStyle","formatMessage","tooltipIsDisplayed","setTooltipIsDisplayed","handleToggleTooltip","prev","id","includes","defaultProps","propTypes","PropTypes","string","object","func","bool","isRequired"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAAuD;AAAA,MAApDC,KAAoD,QAApDA,KAAoD;AAAA,MAA7CC,KAA6C,QAA7CA,KAA6C;AAAA,MAAtCC,OAAsC,QAAtCA,OAAsC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AACzE,0BAA0B,2CAA1B;AAAA,MAAQC,aAAR,qBAAQA,aAAR;;AACA,kBAAoD,qBAAS,KAAT,CAApD;AAAA;AAAA,MAAOC,kBAAP;AAAA,MAA2BC,qBAA3B;;AAEA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCD,IAAAA,qBAAqB,CAAC,UAAAE,IAAI;AAAA,aAAI,CAACA,IAAL;AAAA,KAAL,CAArB;AACD,GAFD;;AAIA,sBACE,+EACE,gCAAC,mBAAD;AACE,IAAA,OAAO,EAAER,OADX;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,IAAI,EAAEG,IAHR;AAIE,IAAA,KAAK,EAAED,KAJT;AAKE,IAAA,YAAY,EAAEM,mBALhB;AAME,IAAA,YAAY,EAAEA,mBANhB;AAOE,gBAAUL,IAPZ;AAQE,gBAAUE,aAAa,CAAC;AAAEK,MAAAA,EAAE,EAAE,2CAAwBX,KAAxB;AAAN,KAAD;AARzB,KAUGI,IAAI,KAAK,QAAT,iBAAqB,gCAAC,aAAD;AAAQ,IAAA,IAAI,EAAEH;AAAd,IAVxB,EAWGG,IAAI,KAAK,MAAT,iBAAmB,gCAAC,WAAD;AAAM,IAAA,IAAI,EAAEH;AAAZ,IAXtB,EAYGG,IAAI,KAAK,UAAT,iBAAuB,gCAAC,oBAAD;AAAc,IAAA,IAAI,EAAEH;AAApB,IAZ1B,EAaG,CAAC,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,EAA4B,UAA5B,EAAwCW,QAAxC,CAAiDR,IAAjD,CAAD,iBACC,gCAAC,iCAAD;AAAiB,IAAA,KAAK,EAAEC,SAAxB;AAAmC,IAAA,IAAI,EAAED;AAAzC,IAdJ,CADF,EAkBGG,kBAAkB,iBAAI,gCAAC,eAAD;AAAS,IAAA,EAAE,EAAEH;AAAb,IAlBzB,CADF;AAsBD,CA9BD;;AAgCAL,WAAW,CAACc,YAAZ,GAA2B;AACzBZ,EAAAA,KAAK,EAAE,SADkB;AAEzBI,EAAAA,SAAS,EAAE,IAFc;AAGzBH,EAAAA,OAAO,EAAE,mBAAM,CAAE,CAHQ;AAIzBC,EAAAA,KAAK,EAAE,KAJkB;AAKzBC,EAAAA,IAAI,EAAE;AALmB,CAA3B;AAQAL,WAAW,CAACe,SAAZ,GAAwB;AACtBb,EAAAA,KAAK,EAAEc,sBAAUC,MADK;AAEtBX,EAAAA,SAAS,EAAEU,sBAAUE,MAFC;AAGtBf,EAAAA,OAAO,EAAEa,sBAAUG,IAHG;AAItBf,EAAAA,KAAK,EAAEY,sBAAUI,IAJK;AAKtBf,EAAAA,IAAI,EAAEW,sBAAUC,MALM;AAMtBhB,EAAAA,KAAK,EAAEe,sBAAUC,MAAV,CAAiBI;AANF,CAAxB;eASerB,W","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pencil, Plus } from '@buffetjs/icons';\nimport { Tooltip } from '@buffetjs/styles';\nimport { useGlobalContext } from 'strapi-helper-plugin';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { getTrad } from '../../utils';\nimport DownloadIcon from '../../icons/Download';\nimport Wrapper from './Wrapper';\n\nconst CardControl = ({ title, color, onClick, small, type, iconStyle }) => {\n  const { formatMessage } = useGlobalContext();\n  const [tooltipIsDisplayed, setTooltipIsDisplayed] = useState(false);\n\n  const handleToggleTooltip = () => {\n    setTooltipIsDisplayed(prev => !prev);\n  };\n\n  return (\n    <>\n      <Wrapper\n        onClick={onClick}\n        color={color}\n        type={type}\n        small={small}\n        onMouseEnter={handleToggleTooltip}\n        onMouseLeave={handleToggleTooltip}\n        data-for={type}\n        data-tip={formatMessage({ id: getTrad(`control-card.${title}`) })}\n      >\n        {type === 'pencil' && <Pencil fill={color} />}\n        {type === 'plus' && <Plus fill={color} />}\n        {type === 'download' && <DownloadIcon fill={color} />}\n        {!['pencil', 'clear', 'plus', 'download'].includes(type) && (\n          <FontAwesomeIcon style={iconStyle} icon={type} />\n        )}\n      </Wrapper>\n      {tooltipIsDisplayed && <Tooltip id={type} />}\n    </>\n  );\n};\n\nCardControl.defaultProps = {\n  color: '#b3b5b9',\n  iconStyle: null,\n  onClick: () => {},\n  small: false,\n  type: 'pencil',\n};\n\nCardControl.propTypes = {\n  color: PropTypes.string,\n  iconStyle: PropTypes.object,\n  onClick: PropTypes.func,\n  small: PropTypes.bool,\n  type: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default CardControl;\n"]},"metadata":{},"sourceType":"script"}