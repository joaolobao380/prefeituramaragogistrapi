{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _lodash = require(\"lodash\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _reactFontawesome = require(\"@fortawesome/react-fontawesome\");\n\nvar _getTrad = _interopRequireDefault(require(\"../../utils/getTrad\"));\n\nvar _permissions = _interopRequireDefault(require(\"../../permissions\"));\n\n/**\n *\n * EditViewButton\n *\n */\n// Create link from content-type-builder to content-manager\nfunction EditViewButton(props) {\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      currentEnvironment = _useGlobalContext.currentEnvironment,\n      emitEvent = _useGlobalContext.emitEvent,\n      formatMessage = _useGlobalContext.formatMessage; // Retrieve URL from props\n\n\n  var _get = (0, _lodash.get)(props, ['viewProps', '0'], {\n    componentSlug: ''\n  }),\n      modifiedData = _get.modifiedData,\n      componentSlug = _get.componentSlug,\n      type = _get.type;\n\n  var baseUrl = \"/plugins/content-type-builder/\".concat(type === 'content-types' ? type : 'component-categories');\n  var category = (0, _lodash.get)(modifiedData, 'category', '');\n  var suffixUrl = type === 'content-types' ? props.getModelName() : \"\".concat(category, \"/\").concat(componentSlug);\n\n  var handleClick = function handleClick() {\n    emitEvent('willEditEditLayout');\n    props.push(\"\".concat(baseUrl, \"/\").concat(suffixUrl));\n  };\n\n  if (currentEnvironment !== 'development') {\n    return null;\n  }\n\n  if (props.getModelName() === 'strapi::administrator') {\n    return null;\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.CheckPermissions, {\n    permissions: _permissions[\"default\"].main\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Button, (0, _extends2[\"default\"])({}, props, {\n    onClick: handleClick,\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_reactFontawesome.FontAwesomeIcon, {\n      icon: \"cog\",\n      style: {\n        fontSize: 13\n      }\n    }),\n    label: formatMessage({\n      id: (0, _getTrad[\"default\"])(\"injected-components.content-manager.edit-settings-view.link.\".concat(type))\n    }),\n    style: {\n      paddingLeft: 15,\n      paddingRight: 15,\n      outline: 0,\n      fontWeight: 600\n    }\n  })));\n}\n\nEditViewButton.propTypes = {\n  currentEnvironment: _propTypes[\"default\"].string.isRequired,\n  getModelName: _propTypes[\"default\"].func.isRequired,\n  push: _propTypes[\"default\"].func.isRequired\n};\nvar _default = EditViewButton;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-type-builder/admin/src/InjectedComponents/ContentManager/EditSettingViewButton.js"],"names":["EditViewButton","props","currentEnvironment","emitEvent","formatMessage","componentSlug","modifiedData","type","baseUrl","category","suffixUrl","getModelName","handleClick","push","pluginPermissions","main","fontSize","id","paddingLeft","paddingRight","outline","fontWeight","propTypes","PropTypes","string","isRequired","func"],"mappings":";;;;;;;;;;;AAMA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAbA;AACA;AACA;AACA;AACA;AAWA;AACA,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,0BAAyD,2CAAzD;AAAA,MAAQC,kBAAR,qBAAQA,kBAAR;AAAA,MAA4BC,SAA5B,qBAA4BA,SAA5B;AAAA,MAAuCC,aAAvC,qBAAuCA,aAAvC,CAD6B,CAE7B;;;AACA,aAA8C,iBAC5CH,KAD4C,EAE5C,CAAC,WAAD,EAAc,GAAd,CAF4C,EAI5C;AACEI,IAAAA,aAAa,EAAE;AADjB,GAJ4C,CAA9C;AAAA,MAAQC,YAAR,QAAQA,YAAR;AAAA,MAAsBD,aAAtB,QAAsBA,aAAtB;AAAA,MAAqCE,IAArC,QAAqCA,IAArC;;AASA,MAAMC,OAAO,2CACXD,IAAI,KAAK,eAAT,GAA2BA,IAA3B,GAAkC,sBADvB,CAAb;AAGA,MAAME,QAAQ,GAAG,iBAAIH,YAAJ,EAAkB,UAAlB,EAA8B,EAA9B,CAAjB;AAEA,MAAMI,SAAS,GACbH,IAAI,KAAK,eAAT,GAA2BN,KAAK,CAACU,YAAN,EAA3B,aAAqDF,QAArD,cAAiEJ,aAAjE,CADF;;AAGA,MAAMO,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBT,IAAAA,SAAS,CAAC,oBAAD,CAAT;AACAF,IAAAA,KAAK,CAACY,IAAN,WAAcL,OAAd,cAAyBE,SAAzB;AACD,GAHD;;AAKA,MAAIR,kBAAkB,KAAK,aAA3B,EAA0C;AACxC,WAAO,IAAP;AACD;;AAED,MAAID,KAAK,CAACU,YAAN,OAAyB,uBAA7B,EAAsD;AACpD,WAAO,IAAP;AACD;;AAED,sBACE,gCAAC,oCAAD;AAAkB,IAAA,WAAW,EAAEG,wBAAkBC;AAAjD,kBACE,gCAAC,YAAD,gCACMd,KADN;AAEE,IAAA,OAAO,EAAEW,WAFX;AAGE,IAAA,IAAI,eAAE,gCAAC,iCAAD;AAAiB,MAAA,IAAI,EAAC,KAAtB;AAA4B,MAAA,KAAK,EAAE;AAAEI,QAAAA,QAAQ,EAAE;AAAZ;AAAnC,MAHR;AAIE,IAAA,KAAK,EAAEZ,aAAa,CAAC;AACnBa,MAAAA,EAAE,EAAE,+FAAuEV,IAAvE;AADe,KAAD,CAJtB;AAOE,IAAA,KAAK,EAAE;AACLW,MAAAA,WAAW,EAAE,EADR;AAELC,MAAAA,YAAY,EAAE,EAFT;AAGLC,MAAAA,OAAO,EAAE,CAHJ;AAILC,MAAAA,UAAU,EAAE;AAJP;AAPT,KADF,CADF;AAkBD;;AAEDrB,cAAc,CAACsB,SAAf,GAA2B;AACzBpB,EAAAA,kBAAkB,EAAEqB,sBAAUC,MAAV,CAAiBC,UADZ;AAEzBd,EAAAA,YAAY,EAAEY,sBAAUG,IAAV,CAAeD,UAFJ;AAGzBZ,EAAAA,IAAI,EAAEU,sBAAUG,IAAV,CAAeD;AAHI,CAA3B;eAMezB,c","sourcesContent":["/**\n *\n * EditViewButton\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGlobalContext, CheckPermissions } from 'strapi-helper-plugin';\nimport { get } from 'lodash';\nimport { Button } from '@buffetjs/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport getTrad from '../../utils/getTrad';\nimport pluginPermissions from '../../permissions';\n\n// Create link from content-type-builder to content-manager\nfunction EditViewButton(props) {\n  const { currentEnvironment, emitEvent, formatMessage } = useGlobalContext();\n  // Retrieve URL from props\n  const { modifiedData, componentSlug, type } = get(\n    props,\n    ['viewProps', '0'],\n\n    {\n      componentSlug: '',\n    }\n  );\n\n  const baseUrl = `/plugins/content-type-builder/${\n    type === 'content-types' ? type : 'component-categories'\n  }`;\n  const category = get(modifiedData, 'category', '');\n\n  const suffixUrl =\n    type === 'content-types' ? props.getModelName() : `${category}/${componentSlug}`;\n\n  const handleClick = () => {\n    emitEvent('willEditEditLayout');\n    props.push(`${baseUrl}/${suffixUrl}`);\n  };\n\n  if (currentEnvironment !== 'development') {\n    return null;\n  }\n\n  if (props.getModelName() === 'strapi::administrator') {\n    return null;\n  }\n\n  return (\n    <CheckPermissions permissions={pluginPermissions.main}>\n      <Button\n        {...props}\n        onClick={handleClick}\n        icon={<FontAwesomeIcon icon=\"cog\" style={{ fontSize: 13 }} />}\n        label={formatMessage({\n          id: getTrad(`injected-components.content-manager.edit-settings-view.link.${type}`),\n        })}\n        style={{\n          paddingLeft: 15,\n          paddingRight: 15,\n          outline: 0,\n          fontWeight: 600,\n        }}\n      />\n    </CheckPermissions>\n  );\n}\n\nEditViewButton.propTypes = {\n  currentEnvironment: PropTypes.string.isRequired,\n  getModelName: PropTypes.func.isRequired,\n  push: PropTypes.func.isRequired,\n};\n\nexport default EditViewButton;\n"]},"metadata":{},"sourceType":"script"}