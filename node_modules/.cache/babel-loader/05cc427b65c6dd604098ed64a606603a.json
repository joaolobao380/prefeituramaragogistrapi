{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _package = _interopRequireDefault(require(\"../../package.json\"));\n\nvar _logo = _interopRequireDefault(require(\"./assets/images/logo.svg\"));\n\nvar _App = _interopRequireDefault(require(\"./containers/App\"));\n\nvar _Initializer = _interopRequireDefault(require(\"./containers/Initializer\"));\n\nvar _EditViewLink = _interopRequireDefault(require(\"./InjectedComponents/ContentManager/EditViewLink\"));\n\nvar _EditSettingViewButton = _interopRequireDefault(require(\"./InjectedComponents/ContentManager/EditSettingViewButton\"));\n\nvar _lifecycles = _interopRequireDefault(require(\"./lifecycles\"));\n\nvar _translations = _interopRequireDefault(require(\"./translations\"));\n\nvar _permissions = _interopRequireDefault(require(\"./permissions\"));\n\nvar _pluginId = _interopRequireDefault(require(\"./pluginId\"));\n\nvar _reducers = _interopRequireDefault(require(\"./reducers\"));\n\nvar _formAPI = _interopRequireDefault(require(\"./utils/formAPI\"));\n\n// NOTE TO PLUGINS DEVELOPERS:\n// If you modify this file by adding new options to the plugin entry point\n// Here's the file: strapi/docs/3.0.0-beta.x/plugin-development/frontend-field-api.md\n// Here's the file: strapi/docs/3.0.0-beta.x/guides/registering-a-field-in-admin.md\n// Also the strapi-generate-plugins/files/admin/src/index.js needs to be updated\n// IF THE DOC IS NOT UPDATED THE PULL REQUEST WILL NOT BE MERGED\nvar _default = function _default(strapi) {\n  var pluginDescription = _package[\"default\"].strapi.description || _package[\"default\"].description;\n  var icon = _package[\"default\"].strapi.icon;\n  var name = _package[\"default\"].strapi.name;\n  var plugin = {\n    blockerComponent: null,\n    blockerComponentProps: {},\n    description: pluginDescription,\n    icon: icon,\n    id: _pluginId[\"default\"],\n    initializer: _Initializer[\"default\"],\n    injectedComponents: [{\n      plugin: 'content-manager.editView',\n      area: 'right.links',\n      component: _EditViewLink[\"default\"],\n      key: 'content-type-builder.link',\n      props: {\n        message: {\n          id: 'content-manager.containers.Edit.Link.Fields'\n        },\n        icon: 'fa-cog'\n      }\n    }, {\n      plugin: 'content-manager.editSettingsView',\n      area: 'left.links',\n      component: _EditSettingViewButton[\"default\"],\n      key: 'content-type-builder.form'\n    }],\n    isRequired: _package[\"default\"].strapi.required || false,\n    layout: null,\n    lifecycles: _lifecycles[\"default\"],\n    mainComponent: _App[\"default\"],\n    name: name,\n    pluginLogo: _logo[\"default\"],\n    preventComponentRendering: false,\n    reducers: _reducers[\"default\"],\n    trads: _translations[\"default\"],\n    menu: {\n      pluginsSectionLinks: [{\n        destination: \"/plugins/\".concat(_pluginId[\"default\"]),\n        icon: icon,\n        label: {\n          id: \"\".concat(_pluginId[\"default\"], \".plugin.name\"),\n          defaultMessage: 'Content-Types Builder'\n        },\n        name: name,\n        permissions: _permissions[\"default\"].main\n      }]\n    },\n    // Internal APIs exposed by the CTB for the other plugins to use\n    apis: {\n      forms: _formAPI[\"default\"]\n    }\n  };\n  return strapi.registerPlugin(plugin);\n};\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-type-builder/admin/src/index.js"],"names":["strapi","pluginDescription","pluginPkg","description","icon","name","plugin","blockerComponent","blockerComponentProps","id","pluginId","initializer","Initializer","injectedComponents","area","component","Link","key","props","message","Button","isRequired","required","layout","lifecycles","mainComponent","App","pluginLogo","preventComponentRendering","reducers","trads","menu","pluginsSectionLinks","destination","label","defaultMessage","permissions","pluginPermissions","main","apis","forms","formsAPI","registerPlugin"],"mappings":";;;;;;;;;AAOA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAlBA;AACA;AACA;AACA;AACA;AACA;eAee,kBAAAA,MAAM,EAAI;AACvB,MAAMC,iBAAiB,GAAGC,oBAAUF,MAAV,CAAiBG,WAAjB,IAAgCD,oBAAUC,WAApE;AACA,MAAMC,IAAI,GAAGF,oBAAUF,MAAV,CAAiBI,IAA9B;AACA,MAAMC,IAAI,GAAGH,oBAAUF,MAAV,CAAiBK,IAA9B;AAEA,MAAMC,MAAM,GAAG;AACbC,IAAAA,gBAAgB,EAAE,IADL;AAEbC,IAAAA,qBAAqB,EAAE,EAFV;AAGbL,IAAAA,WAAW,EAAEF,iBAHA;AAIbG,IAAAA,IAAI,EAAJA,IAJa;AAKbK,IAAAA,EAAE,EAAEC,oBALS;AAMbC,IAAAA,WAAW,EAAEC,uBANA;AAObC,IAAAA,kBAAkB,EAAE,CAClB;AACEP,MAAAA,MAAM,EAAE,0BADV;AAEEQ,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,SAAS,EAAEC,wBAHb;AAIEC,MAAAA,GAAG,EAAE,2BAJP;AAKEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE;AACPV,UAAAA,EAAE,EAAE;AADG,SADJ;AAILL,QAAAA,IAAI,EAAE;AAJD;AALT,KADkB,EAalB;AACEE,MAAAA,MAAM,EAAE,kCADV;AAEEQ,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,SAAS,EAAEK,iCAHb;AAIEH,MAAAA,GAAG,EAAE;AAJP,KAbkB,CAPP;AA2BbI,IAAAA,UAAU,EAAEnB,oBAAUF,MAAV,CAAiBsB,QAAjB,IAA6B,KA3B5B;AA4BbC,IAAAA,MAAM,EAAE,IA5BK;AA6BbC,IAAAA,UAAU,EAAVA,sBA7Ba;AA8BbC,IAAAA,aAAa,EAAEC,eA9BF;AA+BbrB,IAAAA,IAAI,EAAJA,IA/Ba;AAgCbsB,IAAAA,UAAU,EAAVA,gBAhCa;AAiCbC,IAAAA,yBAAyB,EAAE,KAjCd;AAkCbC,IAAAA,QAAQ,EAARA,oBAlCa;AAmCbC,IAAAA,KAAK,EAALA,wBAnCa;AAoCbC,IAAAA,IAAI,EAAE;AACJC,MAAAA,mBAAmB,EAAE,CACnB;AACEC,QAAAA,WAAW,qBAAcvB,oBAAd,CADb;AAEEN,QAAAA,IAAI,EAAJA,IAFF;AAGE8B,QAAAA,KAAK,EAAE;AACLzB,UAAAA,EAAE,YAAKC,oBAAL,iBADG;AAELyB,UAAAA,cAAc,EAAE;AAFX,SAHT;AAOE9B,QAAAA,IAAI,EAAJA,IAPF;AAQE+B,QAAAA,WAAW,EAAEC,wBAAkBC;AARjC,OADmB;AADjB,KApCO;AAkDb;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAEC;AADH;AAnDO,GAAf;AAwDA,SAAOzC,MAAM,CAAC0C,cAAP,CAAsBpC,MAAtB,CAAP;AACD,C","sourcesContent":["// NOTE TO PLUGINS DEVELOPERS:\n// If you modify this file by adding new options to the plugin entry point\n// Here's the file: strapi/docs/3.0.0-beta.x/plugin-development/frontend-field-api.md\n// Here's the file: strapi/docs/3.0.0-beta.x/guides/registering-a-field-in-admin.md\n// Also the strapi-generate-plugins/files/admin/src/index.js needs to be updated\n// IF THE DOC IS NOT UPDATED THE PULL REQUEST WILL NOT BE MERGED\n\nimport pluginPkg from '../../package.json';\nimport pluginLogo from './assets/images/logo.svg';\nimport App from './containers/App';\nimport Initializer from './containers/Initializer';\nimport Link from './InjectedComponents/ContentManager/EditViewLink';\nimport Button from './InjectedComponents/ContentManager/EditSettingViewButton';\nimport lifecycles from './lifecycles';\nimport trads from './translations';\nimport pluginPermissions from './permissions';\nimport pluginId from './pluginId';\nimport reducers from './reducers';\nimport formsAPI from './utils/formAPI';\n\nexport default strapi => {\n  const pluginDescription = pluginPkg.strapi.description || pluginPkg.description;\n  const icon = pluginPkg.strapi.icon;\n  const name = pluginPkg.strapi.name;\n\n  const plugin = {\n    blockerComponent: null,\n    blockerComponentProps: {},\n    description: pluginDescription,\n    icon,\n    id: pluginId,\n    initializer: Initializer,\n    injectedComponents: [\n      {\n        plugin: 'content-manager.editView',\n        area: 'right.links',\n        component: Link,\n        key: 'content-type-builder.link',\n        props: {\n          message: {\n            id: 'content-manager.containers.Edit.Link.Fields',\n          },\n          icon: 'fa-cog',\n        },\n      },\n      {\n        plugin: 'content-manager.editSettingsView',\n        area: 'left.links',\n        component: Button,\n        key: 'content-type-builder.form',\n      },\n    ],\n    isRequired: pluginPkg.strapi.required || false,\n    layout: null,\n    lifecycles,\n    mainComponent: App,\n    name,\n    pluginLogo,\n    preventComponentRendering: false,\n    reducers,\n    trads,\n    menu: {\n      pluginsSectionLinks: [\n        {\n          destination: `/plugins/${pluginId}`,\n          icon,\n          label: {\n            id: `${pluginId}.plugin.name`,\n            defaultMessage: 'Content-Types Builder',\n          },\n          name,\n          permissions: pluginPermissions.main,\n        },\n      ],\n    },\n    // Internal APIs exposed by the CTB for the other plugins to use\n    apis: {\n      forms: formsAPI,\n    },\n  };\n\n  return strapi.registerPlugin(plugin);\n};\n"]},"metadata":{},"sourceType":"script"}