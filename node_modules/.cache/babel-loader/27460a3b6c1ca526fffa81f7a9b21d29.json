{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Button = _interopRequireDefault(require(\"./Button\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\n/**\n *\n * WysiwygInlineControls\n *\n */\nvar WysiwygInlineControls = function WysiwygInlineControls(_ref) {\n  var buttons = _ref.buttons,\n      disabled = _ref.disabled,\n      editorState = _ref.editorState,\n      handlers = _ref.handlers,\n      onToggle = _ref.onToggle,\n      onToggleBlock = _ref.onToggleBlock;\n  var selection = editorState.getSelection();\n  var blockType = editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  var currentStyle = editorState.getCurrentInlineStyle();\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], null, buttons.map(function (type) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n      key: type.label,\n      active: type.style === blockType || currentStyle.has(type.style),\n      className: type.className,\n      disabled: disabled,\n      handler: type.handler,\n      handlers: handlers,\n      hideLabel: type.hideLabel || false,\n      label: type.label,\n      onToggle: onToggle,\n      onToggleBlock: onToggleBlock,\n      style: type.style,\n      text: type.text\n    });\n  }));\n};\n\nWysiwygInlineControls.defaultProps = {\n  buttons: [],\n  disabled: false,\n  onToggle: function onToggle() {},\n  onToggleBlock: function onToggleBlock() {}\n};\nWysiwygInlineControls.propTypes = {\n  buttons: _propTypes[\"default\"].array,\n  disabled: _propTypes[\"default\"].bool,\n  editorState: _propTypes[\"default\"].object.isRequired,\n  handlers: _propTypes[\"default\"].object.isRequired,\n  onToggle: _propTypes[\"default\"].func,\n  onToggleBlock: _propTypes[\"default\"].func\n};\nvar _default = WysiwygInlineControls;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/components/WysiwygInlineControls/index.js"],"names":["WysiwygInlineControls","buttons","disabled","editorState","handlers","onToggle","onToggleBlock","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","getType","currentStyle","getCurrentInlineStyle","map","type","label","style","has","className","handler","hideLabel","text","defaultProps","propTypes","PropTypes","array","bool","object","isRequired","func"],"mappings":";;;;;;;;;AAMA;;AACA;;AACA;;AACA;;AATA;AACA;AACA;AACA;AACA;AAOA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,OAOxB;AAAA,MANJC,OAMI,QANJA,OAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,aACI,QADJA,aACI;AACJ,MAAMC,SAAS,GAAGJ,WAAW,CAACK,YAAZ,EAAlB;AACA,MAAMC,SAAS,GAAGN,WAAW,CAC1BO,iBADe,GAEfC,cAFe,CAEAJ,SAAS,CAACK,WAAV,EAFA,EAGfC,OAHe,EAAlB;AAKA,MAAMC,YAAY,GAAGX,WAAW,CAACY,qBAAZ,EAArB;AAEA,sBACE,gCAAC,mBAAD,QACGd,OAAO,CAACe,GAAR,CAAY,UAAAC,IAAI;AAAA,wBACf,gCAAC,kBAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,KADZ;AAEE,MAAA,MAAM,EAAED,IAAI,CAACE,KAAL,KAAeV,SAAf,IAA4BK,YAAY,CAACM,GAAb,CAAiBH,IAAI,CAACE,KAAtB,CAFtC;AAGE,MAAA,SAAS,EAAEF,IAAI,CAACI,SAHlB;AAIE,MAAA,QAAQ,EAAEnB,QAJZ;AAKE,MAAA,OAAO,EAAEe,IAAI,CAACK,OALhB;AAME,MAAA,QAAQ,EAAElB,QANZ;AAOE,MAAA,SAAS,EAAEa,IAAI,CAACM,SAAL,IAAkB,KAP/B;AAQE,MAAA,KAAK,EAAEN,IAAI,CAACC,KARd;AASE,MAAA,QAAQ,EAAEb,QATZ;AAUE,MAAA,aAAa,EAAEC,aAVjB;AAWE,MAAA,KAAK,EAAEW,IAAI,CAACE,KAXd;AAYE,MAAA,IAAI,EAAEF,IAAI,CAACO;AAZb,MADe;AAAA,GAAhB,CADH,CADF;AAoBD,CApCD;;AAsCAxB,qBAAqB,CAACyB,YAAtB,GAAqC;AACnCxB,EAAAA,OAAO,EAAE,EAD0B;AAEnCC,EAAAA,QAAQ,EAAE,KAFyB;AAGnCG,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CAHiB;AAInCC,EAAAA,aAAa,EAAE,yBAAM,CAAE;AAJY,CAArC;AAOAN,qBAAqB,CAAC0B,SAAtB,GAAkC;AAChCzB,EAAAA,OAAO,EAAE0B,sBAAUC,KADa;AAEhC1B,EAAAA,QAAQ,EAAEyB,sBAAUE,IAFY;AAGhC1B,EAAAA,WAAW,EAAEwB,sBAAUG,MAAV,CAAiBC,UAHE;AAIhC3B,EAAAA,QAAQ,EAAEuB,sBAAUG,MAAV,CAAiBC,UAJK;AAKhC1B,EAAAA,QAAQ,EAAEsB,sBAAUK,IALY;AAMhC1B,EAAAA,aAAa,EAAEqB,sBAAUK;AANO,CAAlC;eASehC,qB","sourcesContent":["/**\n *\n * WysiwygInlineControls\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport Wrapper from './Wrapper';\n\nconst WysiwygInlineControls = ({\n  buttons,\n  disabled,\n  editorState,\n  handlers,\n  onToggle,\n  onToggleBlock,\n}) => {\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n  const currentStyle = editorState.getCurrentInlineStyle();\n\n  return (\n    <Wrapper>\n      {buttons.map(type => (\n        <Button\n          key={type.label}\n          active={type.style === blockType || currentStyle.has(type.style)}\n          className={type.className}\n          disabled={disabled}\n          handler={type.handler}\n          handlers={handlers}\n          hideLabel={type.hideLabel || false}\n          label={type.label}\n          onToggle={onToggle}\n          onToggleBlock={onToggleBlock}\n          style={type.style}\n          text={type.text}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n\nWysiwygInlineControls.defaultProps = {\n  buttons: [],\n  disabled: false,\n  onToggle: () => {},\n  onToggleBlock: () => {},\n};\n\nWysiwygInlineControls.propTypes = {\n  buttons: PropTypes.array,\n  disabled: PropTypes.bool,\n  editorState: PropTypes.object.isRequired,\n  handlers: PropTypes.object.isRequired,\n  onToggle: PropTypes.func,\n  onToggleBlock: PropTypes.func,\n};\n\nexport default WysiwygInlineControls;\n"]},"metadata":{},"sourceType":"script"}