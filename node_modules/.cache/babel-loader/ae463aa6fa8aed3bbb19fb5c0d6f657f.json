{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _permissions = _interopRequireDefault(require(\"../../permissions\"));\n\n/**\n *\n * EditViewLink\n *\n */\n// Create link from content-type-builder to content-manager\nfunction EditViewLink(props) {\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      currentEnvironment = _useGlobalContext.currentEnvironment,\n      emitEvent = _useGlobalContext.emitEvent; // Retrieve URL from props\n\n\n  var url = \"/plugins/content-type-builder/content-types/\".concat(props.getModelName());\n\n  if (currentEnvironment !== 'development') {\n    return null;\n  }\n\n  if (props.getModelName() === 'strapi::administrator') {\n    return null;\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.CheckPermissions, {\n    permissions: _permissions[\"default\"].main\n  }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.LiLink, (0, _extends2[\"default\"])({}, props, {\n    url: url,\n    onClick: function onClick() {\n      emitEvent('willEditEditLayout');\n    }\n  })));\n}\n\nEditViewLink.propTypes = {\n  currentEnvironment: _propTypes[\"default\"].string.isRequired,\n  getModelName: _propTypes[\"default\"].func.isRequired\n};\nvar _default = EditViewLink;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-type-builder/admin/src/InjectedComponents/ContentManager/EditViewLink.js"],"names":["EditViewLink","props","currentEnvironment","emitEvent","url","getModelName","pluginPermissions","main","propTypes","PropTypes","string","isRequired","func"],"mappings":";;;;;;;;;;;AAMA;;AACA;;AACA;;AACA;;AATA;AACA;AACA;AACA;AACA;AAOA;AACA,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,0BAA0C,2CAA1C;AAAA,MAAQC,kBAAR,qBAAQA,kBAAR;AAAA,MAA4BC,SAA5B,qBAA4BA,SAA5B,CAD2B,CAE3B;;;AACA,MAAMC,GAAG,yDAAkDH,KAAK,CAACI,YAAN,EAAlD,CAAT;;AAEA,MAAIH,kBAAkB,KAAK,aAA3B,EAA0C;AACxC,WAAO,IAAP;AACD;;AAED,MAAID,KAAK,CAACI,YAAN,OAAyB,uBAA7B,EAAsD;AACpD,WAAO,IAAP;AACD;;AAED,sBACE,gCAAC,oCAAD;AAAkB,IAAA,WAAW,EAAEC,wBAAkBC;AAAjD,kBACE,gCAAC,0BAAD,gCACMN,KADN;AAEE,IAAA,GAAG,EAAEG,GAFP;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbD,MAAAA,SAAS,CAAC,oBAAD,CAAT;AACD;AALH,KADF,CADF;AAWD;;AAEDH,YAAY,CAACQ,SAAb,GAAyB;AACvBN,EAAAA,kBAAkB,EAAEO,sBAAUC,MAAV,CAAiBC,UADd;AAEvBN,EAAAA,YAAY,EAAEI,sBAAUG,IAAV,CAAeD;AAFN,CAAzB;eAKeX,Y","sourcesContent":["/**\n *\n * EditViewLink\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { LiLink, useGlobalContext, CheckPermissions } from 'strapi-helper-plugin';\nimport pluginPermissions from '../../permissions';\n\n// Create link from content-type-builder to content-manager\nfunction EditViewLink(props) {\n  const { currentEnvironment, emitEvent } = useGlobalContext();\n  // Retrieve URL from props\n  const url = `/plugins/content-type-builder/content-types/${props.getModelName()}`;\n\n  if (currentEnvironment !== 'development') {\n    return null;\n  }\n\n  if (props.getModelName() === 'strapi::administrator') {\n    return null;\n  }\n\n  return (\n    <CheckPermissions permissions={pluginPermissions.main}>\n      <LiLink\n        {...props}\n        url={url}\n        onClick={() => {\n          emitEvent('willEditEditLayout');\n        }}\n      />\n    </CheckPermissions>\n  );\n}\n\nEditViewLink.propTypes = {\n  currentEnvironment: PropTypes.string.isRequired,\n  getModelName: PropTypes.func.isRequired,\n};\n\nexport default EditViewLink;\n"]},"metadata":{},"sourceType":"script"}