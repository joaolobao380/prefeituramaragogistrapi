{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialState = exports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _immutable = require(\"immutable\");\n\nvar _pluralize = _interopRequireDefault(require(\"pluralize\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _makeUnique = _interopRequireDefault(require(\"../../utils/makeUnique\"));\n\nvar _createUid = require(\"./utils/createUid\");\n\nvar _relations = require(\"./utils/relations\");\n\nvar actions = _interopRequireWildcard(require(\"./constants\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = (0, _immutable.fromJS)({\n  formErrors: {},\n  modifiedData: {},\n  initialData: {},\n  componentToCreate: {},\n  isCreatingComponentWhileAddingAField: false\n});\nexports.initialState = initialState;\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.ADD_COMPONENTS_TO_DYNAMIC_ZONE:\n      {\n        var name = action.name,\n            components = action.components,\n            shouldAddComponents = action.shouldAddComponents;\n        return state.updateIn(['modifiedData', name], function (list) {\n          var updatedList = list;\n\n          if (shouldAddComponents) {\n            updatedList = list.concat(components);\n          } else {\n            updatedList = list.filter(function (comp) {\n              return components.indexOf(comp) === -1;\n            });\n          }\n\n          return (0, _immutable.List)((0, _makeUnique[\"default\"])(updatedList.toJS()));\n        });\n      }\n\n    case actions.ON_CHANGE:\n      return state.update('modifiedData', function (obj) {\n        var selectedContentTypeFriendlyName = action.selectedContentTypeFriendlyName,\n            keys = action.keys,\n            value = action.value,\n            oneThatIsCreatingARelationWithAnother = action.oneThatIsCreatingARelationWithAnother;\n        var hasDefaultValue = Boolean(obj.getIn(['default'])); // There is no need to remove the default key if the default value isn't defined\n\n        if (hasDefaultValue && keys.length === 1 && keys.includes('type')) {\n          var previousType = obj.getIn(['type']);\n\n          if (previousType && ['date', 'datetime', 'time'].includes(previousType)) {\n            return obj.updateIn(keys, function () {\n              return value;\n            }).remove('default');\n          }\n        }\n\n        if (keys.length === 1 && keys.includes('nature')) {\n          return obj.update('nature', function () {\n            return value;\n          }).update('dominant', function () {\n            if (value === 'manyToMany') {\n              return true;\n            }\n\n            return null;\n          }).update('name', function (oldValue) {\n            return (0, _pluralize[\"default\"])((0, _lodash.snakeCase)(oldValue), (0, _relations.shouldPluralizeName)(value));\n          }).update('targetAttribute', function (oldValue) {\n            if (['oneWay', 'manyWay'].includes(value)) {\n              return '-';\n            }\n\n            return (0, _pluralize[\"default\"])(oldValue === '-' ? (0, _lodash.snakeCase)(oneThatIsCreatingARelationWithAnother) : oldValue, (0, _relations.shouldPluralizeTargetAttribute)(value));\n          }).update('targetColumnName', function (oldValue) {\n            if (['oneWay', 'manyWay'].includes(value)) {\n              return null;\n            }\n\n            return oldValue;\n          });\n        }\n\n        if (keys.length === 1 && keys.includes('target')) {\n          var targetContentTypeAllowedRelations = action.targetContentTypeAllowedRelations;\n          var didChangeNatureBecauseOfRestrictedRelation = false;\n          return obj.update('target', function () {\n            return value;\n          }).update('nature', function (currentNature) {\n            if (targetContentTypeAllowedRelations === null) {\n              return currentNature;\n            }\n\n            if (!targetContentTypeAllowedRelations.includes(currentNature)) {\n              didChangeNatureBecauseOfRestrictedRelation = true;\n              return targetContentTypeAllowedRelations[0];\n            }\n\n            return currentNature;\n          }).update('name', function () {\n            if (didChangeNatureBecauseOfRestrictedRelation) {\n              return (0, _pluralize[\"default\"])((0, _lodash.snakeCase)(selectedContentTypeFriendlyName), (0, _relations.shouldPluralizeName)(targetContentTypeAllowedRelations[0]));\n            }\n\n            return (0, _pluralize[\"default\"])((0, _lodash.snakeCase)(selectedContentTypeFriendlyName), (0, _relations.shouldPluralizeName)(obj.get('nature')));\n          }).update('targetAttribute', function () {\n            if (['oneWay', 'manyWay'].includes(obj.get('nature'))) {\n              return '-';\n            }\n\n            if (didChangeNatureBecauseOfRestrictedRelation && ['oneWay', 'manyWay'].includes(targetContentTypeAllowedRelations[0])) {\n              return '-';\n            }\n\n            return (0, _pluralize[\"default\"])((0, _lodash.snakeCase)(oneThatIsCreatingARelationWithAnother), (0, _relations.shouldPluralizeTargetAttribute)(obj.get('nature')));\n          });\n        }\n\n        return obj.updateIn(keys, function () {\n          return value;\n        });\n      });\n\n    case actions.ON_CHANGE_ALLOWED_TYPE:\n      {\n        if (action.name === 'all') {\n          return state.updateIn(['modifiedData', 'allowedTypes'], function () {\n            if (action.value) {\n              return (0, _immutable.fromJS)(['images', 'videos', 'files']);\n            }\n\n            return null;\n          });\n        }\n\n        return state.updateIn(['modifiedData', 'allowedTypes'], function (currentList) {\n          var list = currentList || (0, _immutable.fromJS)([]);\n\n          if (list.includes(action.name)) {\n            list = list.filter(function (v) {\n              return v !== action.name;\n            });\n\n            if (list.size === 0) {\n              return null;\n            }\n\n            return list;\n          }\n\n          return list.push(action.name);\n        });\n      }\n\n    case actions.RESET_PROPS:\n      return initialState;\n\n    case actions.RESET_PROPS_AND_SET_FORM_FOR_ADDING_AN_EXISTING_COMPO:\n      {\n        // This is run when the user doesn't want to create a new component\n        return initialState.update('modifiedData', function () {\n          return (0, _immutable.fromJS)(_objectSpread({\n            type: 'component',\n            repeatable: true\n          }, action.options));\n        });\n      }\n\n    case actions.RESET_PROPS_AND_SAVE_CURRENT_DATA:\n      {\n        // This is run when the user has created a new component\n        var componentToCreate = state.getIn(['modifiedData', 'componentToCreate']);\n        var modifiedData = (0, _immutable.fromJS)(_objectSpread(_objectSpread({\n          name: componentToCreate.get('name'),\n          type: 'component',\n          repeatable: false\n        }, action.options), {}, {\n          component: (0, _createUid.createComponentUid)(componentToCreate.get('name'), componentToCreate.get('category'))\n        }));\n        return initialState.update('componentToCreate', function () {\n          return componentToCreate;\n        }).update('modifiedData', function () {\n          return modifiedData;\n        }).update('isCreatingComponentWhileAddingAField', function () {\n          return state.getIn(['modifiedData', 'createComponent']);\n        });\n      }\n\n    case actions.RESET_PROPS_AND_SET_THE_FORM_FOR_ADDING_A_COMPO_TO_A_DZ:\n      {\n        var createdDZ = state.get('modifiedData');\n        var dataToSet = createdDZ.set('createComponent', true).set('componentToCreate', (0, _immutable.fromJS)({\n          type: 'component'\n        }));\n        return initialState.update('modifiedData', function () {\n          return dataToSet;\n        });\n      }\n\n    case actions.SET_DATA_TO_EDIT:\n      {\n        return state.updateIn(['modifiedData'], function () {\n          return (0, _immutable.fromJS)(action.data);\n        }).updateIn(['initialData'], function () {\n          return (0, _immutable.fromJS)(action.data);\n        });\n      }\n\n    case actions.SET_ATTRIBUTE_DATA_SCHEMA:\n      {\n        var attributeType = action.attributeType,\n            isEditing = action.isEditing,\n            modifiedDataToSetForEditing = action.modifiedDataToSetForEditing,\n            nameToSetForRelation = action.nameToSetForRelation,\n            targetUid = action.targetUid,\n            step = action.step,\n            _action$options = action.options,\n            options = _action$options === void 0 ? {} : _action$options;\n\n        if (isEditing) {\n          return state.update('modifiedData', function () {\n            return (0, _immutable.fromJS)(modifiedDataToSetForEditing);\n          }).update('initialData', function () {\n            return (0, _immutable.fromJS)(modifiedDataToSetForEditing);\n          });\n        }\n\n        var _dataToSet;\n\n        if (attributeType === 'component') {\n          if (step === '1') {\n            _dataToSet = {\n              type: 'component',\n              createComponent: true,\n              componentToCreate: {\n                type: 'component'\n              }\n            };\n          } else {\n            _dataToSet = _objectSpread(_objectSpread({}, options), {}, {\n              type: 'component',\n              repeatable: true\n            });\n          }\n        } else if (attributeType === 'dynamiczone') {\n          _dataToSet = _objectSpread(_objectSpread({}, options), {}, {\n            type: 'dynamiczone',\n            components: []\n          });\n        } else if (attributeType === 'text') {\n          _dataToSet = _objectSpread(_objectSpread({}, options), {}, {\n            type: 'string'\n          });\n        } else if (attributeType === 'number' || attributeType === 'date') {\n          _dataToSet = options;\n        } else if (attributeType === 'media') {\n          _dataToSet = _objectSpread({\n            allowedTypes: ['images', 'files', 'videos'],\n            type: 'media',\n            multiple: true\n          }, options);\n        } else if (attributeType === 'enumeration') {\n          _dataToSet = _objectSpread(_objectSpread({}, options), {}, {\n            type: 'enumeration',\n            \"enum\": []\n          });\n        } else if (attributeType === 'relation') {\n          _dataToSet = {\n            name: (0, _lodash.snakeCase)(nameToSetForRelation),\n            nature: 'oneWay',\n            targetAttribute: '-',\n            target: targetUid,\n            unique: false,\n            dominant: null,\n            columnName: null,\n            targetColumnName: null\n          };\n        } else {\n          _dataToSet = _objectSpread(_objectSpread({}, options), {}, {\n            type: attributeType,\n            \"default\": null\n          });\n        }\n\n        return state.update('modifiedData', function () {\n          return (0, _immutable.fromJS)(_dataToSet);\n        });\n      }\n\n    case actions.SET_DYNAMIC_ZONE_DATA_SCHEMA:\n      {\n        return state.update('modifiedData', function () {\n          return (0, _immutable.fromJS)(action.attributeToEdit);\n        }).update('initialData', function () {\n          return (0, _immutable.fromJS)(action.attributeToEdit);\n        });\n      }\n\n    case actions.SET_ERRORS:\n      return state.update('formErrors', function () {\n        return (0, _immutable.fromJS)(action.errors);\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar _default = reducer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-type-builder/admin/src/containers/FormModal/reducer.js"],"names":["initialState","formErrors","modifiedData","initialData","componentToCreate","isCreatingComponentWhileAddingAField","reducer","state","action","type","actions","ADD_COMPONENTS_TO_DYNAMIC_ZONE","name","components","shouldAddComponents","updateIn","list","updatedList","concat","filter","comp","indexOf","toJS","ON_CHANGE","update","obj","selectedContentTypeFriendlyName","keys","value","oneThatIsCreatingARelationWithAnother","hasDefaultValue","Boolean","getIn","length","includes","previousType","remove","oldValue","targetContentTypeAllowedRelations","didChangeNatureBecauseOfRestrictedRelation","currentNature","get","ON_CHANGE_ALLOWED_TYPE","currentList","v","size","push","RESET_PROPS","RESET_PROPS_AND_SET_FORM_FOR_ADDING_AN_EXISTING_COMPO","repeatable","options","RESET_PROPS_AND_SAVE_CURRENT_DATA","component","RESET_PROPS_AND_SET_THE_FORM_FOR_ADDING_A_COMPO_TO_A_DZ","createdDZ","dataToSet","set","SET_DATA_TO_EDIT","data","SET_ATTRIBUTE_DATA_SCHEMA","attributeType","isEditing","modifiedDataToSetForEditing","nameToSetForRelation","targetUid","step","createComponent","allowedTypes","multiple","nature","targetAttribute","target","unique","dominant","columnName","targetColumnName","SET_DYNAMIC_ZONE_DATA_SCHEMA","attributeToEdit","SET_ERRORS","errors"],"mappings":"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","sourcesContent":["import { fromJS, List } from 'immutable';\nimport pluralize from 'pluralize';\nimport { snakeCase } from 'lodash';\nimport makeUnique from '../../utils/makeUnique';\nimport { createComponentUid } from './utils/createUid';\nimport { shouldPluralizeName, shouldPluralizeTargetAttribute } from './utils/relations';\nimport * as actions from './constants';\n\nconst initialState = fromJS({\n  formErrors: {},\n  modifiedData: {},\n  initialData: {},\n  componentToCreate: {},\n  isCreatingComponentWhileAddingAField: false,\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.ADD_COMPONENTS_TO_DYNAMIC_ZONE: {\n      const { name, components, shouldAddComponents } = action;\n\n      return state.updateIn(['modifiedData', name], list => {\n        let updatedList = list;\n\n        if (shouldAddComponents) {\n          updatedList = list.concat(components);\n        } else {\n          updatedList = list.filter(comp => {\n            return components.indexOf(comp) === -1;\n          });\n        }\n\n        return List(makeUnique(updatedList.toJS()));\n      });\n    }\n    case actions.ON_CHANGE:\n      return state.update('modifiedData', obj => {\n        const {\n          selectedContentTypeFriendlyName,\n          keys,\n          value,\n          oneThatIsCreatingARelationWithAnother,\n        } = action;\n        const hasDefaultValue = Boolean(obj.getIn(['default']));\n\n        // There is no need to remove the default key if the default value isn't defined\n        if (hasDefaultValue && keys.length === 1 && keys.includes('type')) {\n          const previousType = obj.getIn(['type']);\n\n          if (previousType && ['date', 'datetime', 'time'].includes(previousType)) {\n            return obj.updateIn(keys, () => value).remove('default');\n          }\n        }\n\n        if (keys.length === 1 && keys.includes('nature')) {\n          return obj\n            .update('nature', () => value)\n            .update('dominant', () => {\n              if (value === 'manyToMany') {\n                return true;\n              }\n\n              return null;\n            })\n            .update('name', oldValue => {\n              return pluralize(snakeCase(oldValue), shouldPluralizeName(value));\n            })\n            .update('targetAttribute', oldValue => {\n              if (['oneWay', 'manyWay'].includes(value)) {\n                return '-';\n              }\n\n              return pluralize(\n                oldValue === '-' ? snakeCase(oneThatIsCreatingARelationWithAnother) : oldValue,\n                shouldPluralizeTargetAttribute(value)\n              );\n            })\n            .update('targetColumnName', oldValue => {\n              if (['oneWay', 'manyWay'].includes(value)) {\n                return null;\n              }\n\n              return oldValue;\n            });\n        }\n\n        if (keys.length === 1 && keys.includes('target')) {\n          const { targetContentTypeAllowedRelations } = action;\n          let didChangeNatureBecauseOfRestrictedRelation = false;\n\n          return obj\n            .update('target', () => value)\n            .update('nature', currentNature => {\n              if (targetContentTypeAllowedRelations === null) {\n                return currentNature;\n              }\n\n              if (!targetContentTypeAllowedRelations.includes(currentNature)) {\n                didChangeNatureBecauseOfRestrictedRelation = true;\n\n                return targetContentTypeAllowedRelations[0];\n              }\n\n              return currentNature;\n            })\n            .update('name', () => {\n              if (didChangeNatureBecauseOfRestrictedRelation) {\n                return pluralize(\n                  snakeCase(selectedContentTypeFriendlyName),\n                  shouldPluralizeName(targetContentTypeAllowedRelations[0])\n                );\n              }\n\n              return pluralize(\n                snakeCase(selectedContentTypeFriendlyName),\n\n                shouldPluralizeName(obj.get('nature'))\n              );\n            })\n            .update('targetAttribute', () => {\n              if (['oneWay', 'manyWay'].includes(obj.get('nature'))) {\n                return '-';\n              }\n\n              if (\n                didChangeNatureBecauseOfRestrictedRelation &&\n                ['oneWay', 'manyWay'].includes(targetContentTypeAllowedRelations[0])\n              ) {\n                return '-';\n              }\n\n              return pluralize(\n                snakeCase(oneThatIsCreatingARelationWithAnother),\n                shouldPluralizeTargetAttribute(obj.get('nature'))\n              );\n            });\n        }\n\n        return obj.updateIn(keys, () => value);\n      });\n    case actions.ON_CHANGE_ALLOWED_TYPE: {\n      if (action.name === 'all') {\n        return state.updateIn(['modifiedData', 'allowedTypes'], () => {\n          if (action.value) {\n            return fromJS(['images', 'videos', 'files']);\n          }\n\n          return null;\n        });\n      }\n\n      return state.updateIn(['modifiedData', 'allowedTypes'], currentList => {\n        let list = currentList || fromJS([]);\n\n        if (list.includes(action.name)) {\n          list = list.filter(v => v !== action.name);\n\n          if (list.size === 0) {\n            return null;\n          }\n\n          return list;\n        }\n\n        return list.push(action.name);\n      });\n    }\n    case actions.RESET_PROPS:\n      return initialState;\n    case actions.RESET_PROPS_AND_SET_FORM_FOR_ADDING_AN_EXISTING_COMPO: {\n      // This is run when the user doesn't want to create a new component\n      return initialState.update('modifiedData', () =>\n        fromJS({ type: 'component', repeatable: true, ...action.options })\n      );\n    }\n    case actions.RESET_PROPS_AND_SAVE_CURRENT_DATA: {\n      // This is run when the user has created a new component\n      const componentToCreate = state.getIn(['modifiedData', 'componentToCreate']);\n      const modifiedData = fromJS({\n        name: componentToCreate.get('name'),\n        type: 'component',\n        repeatable: false,\n        ...action.options,\n        component: createComponentUid(\n          componentToCreate.get('name'),\n          componentToCreate.get('category')\n        ),\n      });\n\n      return initialState\n        .update('componentToCreate', () => componentToCreate)\n        .update('modifiedData', () => modifiedData)\n        .update('isCreatingComponentWhileAddingAField', () =>\n          state.getIn(['modifiedData', 'createComponent'])\n        );\n    }\n    case actions.RESET_PROPS_AND_SET_THE_FORM_FOR_ADDING_A_COMPO_TO_A_DZ: {\n      const createdDZ = state.get('modifiedData');\n      const dataToSet = createdDZ\n        .set('createComponent', true)\n        .set('componentToCreate', fromJS({ type: 'component' }));\n\n      return initialState.update('modifiedData', () => dataToSet);\n    }\n    case actions.SET_DATA_TO_EDIT: {\n      return state\n        .updateIn(['modifiedData'], () => fromJS(action.data))\n        .updateIn(['initialData'], () => fromJS(action.data));\n    }\n    case actions.SET_ATTRIBUTE_DATA_SCHEMA: {\n      const {\n        attributeType,\n        isEditing,\n        modifiedDataToSetForEditing,\n        nameToSetForRelation,\n        targetUid,\n        step,\n        options = {},\n      } = action;\n\n      if (isEditing) {\n        return state\n          .update('modifiedData', () => fromJS(modifiedDataToSetForEditing))\n          .update('initialData', () => fromJS(modifiedDataToSetForEditing));\n      }\n\n      let dataToSet;\n\n      if (attributeType === 'component') {\n        if (step === '1') {\n          dataToSet = {\n            type: 'component',\n            createComponent: true,\n            componentToCreate: { type: 'component' },\n          };\n        } else {\n          dataToSet = {\n            ...options,\n            type: 'component',\n            repeatable: true,\n          };\n        }\n      } else if (attributeType === 'dynamiczone') {\n        dataToSet = {\n          ...options,\n          type: 'dynamiczone',\n          components: [],\n        };\n      } else if (attributeType === 'text') {\n        dataToSet = { ...options, type: 'string' };\n      } else if (attributeType === 'number' || attributeType === 'date') {\n        dataToSet = options;\n      } else if (attributeType === 'media') {\n        dataToSet = {\n          allowedTypes: ['images', 'files', 'videos'],\n          type: 'media',\n          multiple: true,\n          ...options,\n        };\n      } else if (attributeType === 'enumeration') {\n        dataToSet = { ...options, type: 'enumeration', enum: [] };\n      } else if (attributeType === 'relation') {\n        dataToSet = {\n          name: snakeCase(nameToSetForRelation),\n          nature: 'oneWay',\n          targetAttribute: '-',\n          target: targetUid,\n          unique: false,\n          dominant: null,\n          columnName: null,\n          targetColumnName: null,\n        };\n      } else {\n        dataToSet = { ...options, type: attributeType, default: null };\n      }\n\n      return state.update('modifiedData', () => fromJS(dataToSet));\n    }\n    case actions.SET_DYNAMIC_ZONE_DATA_SCHEMA: {\n      return state\n        .update('modifiedData', () => fromJS(action.attributeToEdit))\n        .update('initialData', () => fromJS(action.attributeToEdit));\n    }\n\n    case actions.SET_ERRORS:\n      return state.update('formErrors', () => fromJS(action.errors));\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\nexport { initialState };\n"]},"metadata":{},"sourceType":"script"}