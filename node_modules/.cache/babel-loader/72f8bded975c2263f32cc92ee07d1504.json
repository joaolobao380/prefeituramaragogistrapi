{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _lodash = require(\"lodash\");\n\nvar _getTrad = _interopRequireDefault(require(\"../../../utils/getTrad\"));\n\nvar _component = require(\"../component\");\n\nvar _attributeOptions = _interopRequireDefault(require(\"./attributeOptions\"));\n\nvar _uiHelpers = _interopRequireDefault(require(\"./uiHelpers\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar advancedForm = {\n  \"boolean\": function boolean() {\n    return {\n      items: [[{\n        autoFocus: true,\n        type: 'enum',\n        label: {\n          id: (0, _getTrad[\"default\"])('form.attribute.settings.default')\n        },\n        name: 'default',\n        options: [{\n          value: 'true',\n          label: 'TRUE'\n        }, {\n          value: '',\n          label: 'NULL'\n        }, {\n          value: 'false',\n          label: 'FALSE'\n        }],\n        validations: {}\n      }], [_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].required, _attributeOptions[\"default\"].unique], [_attributeOptions[\"default\"][\"private\"]]]\n    };\n  },\n  component: function component(_ref, step) {\n    var repeatable = _ref.repeatable;\n\n    if (step === '1') {\n      return {\n        items: _component.componentForm.advanced('componentToCreate')\n      };\n    }\n\n    if (repeatable) {\n      return {\n        items: [[_attributeOptions[\"default\"].required], [_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].max, _attributeOptions[\"default\"].min]]\n      };\n    }\n\n    return {\n      items: [[_attributeOptions[\"default\"].required]]\n    };\n  },\n  date: function date(_ref2) {\n    var type = _ref2.type;\n    return {\n      items: [[_objectSpread(_objectSpread({}, _attributeOptions[\"default\"][\"default\"]), {}, {\n        type: type || 'date',\n        value: null,\n        withDefaultValue: false,\n        disabled: !type,\n        autoFocus: false\n      })], [_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].required, _attributeOptions[\"default\"].unique], [_attributeOptions[\"default\"][\"private\"]]]\n    };\n  },\n  dynamiczone: function dynamiczone() {\n    return {\n      items: [[_attributeOptions[\"default\"].required], [_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].max, _attributeOptions[\"default\"].min]]\n    };\n  },\n  email: function email() {\n    return {\n      items: [[_objectSpread(_objectSpread({}, _attributeOptions[\"default\"][\"default\"]), {}, {\n        type: 'email'\n      })], [_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].required, _attributeOptions[\"default\"].unique], [_attributeOptions[\"default\"].maxLength, _attributeOptions[\"default\"].minLength], [_attributeOptions[\"default\"][\"private\"]]]\n    };\n  },\n  enumeration: function enumeration(data) {\n    return {\n      items: [[{\n        autoFocus: false,\n        name: 'default',\n        type: 'select',\n        label: {\n          id: (0, _getTrad[\"default\"])('form.attribute.settings.default')\n        },\n        validations: {},\n        options: [/*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n          key: \"hidden___value__placeholder\",\n          id: \"components.InputSelect.option.placeholder\"\n        }, function (msg) {\n          return /*#__PURE__*/_react[\"default\"].createElement(\"option\", {\n            value: \"\"\n          }, msg);\n        })].concat(data[\"enum\"] ? data[\"enum\"].filter(function (val, index) {\n          return data[\"enum\"].indexOf(val) === index && !(0, _lodash.isEmpty)(val);\n        }).map(function (val) {\n          return /*#__PURE__*/_react[\"default\"].createElement(\"option\", {\n            key: val,\n            value: val\n          }, val);\n        }) : [])\n      }, {\n        label: {\n          id: (0, _getTrad[\"default\"])('form.attribute.item.enumeration.graphql')\n        },\n        name: 'enumName',\n        type: 'text',\n        validations: {},\n        description: {\n          id: (0, _getTrad[\"default\"])('form.attribute.item.enumeration.graphql.description')\n        }\n      }], [_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].required, _attributeOptions[\"default\"].unique], [_attributeOptions[\"default\"][\"private\"]]]\n    };\n  },\n  json: function json() {\n    return {\n      items: [[_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].required, _attributeOptions[\"default\"].unique], [_attributeOptions[\"default\"][\"private\"]]]\n    };\n  },\n  media: function media() {\n    return {\n      items: [[_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].required, _attributeOptions[\"default\"].unique], [{\n        label: {\n          id: (0, _getTrad[\"default\"])('form.attribute.media.allowed-types')\n        },\n        name: 'allowedTypes',\n        type: 'allowedTypesSelect',\n        value: '',\n        validations: {}\n      }], [_attributeOptions[\"default\"][\"private\"]]]\n    };\n  },\n  number: function number(data) {\n    var inputStep = data.type === 'decimal' || data.type === 'float' ? 'any' : '1';\n    return {\n      items: [[{\n        autoFocus: true,\n        name: 'default',\n        type: data.type === 'biginteger' ? 'text' : 'number',\n        step: inputStep,\n        label: {\n          id: (0, _getTrad[\"default\"])('form.attribute.settings.default')\n        },\n        validations: {}\n      }], [_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].required, _attributeOptions[\"default\"].unique], [_attributeOptions[\"default\"].max, _attributeOptions[\"default\"].min], [_attributeOptions[\"default\"][\"private\"]]]\n    };\n  },\n  password: function password() {\n    return {\n      items: [[_attributeOptions[\"default\"][\"default\"]], [_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].required, _attributeOptions[\"default\"].unique], [_attributeOptions[\"default\"].maxLength, _attributeOptions[\"default\"].minLength], [_attributeOptions[\"default\"][\"private\"]]]\n    };\n  },\n  relation: function relation(data) {\n    var targetAttributeValue = (0, _lodash.get)(data, 'targetAttribute', null);\n    var nameValue = (0, _lodash.get)(data, 'name', null);\n    return {\n      items: [[_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"][\"private\"]], [_attributeOptions[\"default\"].unique], [{\n        autoFocus: false,\n        disabled: nameValue === null,\n        name: 'columnName',\n        type: 'addon',\n        addon: nameValue,\n        label: {\n          id: (0, _getTrad[\"default\"])('form.attribute.item.customColumnName')\n        },\n        inputDescription: {\n          id: (0, _getTrad[\"default\"])('form.attribute.item.customColumnName.description')\n        },\n        validations: {}\n      }, {\n        autoFocus: false,\n        disabled: targetAttributeValue === null || targetAttributeValue === '-',\n        name: 'targetColumnName',\n        label: '',\n        type: 'addon',\n        addon: targetAttributeValue,\n        validations: {}\n      }]]\n    };\n  },\n  richtext: function richtext() {\n    return {\n      items: [[_attributeOptions[\"default\"][\"default\"]], [_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].required, _attributeOptions[\"default\"].unique], [_attributeOptions[\"default\"].maxLength, _attributeOptions[\"default\"].minLength], [_attributeOptions[\"default\"][\"private\"]]]\n    };\n  },\n  text: function text() {\n    return {\n      items: [[_attributeOptions[\"default\"][\"default\"], _attributeOptions[\"default\"].regex], [_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].required, _attributeOptions[\"default\"].unique], [_attributeOptions[\"default\"].maxLength, _attributeOptions[\"default\"].minLength], [_attributeOptions[\"default\"][\"private\"]]]\n    };\n  },\n  uid: function uid(data) {\n    return {\n      items: [[_objectSpread(_objectSpread({}, _attributeOptions[\"default\"][\"default\"]), {}, {\n        disabled: Boolean(data.targetField),\n        type: 'text'\n      })], [_uiHelpers[\"default\"].divider], [_attributeOptions[\"default\"].required], [_attributeOptions[\"default\"].maxLength, _attributeOptions[\"default\"].minLength], [_attributeOptions[\"default\"][\"private\"]]]\n    };\n  }\n};\nvar _default = advancedForm;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-type-builder/admin/src/containers/FormModal/attributes/advancedForm.js"],"names":["advancedForm","items","autoFocus","type","label","id","name","options","value","validations","uiHelpers","divider","required","unique","component","step","repeatable","componentForm","advanced","max","min","date","withDefaultValue","disabled","dynamiczone","email","maxLength","minLength","enumeration","data","msg","concat","filter","val","index","indexOf","map","description","json","media","number","inputStep","password","relation","targetAttributeValue","nameValue","addon","inputDescription","richtext","text","regex","uid","Boolean","targetField"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { get, isEmpty } from 'lodash';\nimport getTrad from '../../../utils/getTrad';\nimport { componentForm } from '../component';\nimport options from './attributeOptions';\nimport uiHelpers from './uiHelpers';\n\nconst advancedForm = {\n  boolean: () => {\n    return {\n      items: [\n        [\n          {\n            autoFocus: true,\n            type: 'enum',\n            label: {\n              id: getTrad('form.attribute.settings.default'),\n            },\n            name: 'default',\n            options: [\n              { value: 'true', label: 'TRUE' },\n              { value: '', label: 'NULL' },\n              { value: 'false', label: 'FALSE' },\n            ],\n            validations: {},\n          },\n        ],\n        [uiHelpers.divider],\n        [options.required, options.unique],\n        [options.private],\n      ],\n    };\n  },\n  component: ({ repeatable }, step) => {\n    if (step === '1') {\n      return { items: componentForm.advanced('componentToCreate') };\n    }\n\n    if (repeatable) {\n      return { items: [[options.required], [uiHelpers.divider], [options.max, options.min]] };\n    }\n\n    return {\n      items: [[options.required]],\n    };\n  },\n  date: ({ type }) => {\n    return {\n      items: [\n        [\n          {\n            ...options.default,\n            type: type || 'date',\n            value: null,\n            withDefaultValue: false,\n            disabled: !type,\n            autoFocus: false,\n          },\n        ],\n        [uiHelpers.divider],\n        [options.required, options.unique],\n        [options.private],\n      ],\n    };\n  },\n  dynamiczone: () => {\n    return {\n      items: [[options.required], [uiHelpers.divider], [options.max, options.min]],\n    };\n  },\n  email: () => {\n    return {\n      items: [\n        [\n          {\n            ...options.default,\n            type: 'email',\n          },\n        ],\n        [uiHelpers.divider],\n        [options.required, options.unique],\n        [options.maxLength, options.minLength],\n        [options.private],\n      ],\n    };\n  },\n  enumeration: data => {\n    return {\n      items: [\n        [\n          {\n            autoFocus: false,\n            name: 'default',\n            type: 'select',\n            label: {\n              id: getTrad('form.attribute.settings.default'),\n            },\n            validations: {},\n            options: [\n              <FormattedMessage\n                key=\"hidden___value__placeholder\"\n                id=\"components.InputSelect.option.placeholder\"\n              >\n                {msg => <option value=\"\">{msg}</option>}\n              </FormattedMessage>,\n            ].concat(\n              data.enum\n                ? data.enum\n                    .filter((val, index) => data.enum.indexOf(val) === index && !isEmpty(val))\n                    .map(val => (\n                      <option key={val} value={val}>\n                        {val}\n                      </option>\n                    ))\n                : []\n            ),\n          },\n          {\n            label: {\n              id: getTrad('form.attribute.item.enumeration.graphql'),\n            },\n            name: 'enumName',\n            type: 'text',\n            validations: {},\n            description: {\n              id: getTrad('form.attribute.item.enumeration.graphql.description'),\n            },\n          },\n        ],\n        [uiHelpers.divider],\n        [options.required, options.unique],\n        [options.private],\n      ],\n    };\n  },\n  json: () => {\n    return {\n      items: [[uiHelpers.divider], [options.required, options.unique], [options.private]],\n    };\n  },\n  media: () => {\n    return {\n      items: [\n        [uiHelpers.divider],\n        [options.required, options.unique],\n        [\n          {\n            label: {\n              id: getTrad('form.attribute.media.allowed-types'),\n            },\n            name: 'allowedTypes',\n            type: 'allowedTypesSelect',\n            value: '',\n            validations: {},\n          },\n        ],\n        [options.private],\n      ],\n    };\n  },\n  number: data => {\n    const inputStep = data.type === 'decimal' || data.type === 'float' ? 'any' : '1';\n\n    return {\n      items: [\n        [\n          {\n            autoFocus: true,\n            name: 'default',\n            type: data.type === 'biginteger' ? 'text' : 'number',\n            step: inputStep,\n            label: {\n              id: getTrad('form.attribute.settings.default'),\n            },\n            validations: {},\n          },\n        ],\n        [uiHelpers.divider],\n        [options.required, options.unique],\n        [options.max, options.min],\n        [options.private],\n      ],\n    };\n  },\n  password: () => {\n    return {\n      items: [\n        [options.default],\n        [uiHelpers.divider],\n        [options.required, options.unique],\n        [options.maxLength, options.minLength],\n        [options.private],\n      ],\n    };\n  },\n  relation: data => {\n    const targetAttributeValue = get(data, 'targetAttribute', null);\n    const nameValue = get(data, 'name', null);\n\n    return {\n      items: [\n        [uiHelpers.divider],\n        [options.private],\n        [options.unique],\n        [\n          {\n            autoFocus: false,\n            disabled: nameValue === null,\n            name: 'columnName',\n            type: 'addon',\n            addon: nameValue,\n            label: {\n              id: getTrad('form.attribute.item.customColumnName'),\n            },\n            inputDescription: {\n              id: getTrad('form.attribute.item.customColumnName.description'),\n            },\n            validations: {},\n          },\n          {\n            autoFocus: false,\n            disabled: targetAttributeValue === null || targetAttributeValue === '-',\n            name: 'targetColumnName',\n            label: '',\n            type: 'addon',\n            addon: targetAttributeValue,\n            validations: {},\n          },\n        ],\n      ],\n    };\n  },\n  richtext: () => {\n    return {\n      items: [\n        [options.default],\n        [uiHelpers.divider],\n        [options.required, options.unique],\n        [options.maxLength, options.minLength],\n        [options.private],\n      ],\n    };\n  },\n  text: () => {\n    return {\n      items: [\n        [options.default, options.regex],\n        [uiHelpers.divider],\n        [options.required, options.unique],\n        [options.maxLength, options.minLength],\n        [options.private],\n      ],\n    };\n  },\n  uid: data => {\n    return {\n      items: [\n        [{ ...options.default, disabled: Boolean(data.targetField), type: 'text' }],\n        [uiHelpers.divider],\n        [options.required],\n        [options.maxLength, options.minLength],\n        [options.private],\n      ],\n    };\n  },\n};\n\nexport default advancedForm;\n"]},"metadata":{},"sourceType":"script"}