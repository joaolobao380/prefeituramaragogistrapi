{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _reactDnd = require(\"react-dnd\");\n\nvar _reactstrap = require(\"reactstrap\");\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _PopupForm = _interopRequireDefault(require(\"../../components/PopupForm\"));\n\nvar _SettingsViewWrapper = _interopRequireDefault(require(\"../../components/SettingsViewWrapper\"));\n\nvar _SortWrapper = _interopRequireDefault(require(\"../../components/SortWrapper\"));\n\nvar _LayoutDndProvider = _interopRequireDefault(require(\"../LayoutDndProvider\"));\n\nvar _Label = _interopRequireDefault(require(\"./Label\"));\n\nvar _MenuDropdown = _interopRequireDefault(require(\"./MenuDropdown\"));\n\nvar _DropdownButton = _interopRequireDefault(require(\"./DropdownButton\"));\n\nvar _DragWrapper = _interopRequireDefault(require(\"./DragWrapper\"));\n\nvar _Toggle = _interopRequireDefault(require(\"./Toggle\"));\n\nvar _init = _interopRequireDefault(require(\"./init\"));\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nvar _forms = _interopRequireDefault(require(\"./forms.json\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ListSettingsView = function ListSettingsView(_ref) {\n  var layout = _ref.layout,\n      slug = _ref.slug,\n      updateLayout = _ref.updateLayout;\n\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState, function () {\n    return (0, _init[\"default\"])(_reducer.initialState, layout);\n  }),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      reducerState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      isModalFormOpen = _useState4[0],\n      setIsModalFormOpen = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      isDraggingSibling = _useState6[0],\n      setIsDraggingSibling = _useState6[1];\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      emitEvent = _useGlobalContext.emitEvent,\n      updateMenu = _useGlobalContext.updateMenu;\n\n  var toggleModalForm = function toggleModalForm() {\n    return setIsModalFormOpen(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var _reducerState$toJS = reducerState.toJS(),\n      labelForm = _reducerState$toJS.labelForm,\n      labelToEdit = _reducerState$toJS.labelToEdit,\n      initialData = _reducerState$toJS.initialData,\n      modifiedData = _reducerState$toJS.modifiedData;\n\n  var attributes = (0, _react.useMemo)(function () {\n    return (0, _lodash.get)(modifiedData, ['attributes'], {});\n  }, [modifiedData]);\n  var getName = (0, _react.useMemo)(function () {\n    return (0, _lodash.get)(modifiedData, ['info', 'name'], '');\n  }, [modifiedData]);\n  var displayedFields = (0, _react.useMemo)(function () {\n    return (0, _lodash.get)(modifiedData, ['layouts', 'list'], []);\n  }, [modifiedData]);\n  var listRemainingFields = (0, _react.useMemo)(function () {\n    var metadatas = (0, _lodash.get)(modifiedData, ['metadatas'], {});\n    return Object.keys(metadatas).filter(function (key) {\n      return (0, _utils.checkIfAttributeIsDisplayable)((0, _lodash.get)(attributes, key, {}));\n    }).filter(function (field) {\n      return !displayedFields.includes(field);\n    }).sort();\n  }, [displayedFields, attributes, modifiedData]);\n\n  var handleClickEditLabel = function handleClickEditLabel(labelToEdit) {\n    dispatch({\n      type: 'SET_LABEL_TO_EDIT',\n      labelToEdit: labelToEdit\n    });\n    toggleModalForm();\n  };\n\n  var handleClosed = function handleClosed() {\n    dispatch({\n      type: 'UNSET_LABEL_TO_EDIT'\n    });\n  };\n\n  var handleChange = function handleChange(_ref2) {\n    var _ref2$target = _ref2.target,\n        name = _ref2$target.name,\n        value = _ref2$target.value;\n    dispatch({\n      type: 'ON_CHANGE',\n      keys: name,\n      value: name === 'settings.pageSize' ? parseInt(value, 10) : value\n    });\n  };\n\n  var handleChangeEditLabel = function handleChangeEditLabel(_ref3) {\n    var _ref3$target = _ref3.target,\n        name = _ref3$target.name,\n        value = _ref3$target.value;\n    dispatch({\n      type: 'ON_CHANGE_LABEL_METAS',\n      name: name,\n      value: value\n    });\n  };\n\n  var handleConfirm = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var body, response;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              body = (0, _lodash.pick)(modifiedData, ['layouts', 'settings', 'metadatas']);\n              _context.next = 4;\n              return (0, _strapiHelperPlugin.request)((0, _utils.getRequestUrl)(\"content-types/\".concat(slug, \"/configuration\")), {\n                method: 'PUT',\n                body: body\n              });\n\n            case 4:\n              response = _context.sent;\n              updateLayout(response.data);\n              dispatch({\n                type: 'SUBMIT_SUCCEEDED'\n              });\n              emitEvent('didEditListSettings');\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function handleConfirm() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var move = function move(originalIndex, atIndex) {\n    dispatch({\n      type: 'MOVE_FIELD',\n      originalIndex: originalIndex,\n      atIndex: atIndex\n    });\n  };\n\n  var _useDrop = (0, _reactDnd.useDrop)({\n    accept: _utils.ItemTypes.FIELD\n  }),\n      _useDrop2 = (0, _slicedToArray2[\"default\"])(_useDrop, 2),\n      drop = _useDrop2[1];\n\n  var renderForm = function renderForm() {\n    var type = (0, _lodash.get)(attributes, [labelToEdit, 'type'], 'text');\n    var relationType = (0, _lodash.get)(attributes, [labelToEdit, 'relationType']);\n    var shouldDisplaySortToggle = !['media', 'relation'].includes(type);\n    var label = formatMessage({\n      id: \"\".concat(_pluginId[\"default\"], \".form.Input.label\")\n    });\n    var description = formatMessage({\n      id: \"\".concat(_pluginId[\"default\"], \".form.Input.label.inputDescription\")\n    });\n\n    if (['oneWay', 'oneToOne', 'manyToOne'].includes(relationType)) {\n      shouldDisplaySortToggle = true;\n    }\n\n    return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"col-6\",\n      style: {\n        marginBottom: 4\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(_custom.Inputs, {\n      description: description,\n      label: label,\n      type: \"text\",\n      name: \"label\",\n      onBlur: function onBlur() {},\n      value: (0, _lodash.get)(labelForm, 'label', ''),\n      onChange: handleChangeEditLabel\n    })), shouldDisplaySortToggle && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"col-6\",\n      style: {\n        marginBottom: 4\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n      id: \"\".concat(_pluginId[\"default\"], \".form.Input.sort.field\")\n    }, function (label) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_custom.Inputs, {\n        label: label,\n        type: \"bool\",\n        name: \"sortable\",\n        value: (0, _lodash.get)(labelForm, 'sortable', false),\n        onChange: handleChangeEditLabel\n      });\n    })));\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_LayoutDndProvider[\"default\"], {\n    isDraggingSibling: isDraggingSibling,\n    setIsDraggingSibling: setIsDraggingSibling\n  }, /*#__PURE__*/_react[\"default\"].createElement(_SettingsViewWrapper[\"default\"], {\n    displayedFields: displayedFields,\n    inputs: _forms[\"default\"],\n    isLoading: false,\n    initialData: initialData,\n    modifiedData: modifiedData,\n    onChange: handleChange,\n    onConfirmReset: function onConfirmReset() {\n      dispatch({\n        type: 'ON_RESET'\n      });\n    },\n    onConfirmSubmit: handleConfirm,\n    onModalConfirmClosed: updateMenu,\n    name: getName\n  }, /*#__PURE__*/_react[\"default\"].createElement(_DragWrapper[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"row\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"col-12\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_SortWrapper[\"default\"], {\n    ref: drop,\n    style: {\n      display: 'flex',\n      width: '100%'\n    }\n  }, displayedFields.map(function (item, index) {\n    var label = (0, _lodash.get)(modifiedData, ['metadatas', item, 'list', 'label'], '');\n    return /*#__PURE__*/_react[\"default\"].createElement(_Label[\"default\"], {\n      count: displayedFields.length,\n      key: item,\n      index: index,\n      isDraggingSibling: isDraggingSibling,\n      label: label,\n      move: move,\n      name: item,\n      onClick: handleClickEditLabel,\n      onRemove: function onRemove(e) {\n        e.stopPropagation();\n\n        if (displayedFields.length === 1) {\n          strapi.notification.toggle({\n            type: 'info',\n            message: {\n              id: \"\".concat(_pluginId[\"default\"], \".notification.info.minimumFields\")\n            }\n          });\n        } else {\n          dispatch({\n            type: 'REMOVE_FIELD',\n            index: index\n          });\n        }\n      },\n      selectedItem: labelToEdit,\n      setIsDraggingSibling: setIsDraggingSibling\n    });\n  })))), /*#__PURE__*/_react[\"default\"].createElement(_DropdownButton[\"default\"], {\n    isOpen: isOpen,\n    toggle: function toggle() {\n      if (listRemainingFields.length > 0) {\n        setIsOpen(function (prevState) {\n          return !prevState;\n        });\n      }\n    },\n    direction: \"down\",\n    style: {\n      position: 'absolute',\n      top: 11,\n      right: 10\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Toggle[\"default\"], {\n    disabled: listRemainingFields.length === 0\n  }), /*#__PURE__*/_react[\"default\"].createElement(_MenuDropdown[\"default\"], null, listRemainingFields.map(function (item) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_reactstrap.DropdownItem, {\n      key: item,\n      onClick: function onClick() {\n        dispatch({\n          type: 'ADD_FIELD',\n          item: item\n        });\n      }\n    }, item);\n  }))))), /*#__PURE__*/_react[\"default\"].createElement(_PopupForm[\"default\"], {\n    headerId: \"\".concat(_pluginId[\"default\"], \".containers.ListSettingsView.modal-form.edit-label\"),\n    isOpen: isModalFormOpen,\n    onClosed: handleClosed,\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      toggleModalForm();\n      dispatch({\n        type: 'SUBMIT_LABEL_FORM'\n      });\n    },\n    onToggle: toggleModalForm,\n    renderForm: renderForm,\n    subHeaderContent: labelToEdit,\n    type: (0, _lodash.get)(attributes, [labelToEdit, 'type'], 'text')\n  }));\n};\n\nListSettingsView.propTypes = {\n  layout: _propTypes[\"default\"].shape({\n    uid: _propTypes[\"default\"].string.isRequired,\n    settings: _propTypes[\"default\"].object.isRequired,\n    metadatas: _propTypes[\"default\"].object.isRequired,\n    options: _propTypes[\"default\"].object.isRequired,\n    attributes: _propTypes[\"default\"].object.isRequired\n  }).isRequired,\n  slug: _propTypes[\"default\"].string.isRequired,\n  updateLayout: _propTypes[\"default\"].func.isRequired\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(ListSettingsView);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/ListSettingsView/index.js"],"names":["ListSettingsView","layout","slug","updateLayout","reducer","initialState","reducerState","dispatch","isOpen","setIsOpen","isModalFormOpen","setIsModalFormOpen","isDraggingSibling","setIsDraggingSibling","formatMessage","emitEvent","updateMenu","toggleModalForm","prevState","toJS","labelForm","labelToEdit","initialData","modifiedData","attributes","getName","displayedFields","listRemainingFields","metadatas","Object","keys","filter","key","field","includes","sort","handleClickEditLabel","type","handleClosed","handleChange","target","name","value","parseInt","handleChangeEditLabel","handleConfirm","body","method","response","data","strapi","notification","toggle","message","id","move","originalIndex","atIndex","accept","ItemTypes","FIELD","drop","renderForm","relationType","shouldDisplaySortToggle","label","pluginId","description","marginBottom","forms","display","width","map","item","index","length","e","stopPropagation","position","top","right","preventDefault","propTypes","PropTypes","shape","uid","string","isRequired","settings","object","options","func"],"mappings":"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","sourcesContent":["import React, { memo, useMemo, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { get, pick } from 'lodash';\nimport { request, useGlobalContext } from 'strapi-helper-plugin';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useDrop } from 'react-dnd';\nimport { DropdownItem } from 'reactstrap';\nimport { Inputs as Input } from '@buffetjs/custom';\nimport pluginId from '../../pluginId';\nimport { checkIfAttributeIsDisplayable, ItemTypes, getRequestUrl } from '../../utils';\nimport PopupForm from '../../components/PopupForm';\nimport SettingsViewWrapper from '../../components/SettingsViewWrapper';\nimport SortWrapper from '../../components/SortWrapper';\nimport LayoutDndProvider from '../LayoutDndProvider';\nimport Label from './Label';\nimport MenuDropdown from './MenuDropdown';\nimport DropdownButton from './DropdownButton';\nimport DragWrapper from './DragWrapper';\nimport Toggle from './Toggle';\nimport init from './init';\nimport reducer, { initialState } from './reducer';\nimport forms from './forms.json';\n\nconst ListSettingsView = ({ layout, slug, updateLayout }) => {\n  const [reducerState, dispatch] = useReducer(reducer, initialState, () =>\n    init(initialState, layout)\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [isModalFormOpen, setIsModalFormOpen] = useState(false);\n  const [isDraggingSibling, setIsDraggingSibling] = useState(false);\n  const { formatMessage } = useIntl();\n  const { emitEvent, updateMenu } = useGlobalContext();\n  const toggleModalForm = () => setIsModalFormOpen(prevState => !prevState);\n  const { labelForm, labelToEdit, initialData, modifiedData } = reducerState.toJS();\n  const attributes = useMemo(() => {\n    return get(modifiedData, ['attributes'], {});\n  }, [modifiedData]);\n\n  const getName = useMemo(() => {\n    return get(modifiedData, ['info', 'name'], '');\n  }, [modifiedData]);\n\n  const displayedFields = useMemo(() => {\n    return get(modifiedData, ['layouts', 'list'], []);\n  }, [modifiedData]);\n\n  const listRemainingFields = useMemo(() => {\n    const metadatas = get(modifiedData, ['metadatas'], {});\n\n    return Object.keys(metadatas)\n      .filter(key => {\n        return checkIfAttributeIsDisplayable(get(attributes, key, {}));\n      })\n      .filter(field => {\n        return !displayedFields.includes(field);\n      })\n      .sort();\n  }, [displayedFields, attributes, modifiedData]);\n\n  const handleClickEditLabel = labelToEdit => {\n    dispatch({\n      type: 'SET_LABEL_TO_EDIT',\n      labelToEdit,\n    });\n    toggleModalForm();\n  };\n\n  const handleClosed = () => {\n    dispatch({\n      type: 'UNSET_LABEL_TO_EDIT',\n    });\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    dispatch({\n      type: 'ON_CHANGE',\n      keys: name,\n      value: name === 'settings.pageSize' ? parseInt(value, 10) : value,\n    });\n  };\n\n  const handleChangeEditLabel = ({ target: { name, value } }) => {\n    dispatch({\n      type: 'ON_CHANGE_LABEL_METAS',\n      name,\n      value,\n    });\n  };\n\n  const handleConfirm = async () => {\n    try {\n      const body = pick(modifiedData, ['layouts', 'settings', 'metadatas']);\n\n      const response = await request(getRequestUrl(`content-types/${slug}/configuration`), {\n        method: 'PUT',\n        body,\n      });\n\n      updateLayout(response.data);\n\n      dispatch({\n        type: 'SUBMIT_SUCCEEDED',\n      });\n      emitEvent('didEditListSettings');\n    } catch (err) {\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n    }\n  };\n\n  const move = (originalIndex, atIndex) => {\n    dispatch({\n      type: 'MOVE_FIELD',\n      originalIndex,\n      atIndex,\n    });\n  };\n\n  const [, drop] = useDrop({ accept: ItemTypes.FIELD });\n\n  const renderForm = () => {\n    const type = get(attributes, [labelToEdit, 'type'], 'text');\n    const relationType = get(attributes, [labelToEdit, 'relationType']);\n    let shouldDisplaySortToggle = !['media', 'relation'].includes(type);\n    const label = formatMessage({ id: `${pluginId}.form.Input.label` });\n    const description = formatMessage({ id: `${pluginId}.form.Input.label.inputDescription` });\n\n    if (['oneWay', 'oneToOne', 'manyToOne'].includes(relationType)) {\n      shouldDisplaySortToggle = true;\n    }\n\n    return (\n      <>\n        <div className=\"col-6\" style={{ marginBottom: 4 }}>\n          <Input\n            description={description}\n            label={label}\n            type=\"text\"\n            name=\"label\"\n            onBlur={() => {}}\n            value={get(labelForm, 'label', '')}\n            onChange={handleChangeEditLabel}\n          />\n        </div>\n        {shouldDisplaySortToggle && (\n          <div className=\"col-6\" style={{ marginBottom: 4 }}>\n            <FormattedMessage id={`${pluginId}.form.Input.sort.field`}>\n              {label => (\n                <Input\n                  label={label}\n                  type=\"bool\"\n                  name=\"sortable\"\n                  value={get(labelForm, 'sortable', false)}\n                  onChange={handleChangeEditLabel}\n                />\n              )}\n            </FormattedMessage>\n          </div>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <LayoutDndProvider\n      isDraggingSibling={isDraggingSibling}\n      setIsDraggingSibling={setIsDraggingSibling}\n    >\n      <SettingsViewWrapper\n        displayedFields={displayedFields}\n        inputs={forms}\n        isLoading={false}\n        initialData={initialData}\n        modifiedData={modifiedData}\n        onChange={handleChange}\n        onConfirmReset={() => {\n          dispatch({\n            type: 'ON_RESET',\n          });\n        }}\n        onConfirmSubmit={handleConfirm}\n        onModalConfirmClosed={updateMenu}\n        name={getName}\n      >\n        <DragWrapper>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <SortWrapper\n                ref={drop}\n                style={{\n                  display: 'flex',\n                  width: '100%',\n                }}\n              >\n                {displayedFields.map((item, index) => {\n                  const label = get(modifiedData, ['metadatas', item, 'list', 'label'], '');\n\n                  return (\n                    <Label\n                      count={displayedFields.length}\n                      key={item}\n                      index={index}\n                      isDraggingSibling={isDraggingSibling}\n                      label={label}\n                      move={move}\n                      name={item}\n                      onClick={handleClickEditLabel}\n                      onRemove={e => {\n                        e.stopPropagation();\n\n                        if (displayedFields.length === 1) {\n                          strapi.notification.toggle({\n                            type: 'info',\n                            message: { id: `${pluginId}.notification.info.minimumFields` },\n                          });\n                        } else {\n                          dispatch({\n                            type: 'REMOVE_FIELD',\n                            index,\n                          });\n                        }\n                      }}\n                      selectedItem={labelToEdit}\n                      setIsDraggingSibling={setIsDraggingSibling}\n                    />\n                  );\n                })}\n              </SortWrapper>\n            </div>\n          </div>\n          <DropdownButton\n            isOpen={isOpen}\n            toggle={() => {\n              if (listRemainingFields.length > 0) {\n                setIsOpen(prevState => !prevState);\n              }\n            }}\n            direction=\"down\"\n            style={{\n              position: 'absolute',\n              top: 11,\n              right: 10,\n            }}\n          >\n            <Toggle disabled={listRemainingFields.length === 0} />\n            <MenuDropdown>\n              {listRemainingFields.map(item => (\n                <DropdownItem\n                  key={item}\n                  onClick={() => {\n                    dispatch({\n                      type: 'ADD_FIELD',\n                      item,\n                    });\n                  }}\n                >\n                  {item}\n                </DropdownItem>\n              ))}\n            </MenuDropdown>\n          </DropdownButton>\n        </DragWrapper>\n      </SettingsViewWrapper>\n      <PopupForm\n        headerId={`${pluginId}.containers.ListSettingsView.modal-form.edit-label`}\n        isOpen={isModalFormOpen}\n        onClosed={handleClosed}\n        onSubmit={e => {\n          e.preventDefault();\n          toggleModalForm();\n          dispatch({\n            type: 'SUBMIT_LABEL_FORM',\n          });\n        }}\n        onToggle={toggleModalForm}\n        renderForm={renderForm}\n        subHeaderContent={labelToEdit}\n        type={get(attributes, [labelToEdit, 'type'], 'text')}\n      />\n    </LayoutDndProvider>\n  );\n};\n\nListSettingsView.propTypes = {\n  layout: PropTypes.shape({\n    uid: PropTypes.string.isRequired,\n    settings: PropTypes.object.isRequired,\n    metadatas: PropTypes.object.isRequired,\n    options: PropTypes.object.isRequired,\n    attributes: PropTypes.object.isRequired,\n  }).isRequired,\n  slug: PropTypes.string.isRequired,\n  updateLayout: PropTypes.func.isRequired,\n};\n\nexport default memo(ListSettingsView);\n"]},"metadata":{},"sourceType":"script"}