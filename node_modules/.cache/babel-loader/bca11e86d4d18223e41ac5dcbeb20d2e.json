{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _FieldsReorder = _interopRequireDefault(require(\"../../components/FieldsReorder\"));\n\nvar _FormTitle = _interopRequireDefault(require(\"../../components/FormTitle\"));\n\nvar _LayoutTitle = _interopRequireDefault(require(\"../../components/LayoutTitle\"));\n\nvar _PopupForm = _interopRequireDefault(require(\"../../components/PopupForm\"));\n\nvar _SettingsViewWrapper = _interopRequireDefault(require(\"../../components/SettingsViewWrapper\"));\n\nvar _SortableList = _interopRequireDefault(require(\"../../components/SortableList\"));\n\nvar _selectors = require(\"../Main/selectors\");\n\nvar _LayoutDndProvider = _interopRequireDefault(require(\"../LayoutDndProvider\"));\n\nvar _init = _interopRequireDefault(require(\"./init\"));\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nvar _utils2 = require(\"./utils\");\n\nvar _layout = require(\"./utils/layout\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar EditSettingsView = function EditSettingsView(_ref) {\n  var components = _ref.components,\n      mainLayout = _ref.mainLayout,\n      isContentTypeView = _ref.isContentTypeView,\n      slug = _ref.slug,\n      updateLayout = _ref.updateLayout;\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      currentEnvironment = _useGlobalContext.currentEnvironment,\n      emitEvent = _useGlobalContext.emitEvent,\n      plugins = _useGlobalContext.plugins;\n\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState, function () {\n    return (0, _init[\"default\"])(_reducer.initialState, mainLayout, components);\n  }),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      reducerState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isModalFormOpen = _useState2[0],\n      setIsModalFormOpen = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      isDraggingSibling = _useState4[0],\n      setIsDraggingSibling = _useState4[1];\n\n  var schemasSelector = (0, _react.useMemo)(_selectors.makeSelectModelAndComponentSchemas, []);\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n    return schemasSelector(state);\n  }, _reactRedux.shallowEqual),\n      schemas = _useSelector.schemas;\n\n  var _reducerState$toJS = reducerState.toJS(),\n      componentLayouts = _reducerState$toJS.componentLayouts,\n      initialData = _reducerState$toJS.initialData,\n      metaToEdit = _reducerState$toJS.metaToEdit,\n      modifiedData = _reducerState$toJS.modifiedData,\n      metaForm = _reducerState$toJS.metaForm;\n\n  var componentsAndModelsPossibleMainFields = (0, _react.useMemo)(function () {\n    return (0, _utils2.createPossibleMainFieldsForModelsAndComponents)(schemas);\n  }, [schemas]);\n  var fieldsReorderClassName = isContentTypeView ? 'col-8' : 'col-12';\n  var attributes = (0, _react.useMemo)(function () {\n    return (0, _lodash.get)(modifiedData, 'attributes', {});\n  }, [modifiedData]);\n  var editLayout = modifiedData.layouts.edit;\n  var relationsLayout = modifiedData.layouts.editRelations;\n  var editRelationsLayoutRemainingFields = (0, _react.useMemo)(function () {\n    return Object.keys(attributes).filter(function (attr) {\n      return attributes[attr].type === 'relation';\n    }).filter(function (attr) {\n      return relationsLayout.indexOf(attr) === -1;\n    });\n  }, [attributes, relationsLayout]);\n  var formToDisplay = (0, _react.useMemo)(function () {\n    if (!metaToEdit) {\n      return [];\n    }\n\n    var associatedMetas = (0, _lodash.get)(modifiedData, ['metadatas', metaToEdit, 'edit'], {});\n    return Object.keys(associatedMetas).filter(function (meta) {\n      return meta !== 'visible';\n    });\n  }, [metaToEdit, modifiedData]);\n  var editLayoutRemainingFields = (0, _react.useMemo)(function () {\n    var displayedFields = (0, _lodash.flatMap)(modifiedData.layouts.edit, 'rowContent');\n    return Object.keys(modifiedData.attributes).filter(function (attr) {\n      if (!isContentTypeView) {\n        return true;\n      }\n\n      return (0, _lodash.get)(modifiedData, ['attributes', attr, 'type'], '') !== 'relation';\n    }).filter(function (attr) {\n      return (0, _lodash.get)(modifiedData, ['metadatas', attr, 'edit', 'visible'], false) === true;\n    }).filter(function (attr) {\n      return displayedFields.findIndex(function (el) {\n        return el.name === attr;\n      }) === -1;\n    }).sort();\n  }, [isContentTypeView, modifiedData]);\n  var getSelectedItemSelectOptions = (0, _react.useCallback)(function (formType) {\n    if (formType !== 'relation' && formType !== 'component') {\n      return [];\n    }\n\n    var targetKey = formType === 'component' ? 'component' : 'targetModel';\n    var key = (0, _lodash.get)(modifiedData, ['attributes', metaToEdit, targetKey], '');\n    return (0, _lodash.get)(componentsAndModelsPossibleMainFields, [key], []);\n  }, [metaToEdit, componentsAndModelsPossibleMainFields, modifiedData]);\n\n  var handleChange = function handleChange(_ref2) {\n    var _ref2$target = _ref2.target,\n        name = _ref2$target.name,\n        value = _ref2$target.value;\n    dispatch({\n      type: 'ON_CHANGE',\n      keys: name.split('.'),\n      value: value\n    });\n  };\n\n  var handleChangeMeta = function handleChangeMeta(_ref3) {\n    var _ref3$target = _ref3.target,\n        name = _ref3$target.name,\n        value = _ref3$target.value;\n    dispatch({\n      type: 'ON_CHANGE_META',\n      keys: name.split('.'),\n      value: value\n    });\n  };\n\n  var handleConfirm = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var body, requestURL, response;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              body = (0, _lodash.pick)((0, _lodash.cloneDeep)(modifiedData), ['layouts', 'metadatas', 'settings']); // We need to send the unformated edit layout\n\n              (0, _lodash.set)(body, 'layouts.edit', (0, _layout.unformatLayout)(body.layouts.edit));\n              requestURL = isContentTypeView ? (0, _utils.getRequestUrl)(\"content-types/\".concat(slug, \"/configuration\")) : (0, _utils.getRequestUrl)(\"components/\".concat(slug, \"/configuration\"));\n              _context.next = 6;\n              return (0, _strapiHelperPlugin.request)(requestURL, {\n                method: 'PUT',\n                body: body\n              });\n\n            case 6:\n              response = _context.sent;\n\n              if (updateLayout) {\n                updateLayout(response.data);\n              }\n\n              dispatch({\n                type: 'SUBMIT_SUCCEEDED'\n              });\n              emitEvent('didEditEditSettings');\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              strapi.notification.error('notification.error');\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function handleConfirm() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmitMetaForm = function handleSubmitMetaForm(e) {\n    e.preventDefault();\n    dispatch({\n      type: 'SUBMIT_META_FORM'\n    });\n    toggleModalForm();\n  };\n\n  var moveItem = function moveItem(dragIndex, hoverIndex, dragRowIndex, hoverRowIndex) {\n    // Same row = just reorder\n    if (dragRowIndex === hoverRowIndex) {\n      dispatch({\n        type: 'REORDER_ROW',\n        dragRowIndex: dragRowIndex,\n        dragIndex: dragIndex,\n        hoverIndex: hoverIndex\n      });\n    } else {\n      dispatch({\n        type: 'REORDER_DIFF_ROW',\n        dragIndex: dragIndex,\n        hoverIndex: hoverIndex,\n        dragRowIndex: dragRowIndex,\n        hoverRowIndex: hoverRowIndex\n      });\n    }\n  };\n\n  var moveRow = function moveRow(dragRowIndex, hoverRowIndex) {\n    dispatch({\n      type: 'MOVE_ROW',\n      dragRowIndex: dragRowIndex,\n      hoverRowIndex: hoverRowIndex\n    });\n  };\n\n  var toggleModalForm = function toggleModalForm() {\n    setIsModalFormOpen(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var renderForm = function renderForm() {\n    return formToDisplay.map(function (meta, index) {\n      var formType = (0, _lodash.get)(attributes, [metaToEdit, 'type']);\n\n      if (formType === 'dynamiczone' && !['label', 'description'].includes(meta)) {\n        return null;\n      }\n\n      if ((formType === 'component' || formType === 'media') && meta !== 'label') {\n        return null;\n      }\n\n      if ((formType === 'json' || formType === 'boolean') && meta === 'placeholder') {\n        return null;\n      }\n\n      if (formType === 'richtext' && meta === 'editable') {\n        return null;\n      }\n\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"col-6\",\n        key: meta\n      }, /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n        id: \"\".concat(_pluginId[\"default\"], \".containers.SettingPage.editSettings.relation-field.description\")\n      }, function (description) {\n        return /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n          id: (0, _lodash.get)((0, _utils2.getInputProps)(meta), 'label.id', 'app.utils.defaultMessage')\n        }, function (label) {\n          return /*#__PURE__*/_react[\"default\"].createElement(_custom.Inputs, {\n            autoFocus: index === 0,\n            description: meta === 'mainField' ? description : '',\n            label: label,\n            name: meta,\n            type: (0, _utils2.getInputProps)(meta).type,\n            value: (0, _lodash.get)(metaForm, meta, ''),\n            onChange: handleChangeMeta,\n            options: getSelectedItemSelectOptions(formType)\n          });\n        });\n      }));\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_LayoutDndProvider[\"default\"], {\n    attributes: attributes,\n    buttonData: editLayoutRemainingFields,\n    componentLayouts: componentLayouts,\n    goTo: push,\n    isDraggingSibling: isDraggingSibling,\n    layout: editLayout,\n    metadatas: (0, _lodash.get)(modifiedData, ['metadatas'], {}),\n    moveItem: moveItem,\n    moveRow: moveRow,\n    onAddData: function onAddData(name) {\n      dispatch({\n        type: 'ON_ADD_DATA',\n        name: name\n      });\n    },\n    relationsLayout: relationsLayout,\n    removeField: function removeField(rowIndex, fieldIndex) {\n      dispatch({\n        type: 'REMOVE_FIELD',\n        rowIndex: rowIndex,\n        fieldIndex: fieldIndex\n      });\n    },\n    setEditFieldToSelect: function setEditFieldToSelect(name) {\n      dispatch({\n        type: 'SET_FIELD_TO_EDIT',\n        name: name\n      });\n      toggleModalForm();\n    },\n    setIsDraggingSibling: setIsDraggingSibling,\n    selectedItemName: metaToEdit\n  }, /*#__PURE__*/_react[\"default\"].createElement(_SettingsViewWrapper[\"default\"], {\n    inputs: [{\n      label: {\n        id: \"\".concat(_pluginId[\"default\"], \".containers.SettingPage.editSettings.entry.title\")\n      },\n      description: {\n        id: \"\".concat(_pluginId[\"default\"], \".containers.SettingPage.editSettings.entry.title.description\")\n      },\n      type: 'select',\n      name: 'settings.mainField',\n      customBootstrapClass: 'col-md-4',\n      selectOptions: ['id'],\n      didCheckErrors: false,\n      validations: {}\n    }],\n    initialData: initialData,\n    isLoading: false,\n    modifiedData: modifiedData,\n    name: modifiedData.info.name,\n    onChange: handleChange,\n    onConfirmReset: function onConfirmReset() {\n      dispatch({\n        type: 'ON_RESET'\n      });\n    },\n    onConfirmSubmit: handleConfirm,\n    slug: slug,\n    isEditSettings: true\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"row\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_LayoutTitle[\"default\"], {\n    className: fieldsReorderClassName\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_FormTitle[\"default\"], {\n    title: \"\".concat(_pluginId[\"default\"], \".global.displayedFields\"),\n    description: \"\".concat(_pluginId[\"default\"], \".containers.SettingPage.editSettings.description\")\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: {\n      marginTop: -6\n    }\n  }, (0, _utils.getInjectedComponents)('editSettingsView', 'left.links', plugins, currentEnvironment, slug, push, {\n    componentSlug: slug,\n    type: isContentTypeView ? 'content-types' : 'components',\n    modifiedData: modifiedData\n  })))), isContentTypeView && /*#__PURE__*/_react[\"default\"].createElement(_LayoutTitle[\"default\"], {\n    className: \"col-4\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_FormTitle[\"default\"], {\n    title: \"\".concat(_pluginId[\"default\"], \".containers.SettingPage.relations\"),\n    description: \"\".concat(_pluginId[\"default\"], \".containers.SettingPage.editSettings.description\")\n  })), /*#__PURE__*/_react[\"default\"].createElement(_FieldsReorder[\"default\"], {\n    className: fieldsReorderClassName\n  }), isContentTypeView && /*#__PURE__*/_react[\"default\"].createElement(_SortableList[\"default\"], {\n    addItem: function addItem(name) {\n      dispatch({\n        type: 'ADD_RELATION',\n        name: name\n      });\n    },\n    buttonData: editRelationsLayoutRemainingFields,\n    moveItem: function moveItem(dragIndex, hoverIndex) {\n      dispatch({\n        type: 'MOVE_RELATION',\n        dragIndex: dragIndex,\n        hoverIndex: hoverIndex\n      });\n    },\n    removeItem: function removeItem(index) {\n      dispatch({\n        type: 'REMOVE_RELATION',\n        index: index\n      });\n    }\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_PopupForm[\"default\"], {\n    headerId: \"\".concat(_pluginId[\"default\"], \".containers.EditSettingsView.modal-form.edit-field\"),\n    isOpen: isModalFormOpen,\n    onClosed: function onClosed() {\n      dispatch({\n        type: 'UNSET_FIELD_TO_EDIT'\n      });\n    },\n    onSubmit: handleSubmitMetaForm,\n    onToggle: toggleModalForm,\n    renderForm: renderForm,\n    subHeaderContent: metaToEdit,\n    type: (0, _lodash.get)(attributes, [metaToEdit, 'type'], '')\n  }));\n};\n\nEditSettingsView.defaultProps = {\n  isContentTypeView: false,\n  updateLayout: null\n};\nEditSettingsView.propTypes = {\n  components: _propTypes[\"default\"].object.isRequired,\n  mainLayout: _propTypes[\"default\"].shape({\n    attributes: _propTypes[\"default\"].object.isRequired,\n    info: _propTypes[\"default\"].object.isRequired,\n    layouts: _propTypes[\"default\"].shape({\n      list: _propTypes[\"default\"].array.isRequired,\n      editRelations: _propTypes[\"default\"].array.isRequired,\n      edit: _propTypes[\"default\"].array.isRequired\n    }).isRequired,\n    metadatas: _propTypes[\"default\"].object.isRequired,\n    options: _propTypes[\"default\"].object.isRequired\n  }).isRequired,\n  isContentTypeView: _propTypes[\"default\"].bool,\n  slug: _propTypes[\"default\"].string.isRequired,\n  updateLayout: _propTypes[\"default\"].func\n};\nvar _default = EditSettingsView;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/EditSettingsView/index.js"],"names":["EditSettingsView","components","mainLayout","isContentTypeView","slug","updateLayout","push","currentEnvironment","emitEvent","plugins","reducer","initialState","reducerState","dispatch","isModalFormOpen","setIsModalFormOpen","isDraggingSibling","setIsDraggingSibling","schemasSelector","makeSelectModelAndComponentSchemas","state","shallowEqual","schemas","toJS","componentLayouts","initialData","metaToEdit","modifiedData","metaForm","componentsAndModelsPossibleMainFields","fieldsReorderClassName","attributes","editLayout","layouts","edit","relationsLayout","editRelations","editRelationsLayoutRemainingFields","Object","keys","filter","attr","type","indexOf","formToDisplay","associatedMetas","meta","editLayoutRemainingFields","displayedFields","findIndex","el","name","sort","getSelectedItemSelectOptions","formType","targetKey","key","handleChange","target","value","split","handleChangeMeta","handleConfirm","body","requestURL","method","response","data","strapi","notification","error","handleSubmitMetaForm","e","preventDefault","toggleModalForm","moveItem","dragIndex","hoverIndex","dragRowIndex","hoverRowIndex","moveRow","prevState","renderForm","map","index","includes","pluginId","description","label","rowIndex","fieldIndex","id","customBootstrapClass","selectOptions","didCheckErrors","validations","info","display","justifyContent","marginTop","componentSlug","defaultProps","propTypes","PropTypes","object","isRequired","shape","list","array","metadatas","options","bool","string","func"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { cloneDeep, flatMap, get, set, pick } from 'lodash';\nimport { request, useGlobalContext } from 'strapi-helper-plugin';\nimport { Inputs as Input } from '@buffetjs/custom';\nimport { FormattedMessage } from 'react-intl';\nimport pluginId from '../../pluginId';\nimport { getInjectedComponents, getRequestUrl } from '../../utils';\nimport FieldsReorder from '../../components/FieldsReorder';\nimport FormTitle from '../../components/FormTitle';\nimport LayoutTitle from '../../components/LayoutTitle';\nimport PopupForm from '../../components/PopupForm';\nimport SettingsViewWrapper from '../../components/SettingsViewWrapper';\nimport SortableList from '../../components/SortableList';\nimport { makeSelectModelAndComponentSchemas } from '../Main/selectors';\nimport LayoutDndProvider from '../LayoutDndProvider';\nimport init from './init';\nimport reducer, { initialState } from './reducer';\nimport { createPossibleMainFieldsForModelsAndComponents, getInputProps } from './utils';\nimport { unformatLayout } from './utils/layout';\n\nconst EditSettingsView = ({ components, mainLayout, isContentTypeView, slug, updateLayout }) => {\n  const { push } = useHistory();\n  const { currentEnvironment, emitEvent, plugins } = useGlobalContext();\n\n  const [reducerState, dispatch] = useReducer(reducer, initialState, () =>\n    init(initialState, mainLayout, components)\n  );\n  const [isModalFormOpen, setIsModalFormOpen] = useState(false);\n  const [isDraggingSibling, setIsDraggingSibling] = useState(false);\n\n  const schemasSelector = useMemo(makeSelectModelAndComponentSchemas, []);\n  const { schemas } = useSelector(state => schemasSelector(state), shallowEqual);\n\n  const { componentLayouts, initialData, metaToEdit, modifiedData, metaForm } = reducerState.toJS();\n\n  const componentsAndModelsPossibleMainFields = useMemo(() => {\n    return createPossibleMainFieldsForModelsAndComponents(schemas);\n  }, [schemas]);\n\n  const fieldsReorderClassName = isContentTypeView ? 'col-8' : 'col-12';\n\n  const attributes = useMemo(() => get(modifiedData, 'attributes', {}), [modifiedData]);\n  const editLayout = modifiedData.layouts.edit;\n  const relationsLayout = modifiedData.layouts.editRelations;\n  const editRelationsLayoutRemainingFields = useMemo(() => {\n    return Object.keys(attributes)\n      .filter(attr => attributes[attr].type === 'relation')\n      .filter(attr => relationsLayout.indexOf(attr) === -1);\n  }, [attributes, relationsLayout]);\n\n  const formToDisplay = useMemo(() => {\n    if (!metaToEdit) {\n      return [];\n    }\n\n    const associatedMetas = get(modifiedData, ['metadatas', metaToEdit, 'edit'], {});\n\n    return Object.keys(associatedMetas).filter(meta => meta !== 'visible');\n  }, [metaToEdit, modifiedData]);\n\n  const editLayoutRemainingFields = useMemo(() => {\n    const displayedFields = flatMap(modifiedData.layouts.edit, 'rowContent');\n\n    return Object.keys(modifiedData.attributes)\n      .filter(attr => {\n        if (!isContentTypeView) {\n          return true;\n        }\n\n        return get(modifiedData, ['attributes', attr, 'type'], '') !== 'relation';\n      })\n      .filter(attr => get(modifiedData, ['metadatas', attr, 'edit', 'visible'], false) === true)\n      .filter(attr => {\n        return displayedFields.findIndex(el => el.name === attr) === -1;\n      })\n      .sort();\n  }, [isContentTypeView, modifiedData]);\n\n  const getSelectedItemSelectOptions = useCallback(\n    formType => {\n      if (formType !== 'relation' && formType !== 'component') {\n        return [];\n      }\n\n      const targetKey = formType === 'component' ? 'component' : 'targetModel';\n      const key = get(modifiedData, ['attributes', metaToEdit, targetKey], '');\n\n      return get(componentsAndModelsPossibleMainFields, [key], []);\n    },\n\n    [metaToEdit, componentsAndModelsPossibleMainFields, modifiedData]\n  );\n\n  const handleChange = ({ target: { name, value } }) => {\n    dispatch({\n      type: 'ON_CHANGE',\n      keys: name.split('.'),\n      value,\n    });\n  };\n\n  const handleChangeMeta = ({ target: { name, value } }) => {\n    dispatch({\n      type: 'ON_CHANGE_META',\n      keys: name.split('.'),\n      value,\n    });\n  };\n\n  const handleConfirm = async () => {\n    try {\n      const body = pick(cloneDeep(modifiedData), ['layouts', 'metadatas', 'settings']);\n\n      // We need to send the unformated edit layout\n      set(body, 'layouts.edit', unformatLayout(body.layouts.edit));\n\n      const requestURL = isContentTypeView\n        ? getRequestUrl(`content-types/${slug}/configuration`)\n        : getRequestUrl(`components/${slug}/configuration`);\n\n      const response = await request(requestURL, { method: 'PUT', body });\n\n      if (updateLayout) {\n        updateLayout(response.data);\n      }\n\n      dispatch({\n        type: 'SUBMIT_SUCCEEDED',\n      });\n\n      emitEvent('didEditEditSettings');\n    } catch (err) {\n      strapi.notification.error('notification.error');\n    }\n  };\n\n  const handleSubmitMetaForm = e => {\n    e.preventDefault();\n    dispatch({\n      type: 'SUBMIT_META_FORM',\n    });\n    toggleModalForm();\n  };\n\n  const moveItem = (dragIndex, hoverIndex, dragRowIndex, hoverRowIndex) => {\n    // Same row = just reorder\n    if (dragRowIndex === hoverRowIndex) {\n      dispatch({\n        type: 'REORDER_ROW',\n        dragRowIndex,\n        dragIndex,\n        hoverIndex,\n      });\n    } else {\n      dispatch({\n        type: 'REORDER_DIFF_ROW',\n        dragIndex,\n        hoverIndex,\n        dragRowIndex,\n        hoverRowIndex,\n      });\n    }\n  };\n\n  const moveRow = (dragRowIndex, hoverRowIndex) => {\n    dispatch({\n      type: 'MOVE_ROW',\n      dragRowIndex,\n      hoverRowIndex,\n    });\n  };\n\n  const toggleModalForm = () => {\n    setIsModalFormOpen(prevState => !prevState);\n  };\n\n  const renderForm = () =>\n    formToDisplay.map((meta, index) => {\n      const formType = get(attributes, [metaToEdit, 'type']);\n\n      if (formType === 'dynamiczone' && !['label', 'description'].includes(meta)) {\n        return null;\n      }\n\n      if ((formType === 'component' || formType === 'media') && meta !== 'label') {\n        return null;\n      }\n\n      if ((formType === 'json' || formType === 'boolean') && meta === 'placeholder') {\n        return null;\n      }\n\n      if (formType === 'richtext' && meta === 'editable') {\n        return null;\n      }\n\n      return (\n        <div className=\"col-6\" key={meta}>\n          <FormattedMessage\n            id={`${pluginId}.containers.SettingPage.editSettings.relation-field.description`}\n          >\n            {description => (\n              <FormattedMessage\n                id={get(getInputProps(meta), 'label.id', 'app.utils.defaultMessage')}\n              >\n                {label => (\n                  <Input\n                    autoFocus={index === 0}\n                    description={meta === 'mainField' ? description : ''}\n                    label={label}\n                    name={meta}\n                    type={getInputProps(meta).type}\n                    value={get(metaForm, meta, '')}\n                    onChange={handleChangeMeta}\n                    options={getSelectedItemSelectOptions(formType)}\n                  />\n                )}\n              </FormattedMessage>\n            )}\n          </FormattedMessage>\n        </div>\n      );\n    });\n\n  return (\n    <LayoutDndProvider\n      attributes={attributes}\n      buttonData={editLayoutRemainingFields}\n      componentLayouts={componentLayouts}\n      goTo={push}\n      isDraggingSibling={isDraggingSibling}\n      layout={editLayout}\n      metadatas={get(modifiedData, ['metadatas'], {})}\n      moveItem={moveItem}\n      moveRow={moveRow}\n      onAddData={name => {\n        dispatch({\n          type: 'ON_ADD_DATA',\n          name,\n        });\n      }}\n      relationsLayout={relationsLayout}\n      removeField={(rowIndex, fieldIndex) => {\n        dispatch({\n          type: 'REMOVE_FIELD',\n          rowIndex,\n          fieldIndex,\n        });\n      }}\n      setEditFieldToSelect={name => {\n        dispatch({\n          type: 'SET_FIELD_TO_EDIT',\n          name,\n        });\n        toggleModalForm();\n      }}\n      setIsDraggingSibling={setIsDraggingSibling}\n      selectedItemName={metaToEdit}\n    >\n      <SettingsViewWrapper\n        inputs={[\n          {\n            label: {\n              id: `${pluginId}.containers.SettingPage.editSettings.entry.title`,\n            },\n            description: {\n              id: `${pluginId}.containers.SettingPage.editSettings.entry.title.description`,\n            },\n            type: 'select',\n            name: 'settings.mainField',\n            customBootstrapClass: 'col-md-4',\n            selectOptions: ['id'],\n            didCheckErrors: false,\n            validations: {},\n          },\n        ]}\n        initialData={initialData}\n        isLoading={false}\n        modifiedData={modifiedData}\n        name={modifiedData.info.name}\n        onChange={handleChange}\n        onConfirmReset={() => {\n          dispatch({\n            type: 'ON_RESET',\n          });\n        }}\n        onConfirmSubmit={handleConfirm}\n        slug={slug}\n        isEditSettings\n      >\n        <div className=\"row\">\n          <LayoutTitle className={fieldsReorderClassName}>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>\n                <FormTitle\n                  title={`${pluginId}.global.displayedFields`}\n                  description={`${pluginId}.containers.SettingPage.editSettings.description`}\n                />\n              </div>\n              <div\n                style={{\n                  marginTop: -6,\n                }}\n              >\n                {getInjectedComponents(\n                  'editSettingsView',\n                  'left.links',\n                  plugins,\n                  currentEnvironment,\n                  slug,\n                  push,\n                  {\n                    componentSlug: slug,\n                    type: isContentTypeView ? 'content-types' : 'components',\n                    modifiedData,\n                  }\n                )}\n              </div>\n            </div>\n          </LayoutTitle>\n          {isContentTypeView && (\n            <LayoutTitle className=\"col-4\">\n              <FormTitle\n                title={`${pluginId}.containers.SettingPage.relations`}\n                description={`${pluginId}.containers.SettingPage.editSettings.description`}\n              />\n            </LayoutTitle>\n          )}\n\n          <FieldsReorder className={fieldsReorderClassName} />\n          {isContentTypeView && (\n            <SortableList\n              addItem={name => {\n                dispatch({\n                  type: 'ADD_RELATION',\n                  name,\n                });\n              }}\n              buttonData={editRelationsLayoutRemainingFields}\n              moveItem={(dragIndex, hoverIndex) => {\n                dispatch({\n                  type: 'MOVE_RELATION',\n                  dragIndex,\n                  hoverIndex,\n                });\n              }}\n              removeItem={index => {\n                dispatch({\n                  type: 'REMOVE_RELATION',\n                  index,\n                });\n              }}\n            />\n          )}\n        </div>\n      </SettingsViewWrapper>\n\n      <PopupForm\n        headerId={`${pluginId}.containers.EditSettingsView.modal-form.edit-field`}\n        isOpen={isModalFormOpen}\n        onClosed={() => {\n          dispatch({\n            type: 'UNSET_FIELD_TO_EDIT',\n          });\n        }}\n        onSubmit={handleSubmitMetaForm}\n        onToggle={toggleModalForm}\n        renderForm={renderForm}\n        subHeaderContent={metaToEdit}\n        type={get(attributes, [metaToEdit, 'type'], '')}\n      />\n    </LayoutDndProvider>\n  );\n};\n\nEditSettingsView.defaultProps = {\n  isContentTypeView: false,\n  updateLayout: null,\n};\n\nEditSettingsView.propTypes = {\n  components: PropTypes.object.isRequired,\n  mainLayout: PropTypes.shape({\n    attributes: PropTypes.object.isRequired,\n    info: PropTypes.object.isRequired,\n    layouts: PropTypes.shape({\n      list: PropTypes.array.isRequired,\n      editRelations: PropTypes.array.isRequired,\n      edit: PropTypes.array.isRequired,\n    }).isRequired,\n    metadatas: PropTypes.object.isRequired,\n    options: PropTypes.object.isRequired,\n  }).isRequired,\n  isContentTypeView: PropTypes.bool,\n\n  slug: PropTypes.string.isRequired,\n  updateLayout: PropTypes.func,\n};\n\nexport default EditSettingsView;\n"]},"metadata":{},"sourceType":"script"}