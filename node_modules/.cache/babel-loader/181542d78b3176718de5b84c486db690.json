{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _reactFontawesome = require(\"@fortawesome/react-fontawesome\");\n\nvar _freeSolidSvgIcons = require(\"@fortawesome/free-solid-svg-icons\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _formatAndStoreVideoArray = _interopRequireDefault(require(\"./utils/formatAndStoreVideoArray\"));\n\nvar _StaticLinks = _interopRequireDefault(require(\"./StaticLinks\"));\n\nvar _Video = _interopRequireDefault(require(\"./Video\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nvar _init = _interopRequireDefault(require(\"./init\"));\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar OnboardingVideos = function OnboardingVideos() {\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      emitEvent = _useGlobalContext.emitEvent;\n\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState, _init[\"default\"]),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      reducerState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _reducerState$toJS = reducerState.toJS(),\n      isLoading = _reducerState$toJS.isLoading,\n      isOpen = _reducerState$toJS.isOpen,\n      videos = _reducerState$toJS.videos;\n\n  (0, _react.useEffect)(function () {\n    var getData = /*#__PURE__*/function () {\n      var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n        var _yield$axios$get, data, _formatVideoArray, didWatchVideos, _videos;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _axios[\"default\"].get('https://strapi.io/videos', {\n                  timeout: 1000\n                });\n\n              case 3:\n                _yield$axios$get = _context.sent;\n                data = _yield$axios$get.data;\n                _formatVideoArray = (0, _formatAndStoreVideoArray[\"default\"])(data), didWatchVideos = _formatVideoArray.didWatchVideos, _videos = _formatVideoArray.videos;\n                dispatch({\n                  type: 'GET_DATA_SUCCEEDED',\n                  didWatchVideos: didWatchVideos,\n                  videos: _videos\n                });\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                dispatch({\n                  type: 'HIDE_VIDEO_ONBOARDING'\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      }));\n\n      return function getData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getData();\n  }, []); // Hide the player in case of request error\n\n  if (isLoading) {\n    return null;\n  }\n\n  var handleClick = function handleClick() {\n    var eventName = isOpen ? 'didOpenGetStartedVideoContainer' : 'didCloseGetStartedVideoContainer';\n    dispatch({\n      type: 'SET_IS_OPEN'\n    });\n    emitEvent(eventName);\n  };\n\n  var handleClickOpenVideo = function handleClickOpenVideo(videoIndexToOpen) {\n    dispatch({\n      type: 'TOGGLE_VIDEO_MODAL',\n      videoIndexToOpen: videoIndexToOpen\n    });\n  };\n\n  var handleUpdateVideoStartTime = function handleUpdateVideoStartTime(videoIndex, elapsedTime) {\n    dispatch({\n      type: 'UPDATE_VIDEO_STARTED_TIME_AND_PLAYED_INFOS',\n      videoIndex: videoIndex,\n      elapsedTime: elapsedTime\n    });\n  };\n\n  var _setVideoDuration = function setVideoDuration(videoIndex, duration) {\n    dispatch({\n      type: 'SET_VIDEO_DURATION',\n      duration: duration,\n      videoIndex: videoIndex\n    });\n  };\n\n  var hasVideos = videos.length > 0;\n  var className = hasVideos ? 'visible' : 'hidden';\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], {\n    className: className,\n    isOpen: isOpen\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: (0, _classnames[\"default\"])('videosContent', isOpen ? 'shown' : 'hide')\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"videosHeader\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"p\", null, /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n    id: \"app.components.Onboarding.title\"\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"p\", null, Math.floor(videos.filter(function (v) {\n    return v.end;\n  }).length * 100 / videos.length), /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n    id: \"app.components.Onboarding.label.completed\"\n  }))), /*#__PURE__*/_react[\"default\"].createElement(\"ul\", {\n    className: \"onboardingList\"\n  }, videos.map(function (video, index) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Video[\"default\"], {\n      key: video.id || index,\n      id: index,\n      video: video,\n      onClick: function onClick() {\n        return handleClickOpenVideo(index);\n      },\n      setVideoDuration: function setVideoDuration(_, duration) {\n        _setVideoDuration(index, duration);\n      },\n      getVideoCurrentTime: function getVideoCurrentTime(_, elapsedTime) {\n        handleUpdateVideoStartTime(index, elapsedTime);\n      },\n      didPlayVideo: function didPlayVideo(_, elapsedTime) {\n        var eventName = \"didPlay\".concat(index, \"GetStartedVideo\");\n        emitEvent(eventName, {\n          timestamp: elapsedTime\n        });\n      },\n      didStopVideo: function didStopVideo(_, elapsedTime) {\n        var eventName = \"didStop\".concat(index, \"Video\");\n        emitEvent(eventName, {\n          timestamp: elapsedTime\n        });\n      }\n    });\n  })), /*#__PURE__*/_react[\"default\"].createElement(_StaticLinks[\"default\"], null)), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"openBtn\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n    onClick: handleClick,\n    className: isOpen ? 'active' : '',\n    type: \"button\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactFontawesome.FontAwesomeIcon, {\n    icon: _freeSolidSvgIcons.faQuestion\n  }), /*#__PURE__*/_react[\"default\"].createElement(_reactFontawesome.FontAwesomeIcon, {\n    icon: _freeSolidSvgIcons.faTimes\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"span\", null))));\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(OnboardingVideos);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/containers/Onboarding/index.js"],"names":["OnboardingVideos","emitEvent","reducer","initialState","init","reducerState","dispatch","toJS","isLoading","isOpen","videos","getData","axios","get","timeout","data","didWatchVideos","type","console","error","handleClick","eventName","handleClickOpenVideo","videoIndexToOpen","handleUpdateVideoStartTime","videoIndex","elapsedTime","setVideoDuration","duration","hasVideos","length","className","Math","floor","filter","v","end","map","video","index","id","_","timestamp","faQuestion","faTimes"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, memo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestion, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport cn from 'classnames';\nimport { useGlobalContext } from 'strapi-helper-plugin';\n\nimport formatVideoArray from './utils/formatAndStoreVideoArray';\n\nimport StaticLinks from './StaticLinks';\nimport Video from './Video';\nimport Wrapper from './Wrapper';\nimport init from './init';\nimport reducer, { initialState } from './reducer';\n\nconst OnboardingVideos = () => {\n  const { emitEvent } = useGlobalContext();\n  const [reducerState, dispatch] = useReducer(reducer, initialState, init);\n  const { isLoading, isOpen, videos } = reducerState.toJS();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const { data } = await axios.get('https://strapi.io/videos', {\n          timeout: 1000,\n        });\n        const { didWatchVideos, videos } = formatVideoArray(data);\n\n        dispatch({\n          type: 'GET_DATA_SUCCEEDED',\n          didWatchVideos,\n          videos,\n        });\n      } catch (err) {\n        console.error(err);\n        dispatch({\n          type: 'HIDE_VIDEO_ONBOARDING',\n        });\n      }\n    };\n\n    getData();\n  }, []);\n\n  // Hide the player in case of request error\n  if (isLoading) {\n    return null;\n  }\n\n  const handleClick = () => {\n    const eventName = isOpen\n      ? 'didOpenGetStartedVideoContainer'\n      : 'didCloseGetStartedVideoContainer';\n\n    dispatch({ type: 'SET_IS_OPEN' });\n    emitEvent(eventName);\n  };\n  const handleClickOpenVideo = videoIndexToOpen => {\n    dispatch({\n      type: 'TOGGLE_VIDEO_MODAL',\n      videoIndexToOpen,\n    });\n  };\n  const handleUpdateVideoStartTime = (videoIndex, elapsedTime) => {\n    dispatch({\n      type: 'UPDATE_VIDEO_STARTED_TIME_AND_PLAYED_INFOS',\n      videoIndex,\n      elapsedTime,\n    });\n  };\n  const setVideoDuration = (videoIndex, duration) => {\n    dispatch({\n      type: 'SET_VIDEO_DURATION',\n      duration,\n      videoIndex,\n    });\n  };\n\n  const hasVideos = videos.length > 0;\n  const className = hasVideos ? 'visible' : 'hidden';\n\n  return (\n    <Wrapper className={className} isOpen={isOpen}>\n      <div className={cn('videosContent', isOpen ? 'shown' : 'hide')}>\n        <div className=\"videosHeader\">\n          <p>\n            <FormattedMessage id=\"app.components.Onboarding.title\" />\n          </p>\n          <p>\n            {Math.floor((videos.filter(v => v.end).length * 100) / videos.length)}\n            <FormattedMessage id=\"app.components.Onboarding.label.completed\" />\n          </p>\n        </div>\n        <ul className=\"onboardingList\">\n          {videos.map((video, index) => (\n            <Video\n              key={video.id || index}\n              id={index}\n              video={video}\n              onClick={() => handleClickOpenVideo(index)}\n              setVideoDuration={(_, duration) => {\n                setVideoDuration(index, duration);\n              }}\n              getVideoCurrentTime={(_, elapsedTime) => {\n                handleUpdateVideoStartTime(index, elapsedTime);\n              }}\n              didPlayVideo={(_, elapsedTime) => {\n                const eventName = `didPlay${index}GetStartedVideo`;\n\n                emitEvent(eventName, { timestamp: elapsedTime });\n              }}\n              didStopVideo={(_, elapsedTime) => {\n                const eventName = `didStop${index}Video`;\n\n                emitEvent(eventName, { timestamp: elapsedTime });\n              }}\n            />\n          ))}\n        </ul>\n        <StaticLinks />\n      </div>\n      <div className=\"openBtn\">\n        <button onClick={handleClick} className={isOpen ? 'active' : ''} type=\"button\">\n          <FontAwesomeIcon icon={faQuestion} />\n          <FontAwesomeIcon icon={faTimes} />\n          <span />\n        </button>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default memo(OnboardingVideos);\n"]},"metadata":{},"sourceType":"script"}