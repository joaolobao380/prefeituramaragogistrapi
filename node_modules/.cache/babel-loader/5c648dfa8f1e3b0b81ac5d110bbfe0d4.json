{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _utils = require(\"../../../utils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar formatFilter = function formatFilter(filterToFormat) {\n  var name = filterToFormat.name,\n      filter = filterToFormat.filter,\n      value = filterToFormat.value; // Size filter - Convert bites to human-readable format\n\n  if (name === 'size') {\n    return _objectSpread(_objectSpread({}, filterToFormat), {}, {\n      value: (0, _utils.formatBytes)(value)\n    });\n  } // Mime filter - Display different wording than the received ones\n\n\n  if (name === 'mime') {\n    return _objectSpread(_objectSpread({}, filterToFormat), {}, {\n      name: 'type',\n      filter: filter === '_contains' ? '=' : '_ne'\n    });\n  } // Format date to readable format\n\n\n  if ((0, _moment[\"default\"])(value)._isValid === true) {\n    return _objectSpread(_objectSpread({}, filterToFormat), {}, {\n      value: (0, _strapiHelperPlugin.dateToUtcTime)(value).format(_strapiHelperPlugin.dateFormats.datetime)\n    });\n  }\n\n  return filterToFormat;\n};\n\nvar _default = formatFilter;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/components/FiltersList/utils/formatFilter.js"],"names":["formatFilter","filterToFormat","name","filter","value","_isValid","format","dateFormats","datetime"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAAC,cAAc,EAAI;AACrC,MAAQC,IAAR,GAAgCD,cAAhC,CAAQC,IAAR;AAAA,MAAcC,MAAd,GAAgCF,cAAhC,CAAcE,MAAd;AAAA,MAAsBC,KAAtB,GAAgCH,cAAhC,CAAsBG,KAAtB,CADqC,CAGrC;;AACA,MAAIF,IAAI,KAAK,MAAb,EAAqB;AACnB,2CACKD,cADL;AAEEG,MAAAA,KAAK,EAAE,wBAAYA,KAAZ;AAFT;AAID,GAToC,CAWrC;;;AACA,MAAIF,IAAI,KAAK,MAAb,EAAqB;AACnB,2CACKD,cADL;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,MAAM,EAAEA,MAAM,KAAK,WAAX,GAAyB,GAAzB,GAA+B;AAHzC;AAKD,GAlBoC,CAoBrC;;;AACA,MAAI,wBAAOC,KAAP,EAAcC,QAAd,KAA2B,IAA/B,EAAqC;AACnC,2CACKJ,cADL;AAEEG,MAAAA,KAAK,EAAE,uCAAcA,KAAd,EAAqBE,MAArB,CAA4BC,gCAAYC,QAAxC;AAFT;AAID;;AAED,SAAOP,cAAP;AACD,CA7BD;;eA+BeD,Y","sourcesContent":["import moment from 'moment';\nimport { dateFormats, dateToUtcTime } from 'strapi-helper-plugin';\nimport { formatBytes } from '../../../utils';\n\nconst formatFilter = filterToFormat => {\n  const { name, filter, value } = filterToFormat;\n\n  // Size filter - Convert bites to human-readable format\n  if (name === 'size') {\n    return {\n      ...filterToFormat,\n      value: formatBytes(value),\n    };\n  }\n\n  // Mime filter - Display different wording than the received ones\n  if (name === 'mime') {\n    return {\n      ...filterToFormat,\n      name: 'type',\n      filter: filter === '_contains' ? '=' : '_ne',\n    };\n  }\n\n  // Format date to readable format\n  if (moment(value)._isValid === true) {\n    return {\n      ...filterToFormat,\n      value: dateToUtcTime(value).format(dateFormats.datetime),\n    };\n  }\n\n  return filterToFormat;\n};\n\nexport default formatFilter;\n"]},"metadata":{},"sourceType":"script"}