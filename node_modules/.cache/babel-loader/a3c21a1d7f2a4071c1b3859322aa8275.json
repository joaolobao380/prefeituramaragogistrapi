{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _FiltersCard = _interopRequireDefault(require(\"./FiltersCard\"));\n\nvar _formatFilter = _interopRequireDefault(require(\"./utils/formatFilter\"));\n\nvar FiltersPicker = function FiltersPicker(_ref) {\n  var onChange = _ref.onChange;\n\n  var handleChange = function handleChange(_ref2) {\n    var value = _ref2.target.value;\n    onChange({\n      target: {\n        name: 'filters',\n        value: (0, _formatFilter[\"default\"])(value)\n      }\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_core.Picker, {\n    renderButtonContent: function renderButtonContent() {\n      return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.FilterIcon, null), /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n        id: \"app.utils.filters\"\n      }));\n    },\n    renderSectionContent: function renderSectionContent(onToggle) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_FiltersCard[\"default\"], {\n        onChange: function onChange(e) {\n          handleChange(e);\n          onToggle();\n        }\n      });\n    }\n  });\n};\n\nFiltersPicker.defaultProps = {\n  onChange: function onChange() {}\n};\nFiltersPicker.propTypes = {\n  onChange: _propTypes[\"default\"].func\n};\nvar _default = FiltersPicker;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/components/FiltersPicker/index.js"],"names":["FiltersPicker","onChange","handleChange","value","target","name","onToggle","e","defaultProps","propTypes","PropTypes","func"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACtC,MAAMC,YAAY,GAAG,SAAfA,YAAe,QAA2B;AAAA,QAAdC,KAAc,SAAxBC,MAAwB,CAAdD,KAAc;AAC9CF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBF,QAAAA,KAAK,EAAE,8BAAaA,KAAb;AAA1B;AAAV,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,gCAAC,YAAD;AACE,IAAA,mBAAmB,EAAE;AAAA,0BACnB,+EACE,gCAAC,8BAAD,OADF,eAEE,gCAAC,2BAAD;AAAkB,QAAA,EAAE,EAAC;AAArB,QAFF,CADmB;AAAA,KADvB;AAOE,IAAA,oBAAoB,EAAE,8BAAAG,QAAQ;AAAA,0BAC5B,gCAAC,uBAAD;AACE,QAAA,QAAQ,EAAE,kBAAAC,CAAC,EAAI;AACbL,UAAAA,YAAY,CAACK,CAAD,CAAZ;AACAD,UAAAA,QAAQ;AACT;AAJH,QAD4B;AAAA;AAPhC,IADF;AAkBD,CAvBD;;AAyBAN,aAAa,CAACQ,YAAd,GAA6B;AAC3BP,EAAAA,QAAQ,EAAE,oBAAM,CAAE;AADS,CAA7B;AAIAD,aAAa,CAACS,SAAd,GAA0B;AACxBR,EAAAA,QAAQ,EAAES,sBAAUC;AADI,CAA1B;eAIeX,a","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { FilterIcon } from 'strapi-helper-plugin';\nimport { Picker } from '@buffetjs/core';\nimport FiltersCard from './FiltersCard';\n\nimport formatFilter from './utils/formatFilter';\n\nconst FiltersPicker = ({ onChange }) => {\n  const handleChange = ({ target: { value } }) => {\n    onChange({ target: { name: 'filters', value: formatFilter(value) } });\n  };\n\n  return (\n    <Picker\n      renderButtonContent={() => (\n        <>\n          <FilterIcon />\n          <FormattedMessage id=\"app.utils.filters\" />\n        </>\n      )}\n      renderSectionContent={onToggle => (\n        <FiltersCard\n          onChange={e => {\n            handleChange(e);\n            onToggle();\n          }}\n        />\n      )}\n    />\n  );\n};\n\nFiltersPicker.defaultProps = {\n  onChange: () => {},\n};\n\nFiltersPicker.propTypes = {\n  onChange: PropTypes.func,\n};\n\nexport default FiltersPicker;\n"]},"metadata":{},"sourceType":"script"}