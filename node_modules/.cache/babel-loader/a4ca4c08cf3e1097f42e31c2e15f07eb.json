{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactstrap = require(\"reactstrap\");\n\nvar _reactFontawesome = require(\"@fortawesome/react-fontawesome\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Item = function Item(_ref) {\n  var onChange = _ref.onChange,\n      oneThatIsCreatingARelationWithAnother = _ref.oneThatIsCreatingARelationWithAnother,\n      plugin = _ref.plugin,\n      restrictRelationsTo = _ref.restrictRelationsTo,\n      title = _ref.title,\n      uid = _ref.uid;\n\n  var handleChange = function handleChange() {\n    var selectedContentTypeFriendlyName = plugin ? \"\".concat(plugin, \"_\").concat(title) : title;\n    onChange({\n      target: {\n        name: 'target',\n        value: uid,\n        type: 'relation',\n        oneThatIsCreatingARelationWithAnother: oneThatIsCreatingARelationWithAnother,\n        selectedContentTypeFriendlyName: selectedContentTypeFriendlyName,\n        targetContentTypeAllowedRelations: restrictRelationsTo\n      }\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_reactstrap.DropdownItem, {\n    key: uid,\n    onClick: handleChange\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"p\", null, /*#__PURE__*/_react[\"default\"].createElement(_reactFontawesome.FontAwesomeIcon, {\n    icon: ['far', 'caret-square-right'],\n    style: {\n      fontSize: 12,\n      marginTop: '-3px'\n    }\n  }), title, plugin && /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    as: \"span\",\n    fontStyle: \"italic\",\n    textTransform: \"none\",\n    color: \"rgba(50,55,64,0.75)\"\n  }, \"\\xA0 (from: \", plugin, \")\")));\n};\n\nItem.defaultProps = {\n  plugin: null,\n  restrictRelationsTo: null\n};\nItem.propTypes = {\n  onChange: _propTypes[\"default\"].func.isRequired,\n  oneThatIsCreatingARelationWithAnother: _propTypes[\"default\"].string.isRequired,\n  plugin: _propTypes[\"default\"].string,\n  restrictRelationsTo: _propTypes[\"default\"].array,\n  title: _propTypes[\"default\"].string.isRequired,\n  uid: _propTypes[\"default\"].string.isRequired\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(Item);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-type-builder/admin/src/components/RelationTargetPicker/Item.js"],"names":["Item","onChange","oneThatIsCreatingARelationWithAnother","plugin","restrictRelationsTo","title","uid","handleChange","selectedContentTypeFriendlyName","target","name","value","type","targetContentTypeAllowedRelations","fontSize","marginTop","defaultProps","propTypes","PropTypes","func","isRequired","string","array"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,OAOP;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,qCAKI,QALJA,qCAKI;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,mBAGI,QAHJA,mBAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,GACI,QADJA,GACI;;AACJ,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAMC,+BAA+B,GAAGL,MAAM,aAAMA,MAAN,cAAgBE,KAAhB,IAA0BA,KAAxE;AAEAJ,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,QADA;AAENC,QAAAA,KAAK,EAAEL,GAFD;AAGNM,QAAAA,IAAI,EAAE,UAHA;AAINV,QAAAA,qCAAqC,EAArCA,qCAJM;AAKNM,QAAAA,+BAA+B,EAA/BA,+BALM;AAMNK,QAAAA,iCAAiC,EAAET;AAN7B;AADD,KAAD,CAAR;AAUD,GAbD;;AAeA,sBACE,gCAAC,wBAAD;AAAc,IAAA,GAAG,EAAEE,GAAnB;AAAwB,IAAA,OAAO,EAAEC;AAAjC,kBACE,wDACE,gCAAC,iCAAD;AACE,IAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,oBAAR,CADR;AAEE,IAAA,KAAK,EAAE;AAAEO,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,SAAS,EAAE;AAA3B;AAFT,IADF,EAKGV,KALH,EAMGF,MAAM,iBACL,gCAAC,UAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,aAAa,EAAC,MAAjD;AAAwD,IAAA,KAAK,EAAC;AAA9D,qBACiBA,MADjB,MAPJ,CADF,CADF;AAgBD,CAvCD;;AAyCAH,IAAI,CAACgB,YAAL,GAAoB;AAClBb,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,mBAAmB,EAAE;AAFH,CAApB;AAKAJ,IAAI,CAACiB,SAAL,GAAiB;AACfhB,EAAAA,QAAQ,EAAEiB,sBAAUC,IAAV,CAAeC,UADV;AAEflB,EAAAA,qCAAqC,EAAEgB,sBAAUG,MAAV,CAAiBD,UAFzC;AAGfjB,EAAAA,MAAM,EAAEe,sBAAUG,MAHH;AAIfjB,EAAAA,mBAAmB,EAAEc,sBAAUI,KAJhB;AAKfjB,EAAAA,KAAK,EAAEa,sBAAUG,MAAV,CAAiBD,UALT;AAMfd,EAAAA,GAAG,EAAEY,sBAAUG,MAAV,CAAiBD;AANP,CAAjB;;4BASe,iBAAKpB,IAAL,C","sourcesContent":["import React, { memo } from 'react';\nimport { DropdownItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport { Text } from '@buffetjs/core';\n\nconst Item = ({\n  onChange,\n  oneThatIsCreatingARelationWithAnother,\n  plugin,\n  restrictRelationsTo,\n  title,\n  uid,\n}) => {\n  const handleChange = () => {\n    const selectedContentTypeFriendlyName = plugin ? `${plugin}_${title}` : title;\n\n    onChange({\n      target: {\n        name: 'target',\n        value: uid,\n        type: 'relation',\n        oneThatIsCreatingARelationWithAnother,\n        selectedContentTypeFriendlyName,\n        targetContentTypeAllowedRelations: restrictRelationsTo,\n      },\n    });\n  };\n\n  return (\n    <DropdownItem key={uid} onClick={handleChange}>\n      <p>\n        <FontAwesomeIcon\n          icon={['far', 'caret-square-right']}\n          style={{ fontSize: 12, marginTop: '-3px' }}\n        />\n        {title}\n        {plugin && (\n          <Text as=\"span\" fontStyle=\"italic\" textTransform=\"none\" color=\"rgba(50,55,64,0.75)\">\n            &nbsp; (from: {plugin})\n          </Text>\n        )}\n      </p>\n    </DropdownItem>\n  );\n};\n\nItem.defaultProps = {\n  plugin: null,\n  restrictRelationsTo: null,\n};\n\nItem.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  oneThatIsCreatingARelationWithAnother: PropTypes.string.isRequired,\n  plugin: PropTypes.string,\n  restrictRelationsTo: PropTypes.array,\n  title: PropTypes.string.isRequired,\n  uid: PropTypes.string.isRequired,\n};\n\nexport default memo(Item);\n"]},"metadata":{},"sourceType":"script"}