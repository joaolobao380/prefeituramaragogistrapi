{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialState = exports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _immutable = require(\"immutable\");\n\nvar _utils = require(\"../../utils\");\n\nvar initialState = (0, _immutable.fromJS)({\n  currentStep: 'browse',\n  filesToUpload: [],\n  filesToDownload: [],\n  fileToEdit: null\n});\nexports.initialState = initialState;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'ADD_FILES_TO_UPLOAD':\n      return state.update('filesToUpload', function (list) {\n        return list.concat((0, _immutable.fromJS)((0, _utils.createNewFilesToUploadArray)(action.filesToUpload))).map(function (data, index) {\n          return data.set('originalIndex', index);\n        });\n      }).update('currentStep', function () {\n        return action.nextStep;\n      });\n\n    case 'ADD_URLS_TO_FILES_TO_UPLOAD':\n      return state.update('filesToUpload', function (list) {\n        return list.concat((0, _immutable.fromJS)((0, _utils.createNewFilesToDownloadArray)(state.get('filesToDownload'), list.toJS()))).map(function (data, index) {\n          return data.set('originalIndex', index);\n        });\n      }).update('currentStep', function () {\n        return action.nextStep;\n      }).update('filesToDownload', function () {\n        return (0, _immutable.fromJS)([]);\n      });\n\n    case 'CLEAN_FILES_ERROR':\n      return state.update('filesToUpload', function (list) {\n        return list.map(function (data) {\n          if (data.get('tempId')) {\n            return data;\n          }\n\n          return data.set('hasError', false).set('errorMessage', null);\n        });\n      });\n\n    case 'FILE_DOWNLOADED':\n      return state.updateIn(['filesToUpload'], function (list) {\n        return list.map(function (file) {\n          if (file.get('tempId') === action.fileTempId) {\n            return file.update('isDownloading', function () {\n              return false;\n            }).update('file', function () {\n              return action.blob;\n            });\n          }\n\n          return file;\n        });\n      });\n\n    case 'GO_TO':\n      return state.update('currentStep', function () {\n        return action.to;\n      });\n\n    case 'INIT_FILE_TO_EDIT':\n      return state.update('fileToEdit', function () {\n        return (0, _immutable.fromJS)(action.fileToEdit);\n      });\n\n    case 'ON_ABORT_UPLOAD':\n      return state.updateIn(['fileToEdit', 'isUploading'], function () {\n        return false;\n      });\n\n    case 'ON_CHANGE_URLS_TO_DOWNLOAD':\n      return state.updateIn(['filesToDownload'], function () {\n        return (0, _immutable.fromJS)(action.value);\n      });\n\n    case 'ON_CHANGE':\n      return state.updateIn(['fileToEdit'].concat((0, _toConsumableArray2[\"default\"])(action.keys.split('.'))), function () {\n        return action.value;\n      });\n\n    case 'ON_SUBMIT_EDIT_NEW_FILE':\n      {\n        var originalIndex = state.getIn(['fileToEdit', 'originalIndex']);\n        return state.updateIn(['filesToUpload', originalIndex], function () {\n          return state.get('fileToEdit');\n        }).update('fileToEdit', function () {\n          return null;\n        });\n      }\n\n    case 'ON_SUBMIT_EDIT_EXISTING_FILE':\n      return state.updateIn(['fileToEdit', 'isUploading'], function () {\n        return true;\n      });\n\n    case 'REMOVE_FILE_TO_UPLOAD':\n      return state.update('filesToUpload', function (list) {\n        return list.filter(function (data) {\n          return data.get('originalIndex') !== action.fileIndex;\n        });\n      });\n\n    case 'RESET_FILE_TO_EDIT':\n      return state.update('fileToEdit', function () {\n        return null;\n      });\n\n    case 'RESET_PROPS':\n      return initialState;\n\n    case 'SET_CROP_RESULT':\n      {\n        return state.updateIn(['fileToEdit', 'file'], function () {\n          return (0, _immutable.fromJS)(action.blob);\n        });\n      }\n\n    case 'SET_FILE_ERROR':\n      return state.update('filesToUpload', function (list) {\n        return list.map(function (data) {\n          if (data.get('originalIndex') === action.fileIndex) {\n            return data.set('isUploading', false).set('hasError', true).set('errorMessage', action.errorMessage);\n          }\n\n          return data;\n        });\n      });\n\n    case 'SET_FILE_TO_DOWNLOAD_ERROR':\n      return state.update('filesToUpload', function (list) {\n        return list.map(function (file) {\n          if (file.get('tempId') === action.fileTempId) {\n            return file.update('isDownloading', function () {\n              return false;\n            }).update('hasError', function () {\n              return true;\n            }).update('errorMessage', function () {\n              return file.get('fileOriginalName');\n            });\n          }\n\n          return file;\n        });\n      });\n\n    case 'SET_FILE_TO_EDIT':\n      return state.update('fileToEdit', function () {\n        return state.getIn(['filesToUpload', action.fileIndex]);\n      });\n\n    case 'SET_FILE_TO_EDIT_ERROR':\n      return state.updateIn(['fileToEdit', 'hasError'], function () {\n        return true;\n      }).updateIn(['fileToEdit', 'errorMessage'], function () {\n        return action.errorMessage;\n      }).updateIn(['fileToEdit', 'isUploading'], function () {\n        return false;\n      });\n\n    case 'SET_FILES_UPLOADING_STATE':\n      return state.update('filesToUpload', function (list) {\n        return list.map(function (data) {\n          return data.set('isUploading', true).set('hasError', false).set('errorMessage', null);\n        });\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar _default = reducer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/containers/ModalStepper/reducer.js"],"names":["initialState","currentStep","filesToUpload","filesToDownload","fileToEdit","reducer","state","action","type","update","list","concat","map","data","index","set","nextStep","get","toJS","updateIn","file","fileTempId","blob","to","value","keys","split","originalIndex","getIn","filter","fileIndex","errorMessage"],"mappings":"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","sourcesContent":["import { fromJS } from 'immutable';\n\nimport { createNewFilesToDownloadArray, createNewFilesToUploadArray } from '../../utils';\n\nconst initialState = fromJS({\n  currentStep: 'browse',\n  filesToUpload: [],\n  filesToDownload: [],\n  fileToEdit: null,\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_FILES_TO_UPLOAD':\n      return state\n        .update('filesToUpload', list =>\n          list\n            .concat(fromJS(createNewFilesToUploadArray(action.filesToUpload)))\n            .map((data, index) => data.set('originalIndex', index))\n        )\n        .update('currentStep', () => action.nextStep);\n    case 'ADD_URLS_TO_FILES_TO_UPLOAD':\n      return state\n        .update('filesToUpload', list =>\n          list\n            .concat(\n              fromJS(createNewFilesToDownloadArray(state.get('filesToDownload'), list.toJS()))\n            )\n            .map((data, index) => data.set('originalIndex', index))\n        )\n        .update('currentStep', () => action.nextStep)\n        .update('filesToDownload', () => fromJS([]));\n    case 'CLEAN_FILES_ERROR':\n      return state.update('filesToUpload', list =>\n        list.map(data => {\n          if (data.get('tempId')) {\n            return data;\n          }\n\n          return data.set('hasError', false).set('errorMessage', null);\n        })\n      );\n    case 'FILE_DOWNLOADED':\n      return state.updateIn(['filesToUpload'], list => {\n        return list.map(file => {\n          if (file.get('tempId') === action.fileTempId) {\n            return file.update('isDownloading', () => false).update('file', () => action.blob);\n          }\n\n          return file;\n        });\n      });\n    case 'GO_TO':\n      return state.update('currentStep', () => action.to);\n    case 'INIT_FILE_TO_EDIT':\n      return state.update('fileToEdit', () => fromJS(action.fileToEdit));\n    case 'ON_ABORT_UPLOAD':\n      return state.updateIn(['fileToEdit', 'isUploading'], () => false);\n    case 'ON_CHANGE_URLS_TO_DOWNLOAD':\n      return state.updateIn(['filesToDownload'], () => fromJS(action.value));\n    case 'ON_CHANGE':\n      return state.updateIn(['fileToEdit', ...action.keys.split('.')], () => action.value);\n    case 'ON_SUBMIT_EDIT_NEW_FILE': {\n      const originalIndex = state.getIn(['fileToEdit', 'originalIndex']);\n\n      return state\n        .updateIn(['filesToUpload', originalIndex], () => state.get('fileToEdit'))\n        .update('fileToEdit', () => null);\n    }\n    case 'ON_SUBMIT_EDIT_EXISTING_FILE':\n      return state.updateIn(['fileToEdit', 'isUploading'], () => true);\n    case 'REMOVE_FILE_TO_UPLOAD':\n      return state.update('filesToUpload', list => {\n        return list.filter(data => data.get('originalIndex') !== action.fileIndex);\n      });\n    case 'RESET_FILE_TO_EDIT':\n      return state.update('fileToEdit', () => null);\n    case 'RESET_PROPS':\n      return initialState;\n    case 'SET_CROP_RESULT': {\n      return state.updateIn(['fileToEdit', 'file'], () => fromJS(action.blob));\n    }\n    case 'SET_FILE_ERROR':\n      return state.update('filesToUpload', list => {\n        return list.map(data => {\n          if (data.get('originalIndex') === action.fileIndex) {\n            return data\n              .set('isUploading', false)\n              .set('hasError', true)\n              .set('errorMessage', action.errorMessage);\n          }\n\n          return data;\n        });\n      });\n    case 'SET_FILE_TO_DOWNLOAD_ERROR':\n      return state.update('filesToUpload', list => {\n        return list.map(file => {\n          if (file.get('tempId') === action.fileTempId) {\n            return file\n              .update('isDownloading', () => false)\n              .update('hasError', () => true)\n              .update('errorMessage', () => file.get('fileOriginalName'));\n          }\n\n          return file;\n        });\n      });\n    case 'SET_FILE_TO_EDIT':\n      return state.update('fileToEdit', () => state.getIn(['filesToUpload', action.fileIndex]));\n    case 'SET_FILE_TO_EDIT_ERROR':\n      return state\n        .updateIn(['fileToEdit', 'hasError'], () => true)\n        .updateIn(['fileToEdit', 'errorMessage'], () => action.errorMessage)\n        .updateIn(['fileToEdit', 'isUploading'], () => false);\n    case 'SET_FILES_UPLOADING_STATE':\n      return state.update('filesToUpload', list =>\n        list.map(data =>\n          data\n            .set('isUploading', true)\n            .set('hasError', false)\n            .set('errorMessage', null)\n        )\n      );\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\nexport { initialState };\n"]},"metadata":{},"sourceType":"script"}