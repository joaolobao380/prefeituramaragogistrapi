{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _stepper = _interopRequireDefault(require(\"./stepper\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ModalForm = function ModalForm(_ref) {\n  var isOpen = _ref.isOpen,\n      onClosed = _ref.onClosed,\n      onToggle = _ref.onToggle;\n\n  var _useState = (0, _react.useState)('create'),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      currentStep = _useState2[0],\n      setStep = _useState2[1]; // Little trick to focus the first input\n  // Without this the focus is lost\n\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      showBody = _useState4[0],\n      setShowBody = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      isSubmiting = _useState6[0],\n      setIsSubmiting = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(null),\n      _useState8 = (0, _slicedToArray2[\"default\"])(_useState7, 2),\n      registrationToken = _useState8[0],\n      setRegistrationToken = _useState8[1];\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      formatMessage = _useGlobalContext.formatMessage;\n\n  var ref = (0, _react.useRef)(null);\n  var _stepper$currentStep = _stepper[\"default\"][currentStep],\n      buttonSubmitLabel = _stepper$currentStep.buttonSubmitLabel,\n      Component = _stepper$currentStep.Component,\n      isDisabled = _stepper$currentStep.isDisabled,\n      next = _stepper$currentStep.next;\n\n  var goNext = function goNext() {\n    if (next) {\n      setStep(next);\n    } else {\n      onToggle();\n    }\n  };\n\n  var handleClick = function handleClick() {\n    if (ref.current) {\n      ref.current.submit();\n    } else {\n      goNext();\n    }\n  };\n\n  var handleClosed = function handleClosed() {\n    // Fetch data only if the user has submitted a new entry\n    // We can use the registrationToken to know this\n    if (registrationToken || currentStep === 'magic-link') {\n      onClosed();\n    } // Reset the state so we know that the user has created a new entry when there is a registrationToken\n\n\n    setStep('create');\n    setShowBody(false);\n    setRegistrationToken(null);\n  };\n\n  var handleSubmit = function handleSubmit(e, data) {\n    var registrationToken = data.registrationToken;\n    setRegistrationToken(registrationToken);\n    goNext();\n  };\n\n  var handleOpened = function handleOpened() {\n    setShowBody(true);\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.Modal, {\n    isOpen: isOpen,\n    onOpened: handleOpened,\n    onToggle: onToggle,\n    onClosed: handleClosed,\n    withoverflow: \"true\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.ModalHeader, {\n    headerBreadcrumbs: ['Settings.permissions.users.add-new']\n  }), showBody && /*#__PURE__*/_react[\"default\"].createElement(Component, {\n    isDisabled: isDisabled,\n    onSubmit: handleSubmit,\n    ref: currentStep === 'create' ? ref : null,\n    registrationToken: registrationToken,\n    setIsSubmiting: setIsSubmiting,\n    showMagicLink: currentStep === 'magic-link'\n  }), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.ModalFooter, null, /*#__PURE__*/_react[\"default\"].createElement(\"section\", null, /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    type: \"button\",\n    color: \"cancel\",\n    onClick: onToggle\n  }, formatMessage({\n    id: 'app.components.Button.cancel'\n  })), /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    color: \"success\",\n    type: \"button\",\n    onClick: handleClick,\n    isLoading: isSubmiting\n  }, formatMessage({\n    id: buttonSubmitLabel\n  })))));\n};\n\nModalForm.defaultProps = {\n  onClosed: function onClosed() {}\n};\nModalForm.propTypes = {\n  isOpen: _propTypes[\"default\"].bool.isRequired,\n  onClosed: _propTypes[\"default\"].func,\n  onToggle: _propTypes[\"default\"].func.isRequired\n};\nvar _default = ModalForm;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/containers/Users/ListPage/ModalForm.js"],"names":["ModalForm","isOpen","onClosed","onToggle","currentStep","setStep","showBody","setShowBody","isSubmiting","setIsSubmiting","registrationToken","setRegistrationToken","formatMessage","ref","stepper","buttonSubmitLabel","Component","isDisabled","next","goNext","handleClick","current","submit","handleClosed","handleSubmit","e","data","handleOpened","id","defaultProps","propTypes","PropTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@buffetjs/core';\nimport { Modal, ModalFooter, ModalHeader, useGlobalContext } from 'strapi-helper-plugin';\nimport stepper from './stepper';\n\nconst ModalForm = ({ isOpen, onClosed, onToggle }) => {\n  const [currentStep, setStep] = useState('create');\n  // Little trick to focus the first input\n  // Without this the focus is lost\n  const [showBody, setShowBody] = useState(false);\n  const [isSubmiting, setIsSubmiting] = useState(false);\n  const [registrationToken, setRegistrationToken] = useState(null);\n  const { formatMessage } = useGlobalContext();\n  const ref = useRef(null);\n  const { buttonSubmitLabel, Component, isDisabled, next } = stepper[currentStep];\n\n  const goNext = () => {\n    if (next) {\n      setStep(next);\n    } else {\n      onToggle();\n    }\n  };\n\n  const handleClick = () => {\n    if (ref.current) {\n      ref.current.submit();\n    } else {\n      goNext();\n    }\n  };\n\n  const handleClosed = () => {\n    // Fetch data only if the user has submitted a new entry\n    // We can use the registrationToken to know this\n    if (registrationToken || currentStep === 'magic-link') {\n      onClosed();\n    }\n\n    // Reset the state so we know that the user has created a new entry when there is a registrationToken\n    setStep('create');\n    setShowBody(false);\n    setRegistrationToken(null);\n  };\n\n  const handleSubmit = (e, data) => {\n    const { registrationToken } = data;\n\n    setRegistrationToken(registrationToken);\n    goNext();\n  };\n\n  const handleOpened = () => {\n    setShowBody(true);\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onOpened={handleOpened}\n      onToggle={onToggle}\n      onClosed={handleClosed}\n      withoverflow=\"true\"\n    >\n      <ModalHeader headerBreadcrumbs={['Settings.permissions.users.add-new']} />\n      {showBody && (\n        <Component\n          isDisabled={isDisabled}\n          onSubmit={handleSubmit}\n          ref={currentStep === 'create' ? ref : null}\n          registrationToken={registrationToken}\n          setIsSubmiting={setIsSubmiting}\n          showMagicLink={currentStep === 'magic-link'}\n        />\n      )}\n      <ModalFooter>\n        <section>\n          <Button type=\"button\" color=\"cancel\" onClick={onToggle}>\n            {formatMessage({ id: 'app.components.Button.cancel' })}\n          </Button>\n          <Button color=\"success\" type=\"button\" onClick={handleClick} isLoading={isSubmiting}>\n            {formatMessage({ id: buttonSubmitLabel })}\n          </Button>\n        </section>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nModalForm.defaultProps = {\n  onClosed: () => {},\n};\n\nModalForm.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClosed: PropTypes.func,\n  onToggle: PropTypes.func.isRequired,\n};\n\nexport default ModalForm;\n"]},"metadata":{},"sourceType":"script"}