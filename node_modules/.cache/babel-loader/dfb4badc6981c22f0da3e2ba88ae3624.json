{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _utils = require(\"../../utils\");\n\nvar _Card = _interopRequireDefault(require(\"../Card\"));\n\nvar _CardControlsWrapper = _interopRequireDefault(require(\"../CardControlsWrapper\"));\n\nvar _ListWrapper = _interopRequireDefault(require(\"../ListWrapper\"));\n\nvar _IntlText = _interopRequireDefault(require(\"../IntlText\"));\n\nvar _ListCell = _interopRequireDefault(require(\"./ListCell\"));\n\nvar _ListRow = _interopRequireDefault(require(\"./ListRow\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar List = function List(_ref) {\n  var allowedTypes = _ref.allowedTypes,\n      data = _ref.data,\n      onChange = _ref.onChange,\n      onCardClick = _ref.onCardClick,\n      selectedItems = _ref.selectedItems,\n      smallCards = _ref.smallCards,\n      canSelect = _ref.canSelect,\n      renderCardControl = _ref.renderCardControl,\n      showCheckbox = _ref.showCheckbox;\n  var selectedAssets = selectedItems.length;\n\n  var handleCheckboxClick = function handleCheckboxClick(e) {\n    e.stopPropagation();\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_ListWrapper[\"default\"], null, !smallCards && selectedAssets > 0 && /*#__PURE__*/_react[\"default\"].createElement(_IntlText[\"default\"], {\n    id: (0, _utils.getTrad)(\"list.assets.selected.\".concat(selectedAssets > 1 ? 'plural' : 'singular')),\n    values: {\n      number: selectedAssets\n    },\n    lineHeight: \"18px\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_ListRow[\"default\"], null, data.map(function (item) {\n    var id = item.id;\n    var thumbnail = (0, _lodash.get)(item, ['formats', 'small'], item);\n    var isAllowed = allowedTypes.length > 0 ? allowedTypes.includes((0, _utils.getType)(item.mime)) : true;\n    var checked = selectedItems.findIndex(function (file) {\n      return file.id === id;\n    }) !== -1;\n    var fileUrl = (0, _strapiHelperPlugin.prefixFileUrlWithBackendUrl)(thumbnail.url);\n\n    var cardOptions = _objectSpread(_objectSpread({}, (0, _lodash.pick)(item, ['ext', 'name', 'mime', 'height', 'width', 'size', 'previewUrl', 'id'])), {}, {\n      isDisabled: !isAllowed,\n      checked: checked,\n      url: fileUrl,\n      onClick: onCardClick,\n      small: smallCards\n    });\n\n    return /*#__PURE__*/_react[\"default\"].createElement(_ListCell[\"default\"], {\n      key: id\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Card[\"default\"], {\n      options: cardOptions\n    }, (checked || canSelect) && /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, (checked || isAllowed) && showCheckbox && /*#__PURE__*/_react[\"default\"].createElement(_CardControlsWrapper[\"default\"], {\n      leftAlign: true,\n      className: \"card-control-wrapper\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_core.Checkbox, {\n      name: \"\".concat(id),\n      onChange: onChange,\n      onClick: handleCheckboxClick,\n      value: checked\n    })), renderCardControl && /*#__PURE__*/_react[\"default\"].createElement(_CardControlsWrapper[\"default\"], {\n      className: \"card-control-wrapper card-control-wrapper-hidden\"\n    }, renderCardControl(id)))));\n  })));\n};\n\nList.defaultProps = {\n  allowedTypes: [],\n  canSelect: true,\n  data: [],\n  onChange: function onChange() {},\n  onCardClick: function onCardClick() {},\n  renderCardControl: null,\n  selectedItems: [],\n  smallCards: false,\n  showCheckbox: true\n};\nList.propTypes = {\n  allowedTypes: _propTypes[\"default\"].array,\n  canSelect: _propTypes[\"default\"].bool,\n  data: _propTypes[\"default\"].array,\n  onChange: _propTypes[\"default\"].func,\n  onCardClick: _propTypes[\"default\"].func,\n  renderCardControl: _propTypes[\"default\"].func,\n  selectedItems: _propTypes[\"default\"].array,\n  smallCards: _propTypes[\"default\"].bool,\n  showCheckbox: _propTypes[\"default\"].bool\n};\nvar _default = List;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/components/List/index.js"],"names":["List","allowedTypes","data","onChange","onCardClick","selectedItems","smallCards","canSelect","renderCardControl","showCheckbox","selectedAssets","length","handleCheckboxClick","e","stopPropagation","number","map","item","id","thumbnail","isAllowed","includes","mime","checked","findIndex","file","fileUrl","url","cardOptions","isDisabled","onClick","small","defaultProps","propTypes","PropTypes","array","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from '@buffetjs/core';\nimport { get, pick } from 'lodash';\nimport { prefixFileUrlWithBackendUrl } from 'strapi-helper-plugin';\nimport { getTrad, getType } from '../../utils';\nimport Card from '../Card';\nimport CardControlsWrapper from '../CardControlsWrapper';\nimport ListWrapper from '../ListWrapper';\nimport IntlText from '../IntlText';\nimport ListCell from './ListCell';\nimport ListRow from './ListRow';\n\nconst List = ({\n  allowedTypes,\n  data,\n  onChange,\n  onCardClick,\n  selectedItems,\n  smallCards,\n  canSelect,\n  renderCardControl,\n  showCheckbox,\n}) => {\n  const selectedAssets = selectedItems.length;\n\n  const handleCheckboxClick = e => {\n    e.stopPropagation();\n  };\n\n  return (\n    <ListWrapper>\n      {!smallCards && selectedAssets > 0 && (\n        <IntlText\n          id={getTrad(`list.assets.selected.${selectedAssets > 1 ? 'plural' : 'singular'}`)}\n          values={{ number: selectedAssets }}\n          lineHeight=\"18px\"\n        />\n      )}\n      <ListRow>\n        {data.map(item => {\n          const { id } = item;\n          const thumbnail = get(item, ['formats', 'small'], item);\n          const isAllowed =\n            allowedTypes.length > 0 ? allowedTypes.includes(getType(item.mime)) : true;\n          const checked = selectedItems.findIndex(file => file.id === id) !== -1;\n\n          const fileUrl = prefixFileUrlWithBackendUrl(thumbnail.url);\n\n          const cardOptions = {\n            ...pick(item, ['ext', 'name', 'mime', 'height', 'width', 'size', 'previewUrl', 'id']),\n            isDisabled: !isAllowed,\n            checked,\n            url: fileUrl,\n            onClick: onCardClick,\n            small: smallCards,\n          };\n\n          return (\n            <ListCell key={id}>\n              <Card options={cardOptions}>\n                {(checked || canSelect) && (\n                  <>\n                    {(checked || isAllowed) && showCheckbox && (\n                      <CardControlsWrapper leftAlign className=\"card-control-wrapper\">\n                        <Checkbox\n                          name={`${id}`}\n                          onChange={onChange}\n                          onClick={handleCheckboxClick}\n                          value={checked}\n                        />\n                      </CardControlsWrapper>\n                    )}\n                    {renderCardControl && (\n                      <CardControlsWrapper className=\"card-control-wrapper card-control-wrapper-hidden\">\n                        {renderCardControl(id)}\n                      </CardControlsWrapper>\n                    )}\n                  </>\n                )}\n              </Card>\n            </ListCell>\n          );\n        })}\n      </ListRow>\n    </ListWrapper>\n  );\n};\n\nList.defaultProps = {\n  allowedTypes: [],\n  canSelect: true,\n  data: [],\n  onChange: () => {},\n  onCardClick: () => {},\n  renderCardControl: null,\n  selectedItems: [],\n  smallCards: false,\n  showCheckbox: true,\n};\n\nList.propTypes = {\n  allowedTypes: PropTypes.array,\n  canSelect: PropTypes.bool,\n  data: PropTypes.array,\n  onChange: PropTypes.func,\n  onCardClick: PropTypes.func,\n  renderCardControl: PropTypes.func,\n  selectedItems: PropTypes.array,\n  smallCards: PropTypes.bool,\n  showCheckbox: PropTypes.bool,\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"script"}