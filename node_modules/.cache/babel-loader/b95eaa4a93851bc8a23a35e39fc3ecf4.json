{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Filter(_ref) {\n  var contentType = _ref.contentType,\n      filterName = _ref.filterName,\n      filters = _ref.filters,\n      index = _ref.index,\n      metadatas = _ref.metadatas,\n      name = _ref.name,\n      value = _ref.value,\n      toggleFilterPickerState = _ref.toggleFilterPickerState,\n      isFilterPickerOpen = _ref.isFilterPickerOpen,\n      setQuery = _ref.setQuery;\n  var attributeType = (0, _lodash.get)(contentType, ['attributes', name, 'type'], 'string');\n  var type = attributeType;\n\n  if (attributeType === 'relation') {\n    type = (0, _lodash.get)(contentType, ['metadatas', name, 'list', 'mainField', 'schema', 'type'], 'string');\n  }\n\n  var displayedValue = (0, _lodash.toString)(value);\n\n  if (type.includes('date') || type.includes('timestamp')) {\n    var date = (0, _moment[\"default\"])(value, _moment[\"default\"].ISO_8601);\n    var format;\n\n    if (type === 'date' || type === 'timestamp') {\n      format = _utils.dateFormats.date;\n    } else {\n      format = _utils.dateFormats.datetime;\n    }\n\n    displayedValue = _moment[\"default\"].parseZone(date).utc().format(format);\n  }\n\n  var displayedName = name.split('.')[0];\n  var label = {\n    name: displayedName,\n    filter: filterName,\n    value: displayedValue\n  };\n  var handleClick = (0, _react.useCallback)(function () {\n    var updatedFilters = filters.slice().filter(function (_, i) {\n      return i !== index;\n    });\n\n    if (isFilterPickerOpen) {\n      toggleFilterPickerState();\n    }\n\n    setQuery(_objectSpread({\n      page: 1\n    }, (0, _utils.formatFiltersToQuery)(updatedFilters, metadatas)));\n  }, [filters, index, isFilterPickerOpen, metadatas, setQuery, toggleFilterPickerState]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.FilterButton, {\n    onClick: handleClick,\n    label: label,\n    type: type\n  });\n}\n\nFilter.defaultProps = {\n  name: '',\n  value: ''\n};\nFilter.propTypes = {\n  contentType: _propTypes[\"default\"].shape({\n    attributes: _propTypes[\"default\"].object.isRequired\n  }).isRequired,\n  filterName: _propTypes[\"default\"].string.isRequired,\n  filters: _propTypes[\"default\"].array.isRequired,\n  index: _propTypes[\"default\"].number.isRequired,\n  isFilterPickerOpen: _propTypes[\"default\"].bool.isRequired,\n  metadatas: _propTypes[\"default\"].object.isRequired,\n  name: _propTypes[\"default\"].string,\n  setQuery: _propTypes[\"default\"].func.isRequired,\n  toggleFilterPickerState: _propTypes[\"default\"].func.isRequired,\n  value: _propTypes[\"default\"].any\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(Filter);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/ListView/Filter.js"],"names":["Filter","contentType","filterName","filters","index","metadatas","name","value","toggleFilterPickerState","isFilterPickerOpen","setQuery","attributeType","type","displayedValue","includes","date","moment","ISO_8601","format","dateFormats","datetime","parseZone","utc","displayedName","split","label","filter","handleClick","updatedFilters","slice","_","i","page","defaultProps","propTypes","PropTypes","shape","attributes","object","isRequired","string","array","number","bool","func","any"],"mappings":"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","sourcesContent":["import React, { memo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { get, toString } from 'lodash';\nimport moment from 'moment';\nimport { FilterButton } from 'strapi-helper-plugin';\nimport { dateFormats, formatFiltersToQuery } from '../../utils';\n\nfunction Filter({\n  contentType,\n  filterName,\n  filters,\n  index,\n  metadatas,\n  name,\n  value,\n  toggleFilterPickerState,\n  isFilterPickerOpen,\n  setQuery,\n}) {\n  const attributeType = get(contentType, ['attributes', name, 'type'], 'string');\n  let type = attributeType;\n\n  if (attributeType === 'relation') {\n    type = get(contentType, ['metadatas', name, 'list', 'mainField', 'schema', 'type'], 'string');\n  }\n  let displayedValue = toString(value);\n\n  if (type.includes('date') || type.includes('timestamp')) {\n    const date = moment(value, moment.ISO_8601);\n\n    let format;\n\n    if (type === 'date' || type === 'timestamp') {\n      format = dateFormats.date;\n    } else {\n      format = dateFormats.datetime;\n    }\n\n    displayedValue = moment\n      .parseZone(date)\n      .utc()\n      .format(format);\n  }\n  const displayedName = name.split('.')[0];\n\n  const label = {\n    name: displayedName,\n    filter: filterName,\n    value: displayedValue,\n  };\n\n  const handleClick = useCallback(() => {\n    const updatedFilters = filters.slice().filter((_, i) => i !== index);\n\n    if (isFilterPickerOpen) {\n      toggleFilterPickerState();\n    }\n\n    setQuery({ page: 1, ...formatFiltersToQuery(updatedFilters, metadatas) });\n  }, [filters, index, isFilterPickerOpen, metadatas, setQuery, toggleFilterPickerState]);\n\n  return <FilterButton onClick={handleClick} label={label} type={type} />;\n}\n\nFilter.defaultProps = {\n  name: '',\n  value: '',\n};\n\nFilter.propTypes = {\n  contentType: PropTypes.shape({ attributes: PropTypes.object.isRequired }).isRequired,\n  filterName: PropTypes.string.isRequired,\n  filters: PropTypes.array.isRequired,\n  index: PropTypes.number.isRequired,\n  isFilterPickerOpen: PropTypes.bool.isRequired,\n  metadatas: PropTypes.object.isRequired,\n  name: PropTypes.string,\n  setQuery: PropTypes.func.isRequired,\n  toggleFilterPickerState: PropTypes.func.isRequired,\n  value: PropTypes.any,\n};\n\nexport default memo(Filter);\n"]},"metadata":{},"sourceType":"script"}