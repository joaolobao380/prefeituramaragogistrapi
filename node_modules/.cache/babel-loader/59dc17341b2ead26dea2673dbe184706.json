{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _NonRepeatableWrapper = _interopRequireDefault(require(\"../NonRepeatableWrapper\"));\n\nvar _PlusButton = _interopRequireDefault(require(\"../PlusButton\"));\n\nvar _P = _interopRequireDefault(require(\"./P\"));\n\nvar ComponentInitializer = function ComponentInitializer(_ref) {\n  var componentUid = _ref.componentUid,\n      isReadOnly = _ref.isReadOnly,\n      name = _ref.name;\n\n  var _useContentManagerEdi = (0, _strapiHelperPlugin.useContentManagerEditViewDataManager)(),\n      addNonRepeatableComponentToField = _useContentManagerEdi.addNonRepeatableComponentToField;\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_NonRepeatableWrapper[\"default\"], {\n    isEmpty: true,\n    isReadOnly: isReadOnly,\n    onClick: function onClick() {\n      if (!isReadOnly) {\n        addNonRepeatableComponentToField(name, componentUid);\n      }\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_PlusButton[\"default\"], {\n    type: \"button\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n    id: \"\".concat(_pluginId[\"default\"], \".components.empty-repeatable\")\n  }, function (msg) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_P[\"default\"], {\n      style: {\n        paddingTop: 78\n      }\n    }, msg);\n  }));\n};\n\nComponentInitializer.defaultProps = {\n  isReadOnly: false,\n  name: ''\n};\nComponentInitializer.propTypes = {\n  componentUid: _propTypes[\"default\"].string.isRequired,\n  isReadOnly: _propTypes[\"default\"].bool,\n  name: _propTypes[\"default\"].string\n};\nvar _default = ComponentInitializer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/components/ComponentInitializer/index.js"],"names":["ComponentInitializer","componentUid","isReadOnly","name","addNonRepeatableComponentToField","pluginId","msg","paddingTop","defaultProps","propTypes","PropTypes","string","isRequired","bool"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAwC;AAAA,MAArCC,YAAqC,QAArCA,YAAqC;AAAA,MAAvBC,UAAuB,QAAvBA,UAAuB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACnE,8BAA6C,+DAA7C;AAAA,MAAQC,gCAAR,yBAAQA,gCAAR;;AAEA,sBACE,gCAAC,gCAAD;AACE,IAAA,OAAO,MADT;AAEE,IAAA,UAAU,EAAEF,UAFd;AAGE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAI,CAACA,UAAL,EAAiB;AACfE,QAAAA,gCAAgC,CAACD,IAAD,EAAOF,YAAP,CAAhC;AACD;AACF;AAPH,kBASE,gCAAC,sBAAD;AAAY,IAAA,IAAI,EAAC;AAAjB,IATF,eAUE,gCAAC,2BAAD;AAAkB,IAAA,EAAE,YAAKI,oBAAL;AAApB,KACG,UAAAC,GAAG;AAAA,wBAAI,gCAAC,aAAD;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd;AAAV,OAA+BD,GAA/B,CAAJ;AAAA,GADN,CAVF,CADF;AAgBD,CAnBD;;AAqBAN,oBAAoB,CAACQ,YAArB,GAAoC;AAClCN,EAAAA,UAAU,EAAE,KADsB;AAElCC,EAAAA,IAAI,EAAE;AAF4B,CAApC;AAKAH,oBAAoB,CAACS,SAArB,GAAiC;AAC/BR,EAAAA,YAAY,EAAES,sBAAUC,MAAV,CAAiBC,UADA;AAE/BV,EAAAA,UAAU,EAAEQ,sBAAUG,IAFS;AAG/BV,EAAAA,IAAI,EAAEO,sBAAUC;AAHe,CAAjC;eAMeX,oB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { useContentManagerEditViewDataManager } from 'strapi-helper-plugin';\nimport pluginId from '../../pluginId';\n\nimport NonRepeatableWrapper from '../NonRepeatableWrapper';\nimport PlusButton from '../PlusButton';\nimport P from './P';\n\nconst ComponentInitializer = ({ componentUid, isReadOnly, name }) => {\n  const { addNonRepeatableComponentToField } = useContentManagerEditViewDataManager();\n\n  return (\n    <NonRepeatableWrapper\n      isEmpty\n      isReadOnly={isReadOnly}\n      onClick={() => {\n        if (!isReadOnly) {\n          addNonRepeatableComponentToField(name, componentUid);\n        }\n      }}\n    >\n      <PlusButton type=\"button\" />\n      <FormattedMessage id={`${pluginId}.components.empty-repeatable`}>\n        {msg => <P style={{ paddingTop: 78 }}>{msg}</P>}\n      </FormattedMessage>\n    </NonRepeatableWrapper>\n  );\n};\n\nComponentInitializer.defaultProps = {\n  isReadOnly: false,\n  name: '',\n};\n\nComponentInitializer.propTypes = {\n  componentUid: PropTypes.string.isRequired,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n};\n\nexport default ComponentInitializer;\n"]},"metadata":{},"sourceType":"script"}