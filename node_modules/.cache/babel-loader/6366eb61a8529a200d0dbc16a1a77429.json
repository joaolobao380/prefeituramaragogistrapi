{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nvar _utils = require(\"../../utils\");\n\nvar InputUploadURL = function InputUploadURL(_ref) {\n  var errors = _ref.errors,\n      onChange = _ref.onChange,\n      value = _ref.value;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      formatMessage = _useGlobalContext.formatMessage;\n\n  var label = formatMessage({\n    id: (0, _utils.getTrad)('input.url.label')\n  });\n  var description = formatMessage({\n    id: (0, _utils.getTrad)('input.url.description')\n  });\n  var error = errors ? formatMessage({\n    id: errors.id\n  }, {\n    number: errors.number\n  }) : null;\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"row\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"col-12\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_custom.Inputs, {\n    autoFocus: true,\n    error: error,\n    type: \"textarea\",\n    name: \"url\",\n    onChange: onChange,\n    label: label,\n    description: description,\n    value: value.join('\\n')\n  }))));\n};\n\nInputUploadURL.defaultProps = {\n  errors: null,\n  onChange: function onChange() {},\n  value: []\n};\nInputUploadURL.propTypes = {\n  errors: _propTypes[\"default\"].object,\n  onChange: _propTypes[\"default\"].func,\n  value: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string)\n};\nvar _default = InputUploadURL;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/components/InputUploadURL/index.js"],"names":["InputUploadURL","errors","onChange","value","formatMessage","label","id","description","error","number","join","defaultProps","propTypes","PropTypes","object","func","arrayOf","string"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,OAAiC;AAAA,MAA9BC,MAA8B,QAA9BA,MAA8B;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AACtD,0BAA0B,2CAA1B;AAAA,MAAQC,aAAR,qBAAQA,aAAR;;AACA,MAAMC,KAAK,GAAGD,aAAa,CAAC;AAAEE,IAAAA,EAAE,EAAE,oBAAQ,iBAAR;AAAN,GAAD,CAA3B;AACA,MAAMC,WAAW,GAAGH,aAAa,CAAC;AAAEE,IAAAA,EAAE,EAAE,oBAAQ,uBAAR;AAAN,GAAD,CAAjC;AACA,MAAME,KAAK,GAAGP,MAAM,GAAGG,aAAa,CAAC;AAAEE,IAAAA,EAAE,EAAEL,MAAM,CAACK;AAAb,GAAD,EAAoB;AAAEG,IAAAA,MAAM,EAAER,MAAM,CAACQ;AAAjB,GAApB,CAAhB,GAAiE,IAArF;AAEA,sBACE,gCAAC,mBAAD,qBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,gCAAC,cAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,IAAI,EAAC,KAJP;AAKE,IAAA,QAAQ,EAAEN,QALZ;AAME,IAAA,KAAK,EAAEG,KANT;AAOE,IAAA,WAAW,EAAEE,WAPf;AAQE,IAAA,KAAK,EAAEJ,KAAK,CAACO,IAAN,CAAW,IAAX;AART,IADF,CADF,CADF,CADF;AAkBD,CAxBD;;AA0BAV,cAAc,CAACW,YAAf,GAA8B;AAC5BV,EAAAA,MAAM,EAAE,IADoB;AAE5BC,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CAFU;AAG5BC,EAAAA,KAAK,EAAE;AAHqB,CAA9B;AAMAH,cAAc,CAACY,SAAf,GAA2B;AACzBX,EAAAA,MAAM,EAAEY,sBAAUC,MADO;AAEzBZ,EAAAA,QAAQ,EAAEW,sBAAUE,IAFK;AAGzBZ,EAAAA,KAAK,EAAEU,sBAAUG,OAAV,CAAkBH,sBAAUI,MAA5B;AAHkB,CAA3B;eAMejB,c","sourcesContent":["import React from 'react';\nimport { Inputs } from '@buffetjs/custom';\nimport { useGlobalContext } from 'strapi-helper-plugin';\nimport PropTypes from 'prop-types';\nimport Wrapper from './Wrapper';\nimport { getTrad } from '../../utils';\n\nconst InputUploadURL = ({ errors, onChange, value }) => {\n  const { formatMessage } = useGlobalContext();\n  const label = formatMessage({ id: getTrad('input.url.label') });\n  const description = formatMessage({ id: getTrad('input.url.description') });\n  const error = errors ? formatMessage({ id: errors.id }, { number: errors.number }) : null;\n\n  return (\n    <Wrapper>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <Inputs\n            autoFocus\n            error={error}\n            type=\"textarea\"\n            name=\"url\"\n            onChange={onChange}\n            label={label}\n            description={description}\n            value={value.join('\\n')}\n          />\n        </div>\n      </div>\n    </Wrapper>\n  );\n};\n\nInputUploadURL.defaultProps = {\n  errors: null,\n  onChange: () => {},\n  value: [],\n};\n\nInputUploadURL.propTypes = {\n  errors: PropTypes.object,\n  onChange: PropTypes.func,\n  value: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default InputUploadURL;\n"]},"metadata":{},"sourceType":"script"}