{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialState = exports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _immer = _interopRequireDefault(require(\"immer\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"../../utils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  allowedTypes: [],\n  selectedFiles: [],\n  files: [],\n  filesToUpload: [],\n  filesToDownload: [],\n  fileToEdit: null,\n  currentTab: null,\n  params: {\n    _limit: 10,\n    _start: 0,\n    _q: '',\n    filters: [],\n    _sort: null\n  },\n  currentStep: 'list',\n  isFormDisabled: false,\n  isWarningDeleteOpen: false\n};\nexports.initialState = initialState;\n\nvar reducer = function reducer(state, action) {\n  return (// eslint-disable-next-line consistent-return\n    (0, _immer[\"default\"])(state, function (draftState) {\n      switch (action.type) {\n        case 'ADD_FILES_TO_UPLOAD':\n          {\n            draftState.filesToUpload = [].concat((0, _toConsumableArray2[\"default\"])(draftState.filesToUpload), (0, _toConsumableArray2[\"default\"])((0, _utils.createNewFilesToUploadArray)(action.filesToUpload))).map(function (fileToUpload, index) {\n              return _objectSpread(_objectSpread({}, fileToUpload), {}, {\n                originalIndex: index\n              });\n            });\n            draftState.currentStep = action.nextStep;\n            break;\n          }\n\n        case 'ADD_URLS_TO_FILES_TO_UPLOAD':\n          {\n            draftState.filesToUpload = [].concat((0, _toConsumableArray2[\"default\"])(draftState.filesToUpload), (0, _toConsumableArray2[\"default\"])((0, _utils.createNewFilesToDownloadArray)(draftState.filesToDownload, draftState.filesToUpload))).map(function (fileToUpload, index) {\n              return _objectSpread(_objectSpread({}, fileToUpload), {}, {\n                originalIndex: index\n              });\n            });\n            draftState.currentStep = action.nextStep;\n            draftState.filesToDownload = [];\n            break;\n          }\n\n        case 'CLEAN_FILES_ERROR':\n          {\n            draftState.filesToUpload.forEach(function (fileToUpload, index) {\n              draftState.filesToUpload[index] = _objectSpread(_objectSpread({}, fileToUpload), {}, {\n                hasError: false,\n                errorMessage: null\n              });\n            });\n            break;\n          }\n\n        case 'CLEAR_FILES_TO_UPLOAD_AND_DOWNLOAD':\n          {\n            draftState.filesToUpload = [];\n            draftState.filesToDownload = [];\n            break;\n          }\n\n        case 'EDIT_EXISTING_FILE':\n          {\n            var index = draftState.selectedFiles.findIndex(function (selectedFile) {\n              return selectedFile.id === action.file.id;\n            });\n\n            if (index !== -1) {\n              draftState.selectedFiles[index] = action.file;\n            }\n\n            break;\n          }\n\n        case 'FILE_DOWNLOADED':\n          {\n            var _index = state.filesToUpload.findIndex(function (file) {\n              return file.tempId === action.fileTempId;\n            });\n\n            draftState.filesToUpload[_index] = _objectSpread(_objectSpread({}, draftState.filesToUpload[_index]), {}, {\n              isDownloading: false,\n              file: action.blob\n            });\n            break;\n          }\n\n        case 'GET_DATA_SUCCEEDED':\n          {\n            draftState.files = action.files;\n            draftState.count = action.countData.count;\n            break;\n          }\n\n        case 'GO_TO':\n          {\n            draftState.currentStep = action.to;\n            break;\n          }\n\n        case 'MOVE_ASSET':\n          {\n            var dragIndex = action.dragIndex,\n                hoverIndex = action.hoverIndex;\n            var dragMedia = state.selectedFiles[dragIndex];\n            draftState.selectedFiles.splice(dragIndex, 1);\n            draftState.selectedFiles.splice(hoverIndex, 0, dragMedia);\n            break;\n          }\n\n        case 'ON_ABORT_UPLOAD':\n          {\n            draftState.fileToEdit.isUploading = false;\n            break;\n          }\n\n        case 'ON_CHANGE':\n          {\n            (0, _lodash.set)(draftState.fileToEdit, action.keys.split('.'), action.value);\n            break;\n          }\n\n        case 'ON_CHANGE_MODAL_TAB':\n          {\n            draftState.currentTab = action.to;\n            break;\n          }\n\n        case 'ON_CHANGE_URLS_TO_DOWNLOAD':\n          {\n            (0, _lodash.set)(draftState, ['filesToDownload'], action.value);\n            break;\n          }\n\n        case 'ON_FILE_SELECTION':\n          {\n            var id = action.id;\n            var stringId = (0, _lodash.toString)(id);\n            var fileIndex = state.selectedFiles.findIndex(function (file) {\n              return (0, _lodash.toString)(file.id) === stringId;\n            });\n\n            if (fileIndex !== -1) {\n              draftState.selectedFiles.splice(fileIndex, 1);\n              break;\n            }\n\n            var fileToStore = state.files.find(function (file) {\n              return file.id.toString() === stringId;\n            });\n\n            if (fileToStore) {\n              draftState.selectedFiles.push(fileToStore);\n            } // Clean\n\n\n            draftState.selectedFiles = draftState.selectedFiles.filter(function (file) {\n              return file && file.id;\n            });\n            break;\n          }\n\n        case 'ON_SUBMIT_EDIT_NEW_FILE':\n          {\n            var originalIndex = state.fileToEdit.originalIndex;\n            draftState.filesToUpload[originalIndex] = draftState.fileToEdit;\n            draftState.fileToEdit = null;\n            break;\n          }\n\n        case 'ON_SUBMIT_EDIT_EXISTING_FILE':\n          {\n            draftState.fileToEdit.isUploading = true;\n            break;\n          }\n\n        case 'REMOVE_FILE_TO_UPLOAD':\n          {\n            var canAddToSelectedFiles = action.multiple || !action.multiple && draftState.selectedFiles.length === 0;\n\n            if (action.addToSelectedFiles) {\n              if (canAddToSelectedFiles) {\n                draftState.selectedFiles = [].concat((0, _toConsumableArray2[\"default\"])(draftState.selectedFiles), (0, _toConsumableArray2[\"default\"])(action.addToSelectedFiles));\n              }\n\n              draftState.currentTab = 'selected';\n            }\n\n            var _index2 = draftState.filesToUpload.findIndex(function (fileToUpload) {\n              return fileToUpload.originalIndex === action.fileIndex;\n            });\n\n            draftState.filesToUpload.splice(_index2, 1);\n            break;\n          }\n\n        case 'REMOVE_FILTER':\n          {\n            var filterToRemove = action.filterToRemove;\n            draftState.params.filters.splice(filterToRemove, 1);\n            break;\n          }\n\n        case 'RESET_PROPS':\n          {\n            if (action.defaultSort) {\n              draftState.params._sort = action.defaultSort;\n            } else {\n              return initialState;\n            }\n\n            break;\n          }\n\n        case 'SET_CROP_RESULT':\n          {\n            draftState.fileToEdit.file = action.blob;\n            break;\n          }\n\n        case 'SET_FILE_ERROR':\n          {\n            draftState.filesToUpload.forEach(function (fileToUpload, index) {\n              if (fileToUpload.originalIndex === action.fileIndex) {\n                draftState.filesToUpload[index] = _objectSpread(_objectSpread({}, draftState.filesToUpload[index]), {}, {\n                  isUploading: false,\n                  hasError: true,\n                  errorMessage: action.errorMessage\n                });\n              }\n            });\n            break;\n          }\n\n        case 'SET_FILE_TO_DOWNLOAD_ERROR':\n          {\n            var _index3 = state.filesToUpload.findIndex(function (file) {\n              return file.tempId === action.fileTempId;\n            });\n\n            draftState.filesToUpload[_index3] = _objectSpread(_objectSpread({}, draftState.filesToUpload[_index3]), {}, {\n              isDownloading: false,\n              hasError: true,\n              errorMessage: draftState.filesToUpload[_index3].fileOriginalName\n            });\n            break;\n          }\n\n        case 'SET_FILE_TO_EDIT':\n          {\n            draftState.fileToEdit = (0, _utils.formatFileForEditing)([].concat((0, _toConsumableArray2[\"default\"])(state.files), (0, _toConsumableArray2[\"default\"])(state.selectedFiles)).find(function (file) {\n              return file.id.toString() === action.fileId.toString();\n            }));\n            break;\n          }\n\n        case 'SET_FILE_TO_EDIT_ERROR':\n          {\n            draftState.fileToEdit.isUploading = false;\n            draftState.fileToEdit.hasError = true;\n            draftState.fileToEdit.errorMessage = action.errorMessage;\n            break;\n          }\n\n        case 'SET_FILES_UPLOADING_STATE':\n          {\n            draftState.filesToUpload.forEach(function (fileToUpload, index) {\n              draftState.filesToUpload[index] = _objectSpread(_objectSpread({}, fileToUpload), {}, {\n                isUploading: true,\n                hasError: false,\n                errorMessage: null\n              });\n            });\n            break;\n          }\n\n        case 'SET_FORM_DISABLED':\n          {\n            draftState.isFormDisabled = action.isFormDisabled;\n            break;\n          }\n\n        case 'SET_NEW_FILE_TO_EDIT':\n          {\n            draftState.fileToEdit = draftState.filesToUpload[action.fileIndex];\n            break;\n          }\n\n        case 'SET_PARAM':\n          {\n            var _action$param = action.param,\n                name = _action$param.name,\n                value = _action$param.value;\n\n            if (name === 'filters') {\n              var canAddFilter = (0, _lodash.intersectionWith)(state.params.filters, [value], _lodash.isEqual).length === 0;\n\n              if (canAddFilter) {\n                draftState.params._start = 0;\n                draftState.params.filters.push(value);\n              }\n\n              break;\n            }\n\n            if (name === '_limit') {\n              draftState.params._start = 0;\n            }\n\n            draftState.params[name] = value;\n            break;\n          }\n\n        case 'TOGGLE_MODAL_WARNING':\n          {\n            draftState.isWarningDeleteOpen = !state.isWarningDeleteOpen;\n            break;\n          }\n\n        case 'TOGGLE_SELECT_ALL':\n          {\n            var allowedFiles = state.allowedTypes.length > 0 ? state.files.filter(function (file) {\n              return state.allowedTypes.includes((0, _utils.getType)(file.mime));\n            }) : state.files;\n\n            var comparator = function comparator(first, second) {\n              return first.id === second.id;\n            };\n\n            var isSelected = (0, _lodash.intersectionWith)(state.selectedFiles, allowedFiles, comparator).length === allowedFiles.length;\n\n            if (isSelected) {\n              draftState.selectedFiles = (0, _lodash.differenceWith)(state.selectedFiles, state.files, comparator);\n              break;\n            }\n\n            draftState.selectedFiles = (0, _lodash.unionWith)(state.selectedFiles, allowedFiles, comparator);\n            break;\n          }\n\n        default:\n          return draftState;\n      }\n    })\n  );\n};\n\nvar _default = reducer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/containers/InputModalStepperProvider/reducer.js"],"names":["initialState","allowedTypes","selectedFiles","files","filesToUpload","filesToDownload","fileToEdit","currentTab","params","_limit","_start","_q","filters","_sort","currentStep","isFormDisabled","isWarningDeleteOpen","reducer","state","action","draftState","type","map","fileToUpload","index","originalIndex","nextStep","forEach","hasError","errorMessage","findIndex","selectedFile","id","file","tempId","fileTempId","isDownloading","blob","count","countData","to","dragIndex","hoverIndex","dragMedia","splice","isUploading","keys","split","value","stringId","fileIndex","fileToStore","find","toString","push","filter","canAddToSelectedFiles","multiple","length","addToSelectedFiles","filterToRemove","defaultSort","fileOriginalName","fileId","param","name","canAddFilter","isEqual","allowedFiles","includes","mime","comparator","first","second","isSelected"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;AAOA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,aAAa,EAAE,EAFI;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,aAAa,EAAE,EAJI;AAKnBC,EAAAA,eAAe,EAAE,EALE;AAMnBC,EAAAA,UAAU,EAAE,IANO;AAOnBC,EAAAA,UAAU,EAAE,IAPO;AAQnBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE,EADF;AAENC,IAAAA,MAAM,EAAE,CAFF;AAGNC,IAAAA,EAAE,EAAE,EAHE;AAINC,IAAAA,OAAO,EAAE,EAJH;AAKNC,IAAAA,KAAK,EAAE;AALD,GARW;AAenBC,EAAAA,WAAW,EAAE,MAfM;AAgBnBC,EAAAA,cAAc,EAAE,KAhBG;AAiBnBC,EAAAA,mBAAmB,EAAE;AAjBF,CAArB;;;AAoBA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR;AAAA,SACd;AACA,2BAAQD,KAAR,EAAe,UAAAE,UAAU,EAAI;AAC3B,cAAQD,MAAM,CAACE,IAAf;AACE,aAAK,qBAAL;AAA4B;AAC1BD,YAAAA,UAAU,CAAChB,aAAX,GAA2B,8CACtBgB,UAAU,CAAChB,aADW,uCAEtB,wCAA4Be,MAAM,CAACf,aAAnC,CAFsB,GAGzBkB,GAHyB,CAGrB,UAACC,YAAD,EAAeC,KAAf;AAAA,qDACDD,YADC;AAEJE,gBAAAA,aAAa,EAAED;AAFX;AAAA,aAHqB,CAA3B;AAOAJ,YAAAA,UAAU,CAACN,WAAX,GAAyBK,MAAM,CAACO,QAAhC;AACA;AACD;;AACD,aAAK,6BAAL;AAAoC;AAClCN,YAAAA,UAAU,CAAChB,aAAX,GAA2B,8CACtBgB,UAAU,CAAChB,aADW,uCAEtB,0CAA8BgB,UAAU,CAACf,eAAzC,EAA0De,UAAU,CAAChB,aAArE,CAFsB,GAGzBkB,GAHyB,CAGrB,UAACC,YAAD,EAAeC,KAAf;AAAA,qDACDD,YADC;AAEJE,gBAAAA,aAAa,EAAED;AAFX;AAAA,aAHqB,CAA3B;AAOAJ,YAAAA,UAAU,CAACN,WAAX,GAAyBK,MAAM,CAACO,QAAhC;AACAN,YAAAA,UAAU,CAACf,eAAX,GAA6B,EAA7B;AAEA;AACD;;AACD,aAAK,mBAAL;AAA0B;AACxBe,YAAAA,UAAU,CAAChB,aAAX,CAAyBuB,OAAzB,CAAiC,UAACJ,YAAD,EAAeC,KAAf,EAAyB;AACxDJ,cAAAA,UAAU,CAAChB,aAAX,CAAyBoB,KAAzB,oCACKD,YADL;AAEEK,gBAAAA,QAAQ,EAAE,KAFZ;AAGEC,gBAAAA,YAAY,EAAE;AAHhB;AAKD,aAND;AAOA;AACD;;AACD,aAAK,oCAAL;AAA2C;AACzCT,YAAAA,UAAU,CAAChB,aAAX,GAA2B,EAA3B;AACAgB,YAAAA,UAAU,CAACf,eAAX,GAA6B,EAA7B;AAEA;AACD;;AACD,aAAK,oBAAL;AAA2B;AACzB,gBAAMmB,KAAK,GAAGJ,UAAU,CAAClB,aAAX,CAAyB4B,SAAzB,CACZ,UAAAC,YAAY;AAAA,qBAAIA,YAAY,CAACC,EAAb,KAAoBb,MAAM,CAACc,IAAP,CAAYD,EAApC;AAAA,aADA,CAAd;;AAIA,gBAAIR,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBJ,cAAAA,UAAU,CAAClB,aAAX,CAAyBsB,KAAzB,IAAkCL,MAAM,CAACc,IAAzC;AACD;;AACD;AACD;;AACD,aAAK,iBAAL;AAAwB;AACtB,gBAAMT,MAAK,GAAGN,KAAK,CAACd,aAAN,CAAoB0B,SAApB,CAA8B,UAAAG,IAAI;AAAA,qBAAIA,IAAI,CAACC,MAAL,KAAgBf,MAAM,CAACgB,UAA3B;AAAA,aAAlC,CAAd;;AAEAf,YAAAA,UAAU,CAAChB,aAAX,CAAyBoB,MAAzB,oCACKJ,UAAU,CAAChB,aAAX,CAAyBoB,MAAzB,CADL;AAEEY,cAAAA,aAAa,EAAE,KAFjB;AAGEH,cAAAA,IAAI,EAAEd,MAAM,CAACkB;AAHf;AAMA;AACD;;AACD,aAAK,oBAAL;AAA2B;AACzBjB,YAAAA,UAAU,CAACjB,KAAX,GAAmBgB,MAAM,CAAChB,KAA1B;AACAiB,YAAAA,UAAU,CAACkB,KAAX,GAAmBnB,MAAM,CAACoB,SAAP,CAAiBD,KAApC;AACA;AACD;;AACD,aAAK,OAAL;AAAc;AACZlB,YAAAA,UAAU,CAACN,WAAX,GAAyBK,MAAM,CAACqB,EAAhC;AACA;AACD;;AACD,aAAK,YAAL;AAAmB;AACjB,gBAAQC,SAAR,GAAkCtB,MAAlC,CAAQsB,SAAR;AAAA,gBAAmBC,UAAnB,GAAkCvB,MAAlC,CAAmBuB,UAAnB;AACA,gBAAMC,SAAS,GAAGzB,KAAK,CAAChB,aAAN,CAAoBuC,SAApB,CAAlB;AAEArB,YAAAA,UAAU,CAAClB,aAAX,CAAyB0C,MAAzB,CAAgCH,SAAhC,EAA2C,CAA3C;AACArB,YAAAA,UAAU,CAAClB,aAAX,CAAyB0C,MAAzB,CAAgCF,UAAhC,EAA4C,CAA5C,EAA+CC,SAA/C;AAEA;AACD;;AACD,aAAK,iBAAL;AAAwB;AACtBvB,YAAAA,UAAU,CAACd,UAAX,CAAsBuC,WAAtB,GAAoC,KAApC;AACA;AACD;;AACD,aAAK,WAAL;AAAkB;AAChB,6BAAIzB,UAAU,CAACd,UAAf,EAA2Ba,MAAM,CAAC2B,IAAP,CAAYC,KAAZ,CAAkB,GAAlB,CAA3B,EAAmD5B,MAAM,CAAC6B,KAA1D;AACA;AACD;;AACD,aAAK,qBAAL;AAA4B;AAC1B5B,YAAAA,UAAU,CAACb,UAAX,GAAwBY,MAAM,CAACqB,EAA/B;AACA;AACD;;AACD,aAAK,4BAAL;AAAmC;AACjC,6BAAIpB,UAAJ,EAAgB,CAAC,iBAAD,CAAhB,EAAqCD,MAAM,CAAC6B,KAA5C;AACA;AACD;;AACD,aAAK,mBAAL;AAA0B;AACxB,gBAAQhB,EAAR,GAAeb,MAAf,CAAQa,EAAR;AACA,gBAAMiB,QAAQ,GAAG,sBAASjB,EAAT,CAAjB;AACA,gBAAMkB,SAAS,GAAGhC,KAAK,CAAChB,aAAN,CAAoB4B,SAApB,CAA8B,UAAAG,IAAI;AAAA,qBAAI,sBAASA,IAAI,CAACD,EAAd,MAAsBiB,QAA1B;AAAA,aAAlC,CAAlB;;AAEA,gBAAIC,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACpB9B,cAAAA,UAAU,CAAClB,aAAX,CAAyB0C,MAAzB,CAAgCM,SAAhC,EAA2C,CAA3C;AACA;AACD;;AACD,gBAAMC,WAAW,GAAGjC,KAAK,CAACf,KAAN,CAAYiD,IAAZ,CAAiB,UAAAnB,IAAI;AAAA,qBAAIA,IAAI,CAACD,EAAL,CAAQqB,QAAR,OAAuBJ,QAA3B;AAAA,aAArB,CAApB;;AAEA,gBAAIE,WAAJ,EAAiB;AACf/B,cAAAA,UAAU,CAAClB,aAAX,CAAyBoD,IAAzB,CAA8BH,WAA9B;AACD,aAbuB,CAcxB;;;AACA/B,YAAAA,UAAU,CAAClB,aAAX,GAA2BkB,UAAU,CAAClB,aAAX,CAAyBqD,MAAzB,CAAgC,UAAAtB,IAAI;AAAA,qBAAIA,IAAI,IAAIA,IAAI,CAACD,EAAjB;AAAA,aAApC,CAA3B;AACA;AACD;;AACD,aAAK,yBAAL;AAAgC;AAC9B,gBAAMP,aAAa,GAAGP,KAAK,CAACZ,UAAN,CAAiBmB,aAAvC;AACAL,YAAAA,UAAU,CAAChB,aAAX,CAAyBqB,aAAzB,IAA0CL,UAAU,CAACd,UAArD;AACAc,YAAAA,UAAU,CAACd,UAAX,GAAwB,IAAxB;AACA;AACD;;AACD,aAAK,8BAAL;AAAqC;AACnCc,YAAAA,UAAU,CAACd,UAAX,CAAsBuC,WAAtB,GAAoC,IAApC;AACA;AACD;;AACD,aAAK,uBAAL;AAA8B;AAC5B,gBAAMW,qBAAqB,GACzBrC,MAAM,CAACsC,QAAP,IAAoB,CAACtC,MAAM,CAACsC,QAAR,IAAoBrC,UAAU,CAAClB,aAAX,CAAyBwD,MAAzB,KAAoC,CAD9E;;AAGA,gBAAIvC,MAAM,CAACwC,kBAAX,EAA+B;AAC7B,kBAAIH,qBAAJ,EAA2B;AACzBpC,gBAAAA,UAAU,CAAClB,aAAX,iDAA+BkB,UAAU,CAAClB,aAA1C,uCAA4DiB,MAAM,CAACwC,kBAAnE;AACD;;AACDvC,cAAAA,UAAU,CAACb,UAAX,GAAwB,UAAxB;AACD;;AAED,gBAAMiB,OAAK,GAAGJ,UAAU,CAAChB,aAAX,CAAyB0B,SAAzB,CACZ,UAAAP,YAAY;AAAA,qBAAIA,YAAY,CAACE,aAAb,KAA+BN,MAAM,CAAC+B,SAA1C;AAAA,aADA,CAAd;;AAGA9B,YAAAA,UAAU,CAAChB,aAAX,CAAyBwC,MAAzB,CAAgCpB,OAAhC,EAAuC,CAAvC;AACA;AACD;;AACD,aAAK,eAAL;AAAsB;AACpB,gBAAQoC,cAAR,GAA2BzC,MAA3B,CAAQyC,cAAR;AAEAxC,YAAAA,UAAU,CAACZ,MAAX,CAAkBI,OAAlB,CAA0BgC,MAA1B,CAAiCgB,cAAjC,EAAiD,CAAjD;AACA;AACD;;AACD,aAAK,aAAL;AAAoB;AAClB,gBAAIzC,MAAM,CAAC0C,WAAX,EAAwB;AACtBzC,cAAAA,UAAU,CAACZ,MAAX,CAAkBK,KAAlB,GAA0BM,MAAM,CAAC0C,WAAjC;AACD,aAFD,MAEO;AACL,qBAAO7D,YAAP;AACD;;AACD;AACD;;AACD,aAAK,iBAAL;AAAwB;AACtBoB,YAAAA,UAAU,CAACd,UAAX,CAAsB2B,IAAtB,GAA6Bd,MAAM,CAACkB,IAApC;AACA;AACD;;AACD,aAAK,gBAAL;AAAuB;AACrBjB,YAAAA,UAAU,CAAChB,aAAX,CAAyBuB,OAAzB,CAAiC,UAACJ,YAAD,EAAeC,KAAf,EAAyB;AACxD,kBAAID,YAAY,CAACE,aAAb,KAA+BN,MAAM,CAAC+B,SAA1C,EAAqD;AACnD9B,gBAAAA,UAAU,CAAChB,aAAX,CAAyBoB,KAAzB,oCACKJ,UAAU,CAAChB,aAAX,CAAyBoB,KAAzB,CADL;AAEEqB,kBAAAA,WAAW,EAAE,KAFf;AAGEjB,kBAAAA,QAAQ,EAAE,IAHZ;AAIEC,kBAAAA,YAAY,EAAEV,MAAM,CAACU;AAJvB;AAMD;AACF,aATD;AAUA;AACD;;AACD,aAAK,4BAAL;AAAmC;AACjC,gBAAML,OAAK,GAAGN,KAAK,CAACd,aAAN,CAAoB0B,SAApB,CAA8B,UAAAG,IAAI;AAAA,qBAAIA,IAAI,CAACC,MAAL,KAAgBf,MAAM,CAACgB,UAA3B;AAAA,aAAlC,CAAd;;AAEAf,YAAAA,UAAU,CAAChB,aAAX,CAAyBoB,OAAzB,oCACKJ,UAAU,CAAChB,aAAX,CAAyBoB,OAAzB,CADL;AAEEY,cAAAA,aAAa,EAAE,KAFjB;AAGER,cAAAA,QAAQ,EAAE,IAHZ;AAIEC,cAAAA,YAAY,EAAET,UAAU,CAAChB,aAAX,CAAyBoB,OAAzB,EAAgCsC;AAJhD;AAOA;AACD;;AACD,aAAK,kBAAL;AAAyB;AACvB1C,YAAAA,UAAU,CAACd,UAAX,GAAwB,iCACtB,8CAAIY,KAAK,CAACf,KAAV,uCAAoBe,KAAK,CAAChB,aAA1B,GAAyCkD,IAAzC,CACE,UAAAnB,IAAI;AAAA,qBAAIA,IAAI,CAACD,EAAL,CAAQqB,QAAR,OAAuBlC,MAAM,CAAC4C,MAAP,CAAcV,QAAd,EAA3B;AAAA,aADN,CADsB,CAAxB;AAKA;AACD;;AACD,aAAK,wBAAL;AAA+B;AAC7BjC,YAAAA,UAAU,CAACd,UAAX,CAAsBuC,WAAtB,GAAoC,KAApC;AACAzB,YAAAA,UAAU,CAACd,UAAX,CAAsBsB,QAAtB,GAAiC,IAAjC;AACAR,YAAAA,UAAU,CAACd,UAAX,CAAsBuB,YAAtB,GAAqCV,MAAM,CAACU,YAA5C;AACA;AACD;;AACD,aAAK,2BAAL;AAAkC;AAChCT,YAAAA,UAAU,CAAChB,aAAX,CAAyBuB,OAAzB,CAAiC,UAACJ,YAAD,EAAeC,KAAf,EAAyB;AACxDJ,cAAAA,UAAU,CAAChB,aAAX,CAAyBoB,KAAzB,oCACKD,YADL;AAEEsB,gBAAAA,WAAW,EAAE,IAFf;AAGEjB,gBAAAA,QAAQ,EAAE,KAHZ;AAIEC,gBAAAA,YAAY,EAAE;AAJhB;AAMD,aAPD;AAQA;AACD;;AACD,aAAK,mBAAL;AAA0B;AACxBT,YAAAA,UAAU,CAACL,cAAX,GAA4BI,MAAM,CAACJ,cAAnC;AACA;AACD;;AACD,aAAK,sBAAL;AAA6B;AAC3BK,YAAAA,UAAU,CAACd,UAAX,GAAwBc,UAAU,CAAChB,aAAX,CAAyBe,MAAM,CAAC+B,SAAhC,CAAxB;AACA;AACD;;AACD,aAAK,WAAL;AAAkB;AAChB,gCAAwB/B,MAAM,CAAC6C,KAA/B;AAAA,gBAAQC,IAAR,iBAAQA,IAAR;AAAA,gBAAcjB,KAAd,iBAAcA,KAAd;;AAEA,gBAAIiB,IAAI,KAAK,SAAb,EAAwB;AACtB,kBAAMC,YAAY,GAChB,8BAAiBhD,KAAK,CAACV,MAAN,CAAaI,OAA9B,EAAuC,CAACoC,KAAD,CAAvC,EAAgDmB,eAAhD,EAAyDT,MAAzD,KAAoE,CADtE;;AAGA,kBAAIQ,YAAJ,EAAkB;AAChB9C,gBAAAA,UAAU,CAACZ,MAAX,CAAkBE,MAAlB,GAA2B,CAA3B;AACAU,gBAAAA,UAAU,CAACZ,MAAX,CAAkBI,OAAlB,CAA0B0C,IAA1B,CAA+BN,KAA/B;AACD;;AACD;AACD;;AAED,gBAAIiB,IAAI,KAAK,QAAb,EAAuB;AACrB7C,cAAAA,UAAU,CAACZ,MAAX,CAAkBE,MAAlB,GAA2B,CAA3B;AACD;;AAEDU,YAAAA,UAAU,CAACZ,MAAX,CAAkByD,IAAlB,IAA0BjB,KAA1B;AACA;AACD;;AACD,aAAK,sBAAL;AAA6B;AAC3B5B,YAAAA,UAAU,CAACJ,mBAAX,GAAiC,CAACE,KAAK,CAACF,mBAAxC;AACA;AACD;;AACD,aAAK,mBAAL;AAA0B;AACxB,gBAAMoD,YAAY,GAChBlD,KAAK,CAACjB,YAAN,CAAmByD,MAAnB,GAA4B,CAA5B,GACIxC,KAAK,CAACf,KAAN,CAAYoD,MAAZ,CAAmB,UAAAtB,IAAI;AAAA,qBAAIf,KAAK,CAACjB,YAAN,CAAmBoE,QAAnB,CAA4B,oBAAQpC,IAAI,CAACqC,IAAb,CAA5B,CAAJ;AAAA,aAAvB,CADJ,GAEIpD,KAAK,CAACf,KAHZ;;AAIA,gBAAMoE,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,MAAR;AAAA,qBAAmBD,KAAK,CAACxC,EAAN,KAAayC,MAAM,CAACzC,EAAvC;AAAA,aAAnB;;AACA,gBAAM0C,UAAU,GACd,8BAAiBxD,KAAK,CAAChB,aAAvB,EAAsCkE,YAAtC,EAAoDG,UAApD,EAAgEb,MAAhE,KACAU,YAAY,CAACV,MAFf;;AAIA,gBAAIgB,UAAJ,EAAgB;AACdtD,cAAAA,UAAU,CAAClB,aAAX,GAA2B,4BAAegB,KAAK,CAAChB,aAArB,EAAoCgB,KAAK,CAACf,KAA1C,EAAiDoE,UAAjD,CAA3B;AACA;AACD;;AAEDnD,YAAAA,UAAU,CAAClB,aAAX,GAA2B,uBAAUgB,KAAK,CAAChB,aAAhB,EAA+BkE,YAA/B,EAA6CG,UAA7C,CAA3B;AACA;AACD;;AAED;AACE,iBAAOnD,UAAP;AAtQJ;AAwQD,KAzQD;AAFc;AAAA,CAAhB;;eA6QeH,O","sourcesContent":["import produce from 'immer';\nimport { intersectionWith, differenceWith, unionWith, set, isEqual, toString } from 'lodash';\n\nimport {\n  createNewFilesToDownloadArray,\n  createNewFilesToUploadArray,\n  formatFileForEditing,\n  getType,\n} from '../../utils';\n\nconst initialState = {\n  allowedTypes: [],\n  selectedFiles: [],\n  files: [],\n  filesToUpload: [],\n  filesToDownload: [],\n  fileToEdit: null,\n  currentTab: null,\n  params: {\n    _limit: 10,\n    _start: 0,\n    _q: '',\n    filters: [],\n    _sort: null,\n  },\n  currentStep: 'list',\n  isFormDisabled: false,\n  isWarningDeleteOpen: false,\n};\n\nconst reducer = (state, action) =>\n  // eslint-disable-next-line consistent-return\n  produce(state, draftState => {\n    switch (action.type) {\n      case 'ADD_FILES_TO_UPLOAD': {\n        draftState.filesToUpload = [\n          ...draftState.filesToUpload,\n          ...createNewFilesToUploadArray(action.filesToUpload),\n        ].map((fileToUpload, index) => ({\n          ...fileToUpload,\n          originalIndex: index,\n        }));\n        draftState.currentStep = action.nextStep;\n        break;\n      }\n      case 'ADD_URLS_TO_FILES_TO_UPLOAD': {\n        draftState.filesToUpload = [\n          ...draftState.filesToUpload,\n          ...createNewFilesToDownloadArray(draftState.filesToDownload, draftState.filesToUpload),\n        ].map((fileToUpload, index) => ({\n          ...fileToUpload,\n          originalIndex: index,\n        }));\n        draftState.currentStep = action.nextStep;\n        draftState.filesToDownload = [];\n\n        break;\n      }\n      case 'CLEAN_FILES_ERROR': {\n        draftState.filesToUpload.forEach((fileToUpload, index) => {\n          draftState.filesToUpload[index] = {\n            ...fileToUpload,\n            hasError: false,\n            errorMessage: null,\n          };\n        });\n        break;\n      }\n      case 'CLEAR_FILES_TO_UPLOAD_AND_DOWNLOAD': {\n        draftState.filesToUpload = [];\n        draftState.filesToDownload = [];\n\n        break;\n      }\n      case 'EDIT_EXISTING_FILE': {\n        const index = draftState.selectedFiles.findIndex(\n          selectedFile => selectedFile.id === action.file.id\n        );\n\n        if (index !== -1) {\n          draftState.selectedFiles[index] = action.file;\n        }\n        break;\n      }\n      case 'FILE_DOWNLOADED': {\n        const index = state.filesToUpload.findIndex(file => file.tempId === action.fileTempId);\n\n        draftState.filesToUpload[index] = {\n          ...draftState.filesToUpload[index],\n          isDownloading: false,\n          file: action.blob,\n        };\n\n        break;\n      }\n      case 'GET_DATA_SUCCEEDED': {\n        draftState.files = action.files;\n        draftState.count = action.countData.count;\n        break;\n      }\n      case 'GO_TO': {\n        draftState.currentStep = action.to;\n        break;\n      }\n      case 'MOVE_ASSET': {\n        const { dragIndex, hoverIndex } = action;\n        const dragMedia = state.selectedFiles[dragIndex];\n\n        draftState.selectedFiles.splice(dragIndex, 1);\n        draftState.selectedFiles.splice(hoverIndex, 0, dragMedia);\n\n        break;\n      }\n      case 'ON_ABORT_UPLOAD': {\n        draftState.fileToEdit.isUploading = false;\n        break;\n      }\n      case 'ON_CHANGE': {\n        set(draftState.fileToEdit, action.keys.split('.'), action.value);\n        break;\n      }\n      case 'ON_CHANGE_MODAL_TAB': {\n        draftState.currentTab = action.to;\n        break;\n      }\n      case 'ON_CHANGE_URLS_TO_DOWNLOAD': {\n        set(draftState, ['filesToDownload'], action.value);\n        break;\n      }\n      case 'ON_FILE_SELECTION': {\n        const { id } = action;\n        const stringId = toString(id);\n        const fileIndex = state.selectedFiles.findIndex(file => toString(file.id) === stringId);\n\n        if (fileIndex !== -1) {\n          draftState.selectedFiles.splice(fileIndex, 1);\n          break;\n        }\n        const fileToStore = state.files.find(file => file.id.toString() === stringId);\n\n        if (fileToStore) {\n          draftState.selectedFiles.push(fileToStore);\n        }\n        // Clean\n        draftState.selectedFiles = draftState.selectedFiles.filter(file => file && file.id);\n        break;\n      }\n      case 'ON_SUBMIT_EDIT_NEW_FILE': {\n        const originalIndex = state.fileToEdit.originalIndex;\n        draftState.filesToUpload[originalIndex] = draftState.fileToEdit;\n        draftState.fileToEdit = null;\n        break;\n      }\n      case 'ON_SUBMIT_EDIT_EXISTING_FILE': {\n        draftState.fileToEdit.isUploading = true;\n        break;\n      }\n      case 'REMOVE_FILE_TO_UPLOAD': {\n        const canAddToSelectedFiles =\n          action.multiple || (!action.multiple && draftState.selectedFiles.length === 0);\n\n        if (action.addToSelectedFiles) {\n          if (canAddToSelectedFiles) {\n            draftState.selectedFiles = [...draftState.selectedFiles, ...action.addToSelectedFiles];\n          }\n          draftState.currentTab = 'selected';\n        }\n\n        const index = draftState.filesToUpload.findIndex(\n          fileToUpload => fileToUpload.originalIndex === action.fileIndex\n        );\n        draftState.filesToUpload.splice(index, 1);\n        break;\n      }\n      case 'REMOVE_FILTER': {\n        const { filterToRemove } = action;\n\n        draftState.params.filters.splice(filterToRemove, 1);\n        break;\n      }\n      case 'RESET_PROPS': {\n        if (action.defaultSort) {\n          draftState.params._sort = action.defaultSort;\n        } else {\n          return initialState;\n        }\n        break;\n      }\n      case 'SET_CROP_RESULT': {\n        draftState.fileToEdit.file = action.blob;\n        break;\n      }\n      case 'SET_FILE_ERROR': {\n        draftState.filesToUpload.forEach((fileToUpload, index) => {\n          if (fileToUpload.originalIndex === action.fileIndex) {\n            draftState.filesToUpload[index] = {\n              ...draftState.filesToUpload[index],\n              isUploading: false,\n              hasError: true,\n              errorMessage: action.errorMessage,\n            };\n          }\n        });\n        break;\n      }\n      case 'SET_FILE_TO_DOWNLOAD_ERROR': {\n        const index = state.filesToUpload.findIndex(file => file.tempId === action.fileTempId);\n\n        draftState.filesToUpload[index] = {\n          ...draftState.filesToUpload[index],\n          isDownloading: false,\n          hasError: true,\n          errorMessage: draftState.filesToUpload[index].fileOriginalName,\n        };\n\n        break;\n      }\n      case 'SET_FILE_TO_EDIT': {\n        draftState.fileToEdit = formatFileForEditing(\n          [...state.files, ...state.selectedFiles].find(\n            file => file.id.toString() === action.fileId.toString()\n          )\n        );\n        break;\n      }\n      case 'SET_FILE_TO_EDIT_ERROR': {\n        draftState.fileToEdit.isUploading = false;\n        draftState.fileToEdit.hasError = true;\n        draftState.fileToEdit.errorMessage = action.errorMessage;\n        break;\n      }\n      case 'SET_FILES_UPLOADING_STATE': {\n        draftState.filesToUpload.forEach((fileToUpload, index) => {\n          draftState.filesToUpload[index] = {\n            ...fileToUpload,\n            isUploading: true,\n            hasError: false,\n            errorMessage: null,\n          };\n        });\n        break;\n      }\n      case 'SET_FORM_DISABLED': {\n        draftState.isFormDisabled = action.isFormDisabled;\n        break;\n      }\n      case 'SET_NEW_FILE_TO_EDIT': {\n        draftState.fileToEdit = draftState.filesToUpload[action.fileIndex];\n        break;\n      }\n      case 'SET_PARAM': {\n        const { name, value } = action.param;\n\n        if (name === 'filters') {\n          const canAddFilter =\n            intersectionWith(state.params.filters, [value], isEqual).length === 0;\n\n          if (canAddFilter) {\n            draftState.params._start = 0;\n            draftState.params.filters.push(value);\n          }\n          break;\n        }\n\n        if (name === '_limit') {\n          draftState.params._start = 0;\n        }\n\n        draftState.params[name] = value;\n        break;\n      }\n      case 'TOGGLE_MODAL_WARNING': {\n        draftState.isWarningDeleteOpen = !state.isWarningDeleteOpen;\n        break;\n      }\n      case 'TOGGLE_SELECT_ALL': {\n        const allowedFiles =\n          state.allowedTypes.length > 0\n            ? state.files.filter(file => state.allowedTypes.includes(getType(file.mime)))\n            : state.files;\n        const comparator = (first, second) => first.id === second.id;\n        const isSelected =\n          intersectionWith(state.selectedFiles, allowedFiles, comparator).length ===\n          allowedFiles.length;\n\n        if (isSelected) {\n          draftState.selectedFiles = differenceWith(state.selectedFiles, state.files, comparator);\n          break;\n        }\n\n        draftState.selectedFiles = unionWith(state.selectedFiles, allowedFiles, comparator);\n        break;\n      }\n\n      default:\n        return draftState;\n    }\n  });\n\nexport default reducer;\nexport { initialState };\n"]},"metadata":{},"sourceType":"script"}