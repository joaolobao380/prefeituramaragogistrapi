{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.injectReducerFactory = injectReducerFactory;\nexports[\"default\"] = getInjectors;\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _isEmpty = _interopRequireDefault(require(\"lodash/isEmpty\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _isString = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _reducers = _interopRequireDefault(require(\"../reducers\"));\n\nvar _checkStore = _interopRequireDefault(require(\"./checkStore\"));\n\n/* eslint-disable */\nfunction injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) (0, _checkStore[\"default\"])(store);\n    (0, _invariant[\"default\"])((0, _isString[\"default\"])(key) && !(0, _isEmpty[\"default\"])(key) && (0, _isFunction[\"default\"])(reducer), '(app/utils...) injectReducer: Expected `reducer` to be a reducer function'); // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n\n    store.replaceReducer((0, _reducers[\"default\"])(store.injectedReducers));\n  };\n}\n\nfunction getInjectors(store) {\n  (0, _checkStore[\"default\"])(store);\n  return {\n    injectReducer: injectReducerFactory(store, true)\n  };\n}","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/utils/reducerInjectors.js"],"names":["injectReducerFactory","store","isValid","injectReducer","key","reducer","Reflect","has","injectedReducers","replaceReducer","getInjectors"],"mappings":";;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AARA;AAUO,SAASA,oBAAT,CAA8BC,KAA9B,EAAqCC,OAArC,EAA8C;AACnD,SAAO,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,OAA5B,EAAqC;AAC1C,QAAI,CAACH,OAAL,EAAc,4BAAWD,KAAX;AAEd,+BACE,0BAASG,GAAT,KAAiB,CAAC,yBAAQA,GAAR,CAAlB,IAAkC,4BAAWC,OAAX,CADpC,EAEE,2EAFF,EAH0C,CAQ1C;;AACA,QACEC,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,gBAAlB,EAAoCJ,GAApC,KACAH,KAAK,CAACO,gBAAN,CAAuBJ,GAAvB,MAAgCC,OAFlC,EAIE;AAEFJ,IAAAA,KAAK,CAACO,gBAAN,CAAuBJ,GAAvB,IAA8BC,OAA9B,CAf0C,CAeH;;AACvCJ,IAAAA,KAAK,CAACQ,cAAN,CAAqB,0BAAcR,KAAK,CAACO,gBAApB,CAArB;AACD,GAjBD;AAkBD;;AAEc,SAASE,YAAT,CAAsBT,KAAtB,EAA6B;AAC1C,8BAAWA,KAAX;AAEA,SAAO;AACLE,IAAAA,aAAa,EAAEH,oBAAoB,CAACC,KAAD,EAAQ,IAAR;AAD9B,GAAP;AAGD","sourcesContent":["/* eslint-disable */\n\nimport invariant from 'invariant';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\n\nimport createReducer from '../reducers';\nimport checkStore from './checkStore';\n\nexport function injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(key) && !isEmpty(key) && isFunction(reducer),\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function'\n    );\n\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n    if (\n      Reflect.has(store.injectedReducers, key) &&\n      store.injectedReducers[key] === reducer\n    )\n      return;\n\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.injectedReducers));\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectReducerFactory(store, true),\n  };\n}\n"]},"metadata":{},"sourceType":"script"}