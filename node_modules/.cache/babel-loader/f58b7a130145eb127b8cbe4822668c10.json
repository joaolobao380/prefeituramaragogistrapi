{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _PlayIcon = _interopRequireDefault(require(\"../PlayIcon\"));\n\nvar _Duration = _interopRequireDefault(require(\"../Duration\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar VideoPlayer = function VideoPlayer(_ref) {\n  var src = _ref.src;\n\n  var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      duration = _useState2[0],\n      setDuration = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      isPlaying = _useState4[0],\n      setIsPlaying = _useState4[1];\n\n  var videoRef = (0, _react.useRef)();\n\n  var togglePlay = function togglePlay() {\n    if (isPlaying) {\n      videoRef.current.pause(); // Change isPlaying here too because onPause handler is only called on controls click\n\n      setIsPlaying(false);\n    } else {\n      videoRef.current.play();\n    }\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], {\n    onClick: togglePlay\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"video\", {\n    controls: isPlaying,\n    ref: videoRef,\n    src: src,\n    crossOrigin: \"anonymous\",\n    onLoadedData: function onLoadedData(_ref2) {\n      var duration = _ref2.target.duration;\n      setDuration(duration);\n    },\n    onPlay: function onPlay() {\n      setIsPlaying(true);\n    },\n    onPause: function onPause() {\n      setIsPlaying(false);\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"track\", {\n    \"default\": true,\n    kind: \"captions\",\n    srcLang: \"en\",\n    src: \"\"\n  })), !isPlaying && /*#__PURE__*/_react[\"default\"].createElement(_PlayIcon[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_Duration[\"default\"], {\n    duration: duration\n  }));\n};\n\nVideoPlayer.defaultProps = {\n  src: null\n};\nVideoPlayer.propTypes = {\n  src: _propTypes[\"default\"].string\n};\nvar _default = VideoPlayer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/components/VideoPlayer/index.js"],"names":["VideoPlayer","src","duration","setDuration","isPlaying","setIsPlaying","videoRef","togglePlay","current","pause","play","target","defaultProps","propTypes","PropTypes","string"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAC/B,kBAAgC,qBAAS,CAAT,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAkC,qBAAS,KAAT,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,QAAQ,GAAG,oBAAjB;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIH,SAAJ,EAAe;AACbE,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB,GADa,CAEb;;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJD,MAIO;AACLC,MAAAA,QAAQ,CAACE,OAAT,CAAiBE,IAAjB;AACD;AACF,GARD;;AAUA,sBACE,gCAAC,mBAAD;AAAS,IAAA,OAAO,EAAEH;AAAlB,kBACE;AACE,IAAA,QAAQ,EAAEH,SADZ;AAEE,IAAA,GAAG,EAAEE,QAFP;AAGE,IAAA,GAAG,EAAEL,GAHP;AAIE,IAAA,WAAW,EAAC,WAJd;AAKE,IAAA,YAAY,EAAE,6BAA8B;AAAA,UAAjBC,QAAiB,SAA3BS,MAA2B,CAAjBT,QAAiB;AAC1CC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAPH;AAQE,IAAA,MAAM,EAAE,kBAAM;AACZG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAVH;AAWE,IAAA,OAAO,EAAE,mBAAM;AACbA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AAbH,kBAeE;AAAO,mBAAP;AAAe,IAAA,IAAI,EAAC,UAApB;AAA+B,IAAA,OAAO,EAAC,IAAvC;AAA4C,IAAA,GAAG,EAAC;AAAhD,IAfF,CADF,EAkBG,CAACD,SAAD,iBAAc,gCAAC,oBAAD,OAlBjB,eAmBE,gCAAC,oBAAD;AAAU,IAAA,QAAQ,EAAEF;AAApB,IAnBF,CADF;AAuBD,CAvCD;;AAyCAF,WAAW,CAACY,YAAZ,GAA2B;AACzBX,EAAAA,GAAG,EAAE;AADoB,CAA3B;AAIAD,WAAW,CAACa,SAAZ,GAAwB;AACtBZ,EAAAA,GAAG,EAAEa,sBAAUC;AADO,CAAxB;eAIef,W","sourcesContent":["import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PlayIcon from '../PlayIcon';\nimport Duration from '../Duration';\nimport Wrapper from './Wrapper';\n\nconst VideoPlayer = ({ src }) => {\n  const [duration, setDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const videoRef = useRef();\n\n  const togglePlay = () => {\n    if (isPlaying) {\n      videoRef.current.pause();\n      // Change isPlaying here too because onPause handler is only called on controls click\n      setIsPlaying(false);\n    } else {\n      videoRef.current.play();\n    }\n  };\n\n  return (\n    <Wrapper onClick={togglePlay}>\n      <video\n        controls={isPlaying}\n        ref={videoRef}\n        src={src}\n        crossOrigin=\"anonymous\"\n        onLoadedData={({ target: { duration } }) => {\n          setDuration(duration);\n        }}\n        onPlay={() => {\n          setIsPlaying(true);\n        }}\n        onPause={() => {\n          setIsPlaying(false);\n        }}\n      >\n        <track default kind=\"captions\" srcLang=\"en\" src=\"\" />\n      </video>\n      {!isPlaying && <PlayIcon />}\n      <Duration duration={duration} />\n    </Wrapper>\n  );\n};\n\nVideoPlayer.defaultProps = {\n  src: null,\n};\n\nVideoPlayer.propTypes = {\n  src: PropTypes.string,\n};\n\nexport default VideoPlayer;\n"]},"metadata":{},"sourceType":"script"}