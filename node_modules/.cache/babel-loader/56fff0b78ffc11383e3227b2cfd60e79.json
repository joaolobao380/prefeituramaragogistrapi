{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _lodash = require(\"lodash\");\n\nvar _init = _interopRequireDefault(require(\"./init\"));\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar useRolesList = function useRolesList() {\n  var shouldFetchData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState, function () {\n    return (0, _init[\"default\"])(_reducer.initialState, shouldFetchData);\n  }),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      roles = _useReducer2$.roles,\n      isLoading = _useReducer2$.isLoading,\n      dispatch = _useReducer2[1];\n\n  (0, _react.useEffect)(function () {\n    if (shouldFetchData) {\n      fetchRolesList();\n    }\n  }, [shouldFetchData]);\n\n  var fetchRolesList = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var _yield$request, data, message;\n\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: 'GET_DATA'\n              });\n              _context.next = 4;\n              return (0, _strapiHelperPlugin.request)('/admin/roles', {\n                method: 'GET'\n              });\n\n            case 4:\n              _yield$request = _context.sent;\n              data = _yield$request.data;\n              dispatch({\n                type: 'GET_DATA_SUCCEEDED',\n                data: data\n              });\n              _context.next = 14;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              message = (0, _lodash.get)(_context.t0, ['response', 'payload', 'message'], 'An error occured');\n              dispatch({\n                type: 'GET_DATA_ERROR'\n              });\n\n              if (message !== 'Forbidden') {\n                strapi.notification.toggle({\n                  type: 'warning',\n                  message: message\n                });\n              }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function fetchRolesList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    roles: roles,\n    isLoading: isLoading,\n    getData: fetchRolesList\n  };\n};\n\nvar _default = useRolesList;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/hooks/useRolesList/index.js"],"names":["useRolesList","shouldFetchData","reducer","initialState","roles","isLoading","dispatch","fetchRolesList","type","method","data","message","strapi","notification","toggle","getData"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAA4B;AAAA,MAA3BC,eAA2B,uEAAT,IAAS;;AAC/C,oBAAyC,uBAAWC,mBAAX,EAAoBC,qBAApB,EAAkC;AAAA,WACzE,sBAAKA,qBAAL,EAAmBF,eAAnB,CADyE;AAAA,GAAlC,CAAzC;AAAA;AAAA;AAAA,MAASG,KAAT,iBAASA,KAAT;AAAA,MAAgBC,SAAhB,iBAAgBA,SAAhB;AAAA,MAA6BC,QAA7B;;AAIA,wBAAU,YAAM;AACd,QAAIL,eAAJ,EAAqB;AACnBM,MAAAA,cAAc;AACf;AACF,GAJD,EAIG,CAACN,eAAD,CAJH;;AAMA,MAAMM,cAAc;AAAA,6FAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnBD,cAAAA,QAAQ,CAAC;AACPE,gBAAAA,IAAI,EAAE;AADC,eAAD,CAAR;AAFmB;AAAA,qBAMI,iCAAQ,cAAR,EAAwB;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAAxB,CANJ;;AAAA;AAAA;AAMXC,cAAAA,IANW,kBAMXA,IANW;AAQnBJ,cAAAA,QAAQ,CAAC;AACPE,gBAAAA,IAAI,EAAE,oBADC;AAEPE,gBAAAA,IAAI,EAAJA;AAFO,eAAD,CAAR;AARmB;AAAA;;AAAA;AAAA;AAAA;AAabC,cAAAA,OAba,GAaH,8BAAS,CAAC,UAAD,EAAa,SAAb,EAAwB,SAAxB,CAAT,EAA6C,kBAA7C,CAbG;AAenBL,cAAAA,QAAQ,CAAC;AACPE,gBAAAA,IAAI,EAAE;AADC,eAAD,CAAR;;AAIA,kBAAIG,OAAO,KAAK,WAAhB,EAA6B;AAC3BC,gBAAAA,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2B;AACzBN,kBAAAA,IAAI,EAAE,SADmB;AAEzBG,kBAAAA,OAAO,EAAPA;AAFyB,iBAA3B;AAID;;AAxBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdJ,cAAc;AAAA;AAAA;AAAA,KAApB;;AA4BA,SAAO;AAAEH,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,SAAS,EAATA,SAAT;AAAoBU,IAAAA,OAAO,EAAER;AAA7B,GAAP;AACD,CAxCD;;eA0CeP,Y","sourcesContent":["import { useEffect, useReducer } from 'react';\nimport { request } from 'strapi-helper-plugin';\nimport { get } from 'lodash';\nimport init from './init';\nimport reducer, { initialState } from './reducer';\n\nconst useRolesList = (shouldFetchData = true) => {\n  const [{ roles, isLoading }, dispatch] = useReducer(reducer, initialState, () =>\n    init(initialState, shouldFetchData)\n  );\n\n  useEffect(() => {\n    if (shouldFetchData) {\n      fetchRolesList();\n    }\n  }, [shouldFetchData]);\n\n  const fetchRolesList = async () => {\n    try {\n      dispatch({\n        type: 'GET_DATA',\n      });\n\n      const { data } = await request('/admin/roles', { method: 'GET' });\n\n      dispatch({\n        type: 'GET_DATA_SUCCEEDED',\n        data,\n      });\n    } catch (err) {\n      const message = get(err, ['response', 'payload', 'message'], 'An error occured');\n\n      dispatch({\n        type: 'GET_DATA_ERROR',\n      });\n\n      if (message !== 'Forbidden') {\n        strapi.notification.toggle({\n          type: 'warning',\n          message,\n        });\n      }\n    }\n  };\n\n  return { roles, isLoading, getData: fetchRolesList };\n};\n\nexport default useRolesList;\n"]},"metadata":{},"sourceType":"script"}