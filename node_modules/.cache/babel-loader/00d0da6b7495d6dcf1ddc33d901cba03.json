{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _lodash = require(\"lodash\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _InputModalDataManager = _interopRequireDefault(require(\"../../contexts/InputModal/InputModalDataManager\"));\n\nvar _init = _interopRequireDefault(require(\"./init\"));\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable indent */\nvar InputModalStepperProvider = function InputModalStepperProvider(_ref) {\n  var allowedActions = _ref.allowedActions,\n      allowedTypes = _ref.allowedTypes,\n      children = _ref.children,\n      initialFilesToUpload = _ref.initialFilesToUpload,\n      initialFileToEdit = _ref.initialFileToEdit,\n      isOpen = _ref.isOpen,\n      multiple = _ref.multiple,\n      noNavigation = _ref.noNavigation,\n      onClosed = _ref.onClosed,\n      onInputMediaChange = _ref.onInputMediaChange,\n      selectedFiles = _ref.selectedFiles,\n      step = _ref.step;\n\n  var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      formErrors = _useState2[0],\n      setFormErrors = _useState2[1];\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      emitEvent = _useGlobalContext.emitEvent,\n      plugins = _useGlobalContext.plugins;\n\n  var _getFileModelTimestam = (0, _utils.getFileModelTimestamps)(plugins),\n      _getFileModelTimestam2 = (0, _slicedToArray2[\"default\"])(_getFileModelTimestam, 2),\n      updated_at = _getFileModelTimestam2[1];\n\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState, function (state) {\n    return (0, _init[\"default\"])(_objectSpread(_objectSpread({}, state), {}, {\n      allowedTypes: allowedTypes,\n      currentStep: step,\n      initialFileToEdit: initialFileToEdit,\n      fileToEdit: initialFileToEdit,\n      initialSelectedFiles: Array.isArray(selectedFiles) ? selectedFiles : [selectedFiles],\n      selectedFiles: Array.isArray(selectedFiles) ? selectedFiles : [selectedFiles],\n      filesToUpload: initialFilesToUpload ? (0, _utils.createNewFilesToUploadArray)(initialFilesToUpload).map(function (file, index) {\n        return _objectSpread(_objectSpread({}, file), {}, {\n          originalIndex: index\n        });\n      }) : [],\n      params: _objectSpread(_objectSpread({}, state.params), {}, {\n        _sort: \"\".concat(updated_at, \":DESC\")\n      })\n    }));\n  }),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      reducerState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var params = reducerState.params,\n      filesToDownload = reducerState.filesToDownload,\n      filesToUpload = reducerState.filesToUpload,\n      fileToEdit = reducerState.fileToEdit;\n  (0, _react.useEffect)(function () {\n    if (isOpen) {\n      fetchMediaLib();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isOpen, params]);\n\n  var downloadFiles = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var files;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              files = (0, _utils.getFilesToDownload)(filesToUpload); // Emit event when the users download files from url\n\n              if (files.length > 0) {\n                emitEvent('didSelectFile', {\n                  source: 'url',\n                  location: 'content-manager'\n                });\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return Promise.all(files.map(function (file) {\n                var source = file.source;\n                return _axios[\"default\"].get(file.fileURL, {\n                  responseType: 'blob',\n                  cancelToken: source.token,\n                  timeout: 60000\n                }).then(function (_ref3) {\n                  var data = _ref3.data;\n                  var createdFile = new File([data], file.fileURL, {\n                    type: data.type\n                  });\n                  dispatch({\n                    type: 'FILE_DOWNLOADED',\n                    blob: createdFile,\n                    originalIndex: file.originalIndex,\n                    fileTempId: file.tempId\n                  });\n                })[\"catch\"](function (err) {\n                  console.error('fetch file error', err);\n                  dispatch({\n                    type: 'SET_FILE_TO_DOWNLOAD_ERROR',\n                    originalIndex: file.originalIndex,\n                    fileTempId: file.tempId\n                  });\n                });\n              }));\n\n            case 5:\n              _context.next = 9;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](2);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 7]]);\n    }));\n\n    return function downloadFiles() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleRemoveFileToUpload = function handleRemoveFileToUpload(fileIndex) {\n    dispatch({\n      type: 'REMOVE_FILE_TO_UPLOAD',\n      fileIndex: fileIndex\n    });\n  };\n\n  var handleModalTabChange = function handleModalTabChange(to) {\n    dispatch({\n      type: 'ON_CHANGE_MODAL_TAB',\n      to: to\n    });\n  };\n\n  var handleClickNextButton = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n      var formattedErrors;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _utils.urlSchema.validate({\n                filesToDownload: filesToDownload.filter(function (url) {\n                  return !(0, _lodash.isEmpty)(url);\n                })\n              }, {\n                abortEarly: false\n              });\n\n            case 3:\n              setFormErrors(null); // Navigate to next step\n\n              dispatch({\n                type: 'ADD_URLS_TO_FILES_TO_UPLOAD',\n                nextStep: 'upload'\n              });\n              _context2.next = 11;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              formattedErrors = (0, _utils.getYupError)(_context2.t0);\n              setFormErrors(formattedErrors.filesToDownload);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function handleClickNextButton() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleFileToEditChange = function handleFileToEditChange(_ref5) {\n    var _ref5$target = _ref5.target,\n        name = _ref5$target.name,\n        value = _ref5$target.value;\n    var val = value;\n    var type = 'ON_CHANGE';\n\n    if (name === 'url') {\n      setFormErrors(null);\n      val = value.split('\\n');\n      type = 'ON_CHANGE_URLS_TO_DOWNLOAD';\n    }\n\n    dispatch({\n      type: type,\n      keys: name,\n      value: val\n    });\n  };\n\n  var handleMoveAsset = function handleMoveAsset(dragIndex, hoverIndex) {\n    dispatch({\n      type: 'MOVE_ASSET',\n      dragIndex: dragIndex,\n      hoverIndex: hoverIndex\n    });\n  };\n\n  var toggleModalWarning = function toggleModalWarning() {\n    dispatch({\n      type: 'TOGGLE_MODAL_WARNING'\n    });\n  };\n\n  var submitEditNewFile = function submitEditNewFile() {\n    dispatch({\n      type: 'ON_SUBMIT_EDIT_NEW_FILE'\n    });\n  };\n\n  var submitEditExistingFile = function submitEditExistingFile() {\n    dispatch({\n      type: 'ON_SUBMIT_EDIT_EXISTING_FILE'\n    });\n  };\n\n  var handleEditExistingFile = function handleEditExistingFile(file) {\n    dispatch({\n      type: 'EDIT_EXISTING_FILE',\n      file: file\n    });\n  };\n\n  var handleResetFileToEdit = function handleResetFileToEdit() {\n    dispatch({\n      type: 'RESET_FILE_TO_EDIT'\n    });\n  };\n\n  var removeFilter = function removeFilter(index) {\n    dispatch({\n      type: 'REMOVE_FILTER',\n      filterToRemove: index\n    });\n  };\n\n  var handleClose = function handleClose() {\n    setFormErrors(null);\n    dispatch({\n      type: 'RESET_PROPS',\n      defaultSort: \"\".concat(updated_at, \":DESC\")\n    });\n    onClosed();\n  };\n\n  var handleFileSelection = function handleFileSelection(_ref6) {\n    var name = _ref6.target.name;\n    dispatch({\n      type: 'ON_FILE_SELECTION',\n      id: name\n    });\n  };\n\n  var handleAllFilesSelection = function handleAllFilesSelection() {\n    dispatch({\n      type: 'TOGGLE_SELECT_ALL'\n    });\n  };\n\n  var setParam = function setParam(param) {\n    dispatch({\n      type: 'SET_PARAM',\n      param: param\n    });\n  };\n\n  var goTo = function goTo(to) {\n    dispatch({\n      type: 'GO_TO',\n      to: to\n    });\n  };\n\n  var handleGoToEditNewFile = function handleGoToEditNewFile(fileIndex) {\n    dispatch({\n      type: 'SET_NEW_FILE_TO_EDIT',\n      fileIndex: fileIndex\n    });\n    goTo('edit-new');\n  };\n\n  var handleGoToEditFile = function handleGoToEditFile(fileId) {\n    dispatch({\n      type: 'SET_FILE_TO_EDIT',\n      fileId: fileId\n    });\n    goTo('edit');\n  };\n\n  var handleCleanFilesError = function handleCleanFilesError() {\n    dispatch({\n      type: 'CLEAN_FILES_ERROR'\n    });\n  };\n\n  var handleSetCropResult = function handleSetCropResult(blob) {\n    // Emit event : the user cropped a file that is not uploaded\n    emitEvent('didCropFile', {\n      duplicatedFile: null,\n      location: 'content-manager'\n    });\n    dispatch({\n      type: 'SET_CROP_RESULT',\n      blob: blob\n    });\n  };\n\n  var handleFormDisabled = function handleFormDisabled(isFormDisabled) {\n    dispatch({\n      type: 'SET_FORM_DISABLED',\n      isFormDisabled: isFormDisabled\n    });\n  };\n\n  var handleAbortUpload = function handleAbortUpload() {\n    var abortController = fileToEdit.abortController;\n    abortController.abort();\n    dispatch({\n      type: 'ON_ABORT_UPLOAD'\n    });\n  };\n\n  var handleCancelFileToUpload = function handleCancelFileToUpload(fileIndex) {\n    var fileToCancel = (0, _lodash.get)(filesToUpload, fileIndex, {});\n    var source = fileToCancel.source; // Cancel upload\n\n    if (source) {\n      // Cancel dowload file upload with axios\n      source.cancel('Operation canceled by the user.');\n    } else {\n      // Cancel uplodad file with fetch\n      fileToCancel.abortController.abort();\n    }\n\n    handleRemoveFileToUpload(fileIndex);\n  };\n\n  var getFilters = function getFilters() {\n    var filtersToOmit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var compactedParams = (0, _utils.compactParams)(params);\n    var searchParams = (0, _strapiHelperPlugin.generateSearchFromFilters)(compactedParams, filtersToOmit);\n    return (0, _utils.formatFilters)(searchParams);\n  };\n\n  var fetchMediaLibFilesCount = /*#__PURE__*/function () {\n    var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n      var requestURL, paramsToSend;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              requestURL = (0, _utils.getRequestUrl)('files/count');\n              paramsToSend = getFilters(['_limit', '_sort', '_start']);\n              _context3.prev = 2;\n              _context3.next = 5;\n              return (0, _strapiHelperPlugin.request)(\"\".concat(requestURL, \"?\").concat(paramsToSend), {\n                method: 'GET'\n              });\n\n            case 5:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.error(_context3.t0);\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n              return _context3.abrupt(\"return\", 0);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 8]]);\n    }));\n\n    return function fetchMediaLibFilesCount() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var fetchMediaLib = /*#__PURE__*/function () {\n    var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n      var _yield$Promise$all, _yield$Promise$all2, files, count;\n\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!allowedActions.canRead) {\n                _context4.next = 8;\n                break;\n              }\n\n              _context4.next = 3;\n              return Promise.all([fetchMediaLibFiles(), fetchMediaLibFilesCount()]);\n\n            case 3:\n              _yield$Promise$all = _context4.sent;\n              _yield$Promise$all2 = (0, _slicedToArray2[\"default\"])(_yield$Promise$all, 2);\n              files = _yield$Promise$all2[0];\n              count = _yield$Promise$all2[1];\n              dispatch({\n                type: 'GET_DATA_SUCCEEDED',\n                files: files,\n                countData: count\n              });\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function fetchMediaLib() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var fetchMediaLibFiles = /*#__PURE__*/function () {\n    var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n      var requestURL, paramsToSend;\n      return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              requestURL = (0, _utils.getRequestUrl)('files');\n              paramsToSend = getFilters();\n              _context5.prev = 2;\n              _context5.next = 5;\n              return (0, _strapiHelperPlugin.request)(\"\".concat(requestURL, \"?\").concat(paramsToSend), {\n                method: 'GET'\n              });\n\n            case 5:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](2);\n              console.error(_context5.t0);\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n              return _context5.abrupt(\"return\", []);\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[2, 8]]);\n    }));\n\n    return function fetchMediaLibFiles() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var addFilesToUpload = function addFilesToUpload(_ref10) {\n    var value = _ref10.target.value;\n    emitEvent('didSelectFile', {\n      source: 'computer',\n      location: 'content-manager'\n    });\n    dispatch({\n      type: 'ADD_FILES_TO_UPLOAD',\n      filesToUpload: value\n    });\n  };\n\n  var handleClearFilesToUploadAndDownload = function handleClearFilesToUploadAndDownload() {\n    dispatch({\n      type: 'CLEAR_FILES_TO_UPLOAD_AND_DOWNLOAD'\n    });\n  };\n\n  var handleSetFileToEditError = function handleSetFileToEditError(errorMessage) {\n    dispatch({\n      type: 'SET_FILE_TO_EDIT_ERROR',\n      errorMessage: errorMessage\n    });\n  };\n\n  var handleUploadFiles = /*#__PURE__*/function () {\n    var _ref11 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7() {\n      var requests;\n      return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              dispatch({\n                type: 'SET_FILES_UPLOADING_STATE'\n              });\n              requests = filesToUpload.map( /*#__PURE__*/function () {\n                var _ref13 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(_ref12) {\n                  var file, fileInfo, originalIndex, originalName, abortController, formData, headers, infos, uploadedFile, filesToSelect, status, statusText, errorMessage;\n                  return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          file = _ref12.file, fileInfo = _ref12.fileInfo, originalIndex = _ref12.originalIndex, originalName = _ref12.originalName, abortController = _ref12.abortController;\n                          formData = new FormData();\n                          headers = {};\n                          infos = (0, _lodash.clone)(fileInfo);\n\n                          if (originalName === infos.name) {\n                            (0, _lodash.set)(infos, 'name', null);\n                          }\n\n                          formData.append('files', file);\n                          formData.append('fileInfo', JSON.stringify(infos));\n                          _context6.prev = 7;\n                          _context6.next = 10;\n                          return (0, _strapiHelperPlugin.request)(\"/\".concat(_pluginId[\"default\"]), {\n                            method: 'POST',\n                            headers: headers,\n                            body: formData,\n                            signal: abortController.signal\n                          }, false, false);\n\n                        case 10:\n                          uploadedFile = _context6.sent;\n                          filesToSelect = uploadedFile.filter(function (file) {\n                            var fileType = file.mime.split('/')[0];\n\n                            if (allowedTypes.includes('file') && !['video', 'image'].includes(fileType)) {\n                              return true;\n                            }\n\n                            return allowedTypes.length === 0 || allowedTypes.includes(fileType);\n                          });\n                          dispatch({\n                            type: 'REMOVE_FILE_TO_UPLOAD',\n                            fileIndex: originalIndex,\n                            addToSelectedFiles: filesToSelect,\n                            multiple: multiple\n                          });\n                          _context6.next = 22;\n                          break;\n\n                        case 15:\n                          _context6.prev = 15;\n                          _context6.t0 = _context6[\"catch\"](7);\n                          status = (0, _lodash.get)(_context6.t0, 'response.status', (0, _lodash.get)(_context6.t0, 'status', null));\n                          statusText = (0, _lodash.get)(_context6.t0, 'response.statusText', (0, _lodash.get)(_context6.t0, 'statusText', null));\n                          errorMessage = (0, _lodash.get)(_context6.t0, ['response', 'payload', 'message', '0', 'messages', '0', 'message'], (0, _lodash.get)(_context6.t0, ['response', 'payload', 'message'], statusText)); // TODO fix errors globally when the back-end sends readable one\n\n                          if (status === 413) {\n                            errorMessage = formatMessage({\n                              id: 'app.utils.errors.file-too-big.message'\n                            });\n                          }\n\n                          if (status) {\n                            dispatch({\n                              type: 'SET_FILE_ERROR',\n                              fileIndex: originalIndex,\n                              errorMessage: errorMessage\n                            });\n                          }\n\n                        case 22:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6, null, [[7, 15]]);\n                }));\n\n                return function (_x) {\n                  return _ref13.apply(this, arguments);\n                };\n              }());\n              _context7.next = 4;\n              return Promise.all(requests);\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function handleUploadFiles() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_InputModalDataManager[\"default\"].Provider, {\n    value: _objectSpread(_objectSpread({}, reducerState), {}, {\n      allowedActions: allowedActions,\n      addFilesToUpload: addFilesToUpload,\n      downloadFiles: downloadFiles,\n      fetchMediaLib: fetchMediaLib,\n      formErrors: formErrors,\n      goTo: goTo,\n      handleAbortUpload: handleAbortUpload,\n      handleAllFilesSelection: handleAllFilesSelection,\n      handleCancelFileToUpload: handleCancelFileToUpload,\n      handleClickNextButton: handleClickNextButton,\n      handleCleanFilesError: handleCleanFilesError,\n      handleClearFilesToUploadAndDownload: handleClearFilesToUploadAndDownload,\n      handleClose: handleClose,\n      handleEditExistingFile: handleEditExistingFile,\n      handleFileSelection: handleFileSelection,\n      handleFileToEditChange: handleFileToEditChange,\n      handleFormDisabled: handleFormDisabled,\n      handleGoToEditFile: handleGoToEditFile,\n      handleGoToEditNewFile: handleGoToEditNewFile,\n      handleModalTabChange: handleModalTabChange,\n      handleRemoveFileToUpload: handleRemoveFileToUpload,\n      handleResetFileToEdit: handleResetFileToEdit,\n      handleSetCropResult: handleSetCropResult,\n      handleUploadFiles: handleUploadFiles,\n      handleSetFileToEditError: handleSetFileToEditError,\n      moveAsset: handleMoveAsset,\n      multiple: multiple,\n      noNavigation: noNavigation,\n      onInputMediaChange: onInputMediaChange,\n      removeFilter: removeFilter,\n      setParam: setParam,\n      submitEditNewFile: submitEditNewFile,\n      submitEditExistingFile: submitEditExistingFile,\n      toggleModalWarning: toggleModalWarning\n    })\n  }, children);\n};\n\nInputModalStepperProvider.propTypes = {\n  allowedActions: _propTypes[\"default\"].shape({\n    canCopyLink: _propTypes[\"default\"].bool,\n    canCreate: _propTypes[\"default\"].bool,\n    canDownload: _propTypes[\"default\"].bool,\n    canMain: _propTypes[\"default\"].bool,\n    canRead: _propTypes[\"default\"].bool,\n    canSettings: _propTypes[\"default\"].bool,\n    canUpdate: _propTypes[\"default\"].bool\n  }),\n  allowedTypes: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string),\n  children: _propTypes[\"default\"].node.isRequired,\n  initialFilesToUpload: _propTypes[\"default\"].object,\n  initialFileToEdit: _propTypes[\"default\"].object,\n  isOpen: _propTypes[\"default\"].bool,\n  multiple: _propTypes[\"default\"].bool.isRequired,\n  noNavigation: _propTypes[\"default\"].bool,\n  onClosed: _propTypes[\"default\"].func.isRequired,\n  onInputMediaChange: _propTypes[\"default\"].func,\n  selectedFiles: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].object, _propTypes[\"default\"].array]),\n  step: _propTypes[\"default\"].string.isRequired\n};\nInputModalStepperProvider.defaultProps = {\n  allowedActions: {\n    canCopyLink: true,\n    canCreate: true,\n    canDownload: true,\n    canMain: true,\n    canRead: true,\n    canSettings: true,\n    canUpdate: true\n  },\n  initialFileToEdit: null,\n  initialFilesToUpload: null,\n  isOpen: false,\n  noNavigation: false,\n  onInputMediaChange: function onInputMediaChange() {},\n  selectedFiles: null,\n  allowedTypes: []\n};\nvar _default = InputModalStepperProvider;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/containers/InputModalStepperProvider/index.js"],"names":["InputModalStepperProvider","allowedActions","allowedTypes","children","initialFilesToUpload","initialFileToEdit","isOpen","multiple","noNavigation","onClosed","onInputMediaChange","selectedFiles","step","formErrors","setFormErrors","formatMessage","emitEvent","plugins","updated_at","reducer","initialState","state","currentStep","fileToEdit","initialSelectedFiles","Array","isArray","filesToUpload","map","file","index","originalIndex","params","_sort","reducerState","dispatch","filesToDownload","fetchMediaLib","downloadFiles","files","length","source","location","Promise","all","axios","get","fileURL","responseType","cancelToken","token","timeout","then","data","createdFile","File","type","blob","fileTempId","tempId","err","console","error","handleRemoveFileToUpload","fileIndex","handleModalTabChange","to","handleClickNextButton","urlSchema","validate","filter","url","abortEarly","nextStep","formattedErrors","handleFileToEditChange","target","name","value","val","split","keys","handleMoveAsset","dragIndex","hoverIndex","toggleModalWarning","submitEditNewFile","submitEditExistingFile","handleEditExistingFile","handleResetFileToEdit","removeFilter","filterToRemove","handleClose","defaultSort","handleFileSelection","id","handleAllFilesSelection","setParam","param","goTo","handleGoToEditNewFile","handleGoToEditFile","fileId","handleCleanFilesError","handleSetCropResult","duplicatedFile","handleFormDisabled","isFormDisabled","handleAbortUpload","abortController","abort","handleCancelFileToUpload","fileToCancel","cancel","getFilters","filtersToOmit","compactedParams","searchParams","fetchMediaLibFilesCount","requestURL","paramsToSend","method","strapi","notification","toggle","message","canRead","fetchMediaLibFiles","count","countData","addFilesToUpload","handleClearFilesToUploadAndDownload","handleSetFileToEditError","errorMessage","handleUploadFiles","requests","fileInfo","originalName","formData","FormData","headers","infos","append","JSON","stringify","pluginId","body","signal","uploadedFile","filesToSelect","fileType","mime","includes","addToSelectedFiles","status","statusText","moveAsset","propTypes","PropTypes","shape","canCopyLink","bool","canCreate","canDownload","canMain","canSettings","canUpdate","arrayOf","string","node","isRequired","object","func","oneOfType","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { request, generateSearchFromFilters, useGlobalContext } from 'strapi-helper-plugin';\nimport { clone, get, isEmpty, set } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport axios from 'axios';\nimport pluginId from '../../pluginId';\nimport {\n  getFilesToDownload,\n  getRequestUrl,\n  getYupError,\n  compactParams,\n  createNewFilesToUploadArray,\n  urlSchema,\n  getFileModelTimestamps,\n  formatFilters,\n} from '../../utils';\nimport InputModalStepperContext from '../../contexts/InputModal/InputModalDataManager';\n\nimport init from './init';\nimport reducer, { initialState } from './reducer';\n\n/* eslint-disable indent */\n\nconst InputModalStepperProvider = ({\n  allowedActions,\n  allowedTypes,\n  children,\n  initialFilesToUpload,\n  initialFileToEdit,\n  isOpen,\n  multiple,\n  noNavigation,\n  onClosed,\n  onInputMediaChange,\n  selectedFiles,\n  step,\n}) => {\n  const [formErrors, setFormErrors] = useState(null);\n\n  const { formatMessage } = useIntl();\n  const { emitEvent, plugins } = useGlobalContext();\n  const [, updated_at] = getFileModelTimestamps(plugins);\n  const [reducerState, dispatch] = useReducer(reducer, initialState, state =>\n    init({\n      ...state,\n      allowedTypes,\n      currentStep: step,\n      initialFileToEdit,\n      fileToEdit: initialFileToEdit,\n      initialSelectedFiles: Array.isArray(selectedFiles) ? selectedFiles : [selectedFiles],\n      selectedFiles: Array.isArray(selectedFiles) ? selectedFiles : [selectedFiles],\n      filesToUpload: initialFilesToUpload\n        ? createNewFilesToUploadArray(initialFilesToUpload).map((file, index) => ({\n            ...file,\n            originalIndex: index,\n          }))\n        : [],\n      params: {\n        ...state.params,\n        _sort: `${updated_at}:DESC`,\n      },\n    })\n  );\n  const { params, filesToDownload, filesToUpload, fileToEdit } = reducerState;\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchMediaLib();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, params]);\n\n  const downloadFiles = async () => {\n    const files = getFilesToDownload(filesToUpload);\n\n    // Emit event when the users download files from url\n    if (files.length > 0) {\n      emitEvent('didSelectFile', { source: 'url', location: 'content-manager' });\n    }\n\n    try {\n      await Promise.all(\n        files.map(file => {\n          const { source } = file;\n\n          return axios\n            .get(file.fileURL, {\n              responseType: 'blob',\n              cancelToken: source.token,\n              timeout: 60000,\n            })\n            .then(({ data }) => {\n              const createdFile = new File([data], file.fileURL, {\n                type: data.type,\n              });\n\n              dispatch({\n                type: 'FILE_DOWNLOADED',\n                blob: createdFile,\n                originalIndex: file.originalIndex,\n                fileTempId: file.tempId,\n              });\n            })\n            .catch(err => {\n              console.error('fetch file error', err);\n\n              dispatch({\n                type: 'SET_FILE_TO_DOWNLOAD_ERROR',\n                originalIndex: file.originalIndex,\n                fileTempId: file.tempId,\n              });\n            });\n        })\n      );\n    } catch (err) {\n      // Silent\n    }\n  };\n\n  const handleRemoveFileToUpload = fileIndex => {\n    dispatch({\n      type: 'REMOVE_FILE_TO_UPLOAD',\n      fileIndex,\n    });\n  };\n\n  const handleModalTabChange = to => {\n    dispatch({\n      type: 'ON_CHANGE_MODAL_TAB',\n      to,\n    });\n  };\n\n  const handleClickNextButton = async () => {\n    try {\n      await urlSchema.validate(\n        { filesToDownload: filesToDownload.filter(url => !isEmpty(url)) },\n        { abortEarly: false }\n      );\n\n      setFormErrors(null);\n      // Navigate to next step\n      dispatch({\n        type: 'ADD_URLS_TO_FILES_TO_UPLOAD',\n        nextStep: 'upload',\n      });\n    } catch (err) {\n      const formattedErrors = getYupError(err);\n\n      setFormErrors(formattedErrors.filesToDownload);\n    }\n  };\n\n  const handleFileToEditChange = ({ target: { name, value } }) => {\n    let val = value;\n    let type = 'ON_CHANGE';\n\n    if (name === 'url') {\n      setFormErrors(null);\n\n      val = value.split('\\n');\n      type = 'ON_CHANGE_URLS_TO_DOWNLOAD';\n    }\n\n    dispatch({\n      type,\n      keys: name,\n      value: val,\n    });\n  };\n\n  const handleMoveAsset = (dragIndex, hoverIndex) => {\n    dispatch({\n      type: 'MOVE_ASSET',\n      dragIndex,\n      hoverIndex,\n    });\n  };\n\n  const toggleModalWarning = () => {\n    dispatch({\n      type: 'TOGGLE_MODAL_WARNING',\n    });\n  };\n\n  const submitEditNewFile = () => {\n    dispatch({\n      type: 'ON_SUBMIT_EDIT_NEW_FILE',\n    });\n  };\n\n  const submitEditExistingFile = () => {\n    dispatch({\n      type: 'ON_SUBMIT_EDIT_EXISTING_FILE',\n    });\n  };\n\n  const handleEditExistingFile = file => {\n    dispatch({\n      type: 'EDIT_EXISTING_FILE',\n      file,\n    });\n  };\n\n  const handleResetFileToEdit = () => {\n    dispatch({\n      type: 'RESET_FILE_TO_EDIT',\n    });\n  };\n\n  const removeFilter = index => {\n    dispatch({\n      type: 'REMOVE_FILTER',\n      filterToRemove: index,\n    });\n  };\n\n  const handleClose = () => {\n    setFormErrors(null);\n\n    dispatch({\n      type: 'RESET_PROPS',\n      defaultSort: `${updated_at}:DESC`,\n    });\n    onClosed();\n  };\n\n  const handleFileSelection = ({ target: { name } }) => {\n    dispatch({\n      type: 'ON_FILE_SELECTION',\n      id: name,\n    });\n  };\n\n  const handleAllFilesSelection = () => {\n    dispatch({\n      type: 'TOGGLE_SELECT_ALL',\n    });\n  };\n\n  const setParam = param => {\n    dispatch({\n      type: 'SET_PARAM',\n      param,\n    });\n  };\n\n  const goTo = to => {\n    dispatch({\n      type: 'GO_TO',\n      to,\n    });\n  };\n\n  const handleGoToEditNewFile = fileIndex => {\n    dispatch({\n      type: 'SET_NEW_FILE_TO_EDIT',\n      fileIndex,\n    });\n\n    goTo('edit-new');\n  };\n\n  const handleGoToEditFile = fileId => {\n    dispatch({\n      type: 'SET_FILE_TO_EDIT',\n      fileId,\n    });\n\n    goTo('edit');\n  };\n\n  const handleCleanFilesError = () => {\n    dispatch({\n      type: 'CLEAN_FILES_ERROR',\n    });\n  };\n\n  const handleSetCropResult = blob => {\n    // Emit event : the user cropped a file that is not uploaded\n    emitEvent('didCropFile', { duplicatedFile: null, location: 'content-manager' });\n\n    dispatch({\n      type: 'SET_CROP_RESULT',\n      blob,\n    });\n  };\n\n  const handleFormDisabled = isFormDisabled => {\n    dispatch({\n      type: 'SET_FORM_DISABLED',\n      isFormDisabled,\n    });\n  };\n\n  const handleAbortUpload = () => {\n    const { abortController } = fileToEdit;\n\n    abortController.abort();\n\n    dispatch({\n      type: 'ON_ABORT_UPLOAD',\n    });\n  };\n\n  const handleCancelFileToUpload = fileIndex => {\n    const fileToCancel = get(filesToUpload, fileIndex, {});\n\n    const { source } = fileToCancel;\n\n    // Cancel upload\n    if (source) {\n      // Cancel dowload file upload with axios\n      source.cancel('Operation canceled by the user.');\n    } else {\n      // Cancel uplodad file with fetch\n      fileToCancel.abortController.abort();\n    }\n\n    handleRemoveFileToUpload(fileIndex);\n  };\n\n  const getFilters = (filtersToOmit = []) => {\n    const compactedParams = compactParams(params);\n    const searchParams = generateSearchFromFilters(compactedParams, filtersToOmit);\n\n    return formatFilters(searchParams);\n  };\n\n  const fetchMediaLibFilesCount = async () => {\n    const requestURL = getRequestUrl('files/count');\n    const paramsToSend = getFilters(['_limit', '_sort', '_start']);\n\n    try {\n      return await request(`${requestURL}?${paramsToSend}`, {\n        method: 'GET',\n      });\n    } catch (err) {\n      console.error(err);\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n\n      return 0;\n    }\n  };\n\n  const fetchMediaLib = async () => {\n    if (allowedActions.canRead) {\n      const [files, count] = await Promise.all([fetchMediaLibFiles(), fetchMediaLibFilesCount()]);\n      dispatch({\n        type: 'GET_DATA_SUCCEEDED',\n        files,\n        countData: count,\n      });\n    }\n  };\n\n  const fetchMediaLibFiles = async () => {\n    const requestURL = getRequestUrl('files');\n    const paramsToSend = getFilters();\n\n    try {\n      return await request(`${requestURL}?${paramsToSend}`, {\n        method: 'GET',\n      });\n    } catch (err) {\n      console.error(err);\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n\n      return [];\n    }\n  };\n\n  const addFilesToUpload = ({ target: { value } }) => {\n    emitEvent('didSelectFile', { source: 'computer', location: 'content-manager' });\n\n    dispatch({\n      type: 'ADD_FILES_TO_UPLOAD',\n      filesToUpload: value,\n    });\n  };\n\n  const handleClearFilesToUploadAndDownload = () => {\n    dispatch({\n      type: 'CLEAR_FILES_TO_UPLOAD_AND_DOWNLOAD',\n    });\n  };\n\n  const handleSetFileToEditError = errorMessage => {\n    dispatch({\n      type: 'SET_FILE_TO_EDIT_ERROR',\n      errorMessage,\n    });\n  };\n\n  const handleUploadFiles = async () => {\n    dispatch({\n      type: 'SET_FILES_UPLOADING_STATE',\n    });\n\n    const requests = filesToUpload.map(\n      async ({ file, fileInfo, originalIndex, originalName, abortController }) => {\n        const formData = new FormData();\n        const headers = {};\n        const infos = clone(fileInfo);\n\n        if (originalName === infos.name) {\n          set(infos, 'name', null);\n        }\n\n        formData.append('files', file);\n        formData.append('fileInfo', JSON.stringify(infos));\n\n        try {\n          const uploadedFile = await request(\n            `/${pluginId}`,\n            {\n              method: 'POST',\n              headers,\n              body: formData,\n              signal: abortController.signal,\n            },\n            false,\n            false\n          );\n\n          const filesToSelect = uploadedFile.filter(file => {\n            const fileType = file.mime.split('/')[0];\n\n            if (allowedTypes.includes('file') && !['video', 'image'].includes(fileType)) {\n              return true;\n            }\n\n            return allowedTypes.length === 0 || allowedTypes.includes(fileType);\n          });\n\n          dispatch({\n            type: 'REMOVE_FILE_TO_UPLOAD',\n            fileIndex: originalIndex,\n            addToSelectedFiles: filesToSelect,\n            multiple,\n          });\n        } catch (err) {\n          const status = get(err, 'response.status', get(err, 'status', null));\n          const statusText = get(err, 'response.statusText', get(err, 'statusText', null));\n          let errorMessage = get(\n            err,\n            ['response', 'payload', 'message', '0', 'messages', '0', 'message'],\n            get(err, ['response', 'payload', 'message'], statusText)\n          );\n\n          // TODO fix errors globally when the back-end sends readable one\n          if (status === 413) {\n            errorMessage = formatMessage({ id: 'app.utils.errors.file-too-big.message' });\n          }\n\n          if (status) {\n            dispatch({\n              type: 'SET_FILE_ERROR',\n              fileIndex: originalIndex,\n              errorMessage,\n            });\n          }\n        }\n      }\n    );\n\n    await Promise.all(requests);\n  };\n\n  return (\n    <InputModalStepperContext.Provider\n      value={{\n        ...reducerState,\n        allowedActions,\n        addFilesToUpload,\n        downloadFiles,\n        fetchMediaLib,\n        formErrors,\n        goTo,\n        handleAbortUpload,\n        handleAllFilesSelection,\n        handleCancelFileToUpload,\n        handleClickNextButton,\n        handleCleanFilesError,\n        handleClearFilesToUploadAndDownload,\n        handleClose,\n        handleEditExistingFile,\n        handleFileSelection,\n        handleFileToEditChange,\n        handleFormDisabled,\n        handleGoToEditFile,\n        handleGoToEditNewFile,\n        handleModalTabChange,\n        handleRemoveFileToUpload,\n        handleResetFileToEdit,\n        handleSetCropResult,\n        handleUploadFiles,\n        handleSetFileToEditError,\n        moveAsset: handleMoveAsset,\n        multiple,\n        noNavigation,\n        onInputMediaChange,\n        removeFilter,\n        setParam,\n        submitEditNewFile,\n        submitEditExistingFile,\n        toggleModalWarning,\n      }}\n    >\n      {children}\n    </InputModalStepperContext.Provider>\n  );\n};\n\nInputModalStepperProvider.propTypes = {\n  allowedActions: PropTypes.shape({\n    canCopyLink: PropTypes.bool,\n    canCreate: PropTypes.bool,\n    canDownload: PropTypes.bool,\n    canMain: PropTypes.bool,\n    canRead: PropTypes.bool,\n    canSettings: PropTypes.bool,\n    canUpdate: PropTypes.bool,\n  }),\n  allowedTypes: PropTypes.arrayOf(PropTypes.string),\n  children: PropTypes.node.isRequired,\n  initialFilesToUpload: PropTypes.object,\n  initialFileToEdit: PropTypes.object,\n  isOpen: PropTypes.bool,\n  multiple: PropTypes.bool.isRequired,\n  noNavigation: PropTypes.bool,\n  onClosed: PropTypes.func.isRequired,\n  onInputMediaChange: PropTypes.func,\n  selectedFiles: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  step: PropTypes.string.isRequired,\n};\n\nInputModalStepperProvider.defaultProps = {\n  allowedActions: {\n    canCopyLink: true,\n    canCreate: true,\n    canDownload: true,\n    canMain: true,\n    canRead: true,\n    canSettings: true,\n    canUpdate: true,\n  },\n  initialFileToEdit: null,\n  initialFilesToUpload: null,\n  isOpen: false,\n  noNavigation: false,\n  onInputMediaChange: () => {},\n  selectedFiles: null,\n  allowedTypes: [],\n};\n\nexport default InputModalStepperProvider;\n"]},"metadata":{},"sourceType":"script"}