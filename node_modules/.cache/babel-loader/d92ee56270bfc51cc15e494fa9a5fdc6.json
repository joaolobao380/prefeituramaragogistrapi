{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar useFetch = function useFetch() {\n  var isMounted = (0, _react.useRef)(true);\n\n  var _useState = (0, _react.useState)({\n    error: false,\n    isLoading: true,\n    posts: [{\n      link: '1'\n    }, {\n      link: '2'\n    }]\n  }),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    var CancelToken = _axios[\"default\"].CancelToken;\n    var source = CancelToken.source();\n\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n        var _yield$axios$get, data, posts;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _axios[\"default\"].get('https://strapi.io/api/blog-posts?_limit=2&_sort=publishedAt:desc', {\n                  cancelToken: source.token\n                });\n\n              case 3:\n                _yield$axios$get = _context.sent;\n                data = _yield$axios$get.data;\n                posts = data.reduce(function (acc, curr) {\n                  acc.push({\n                    title: curr.seo.metaTitle,\n                    link: curr.slug,\n                    content: curr.seo.metaDescription\n                  });\n                  return acc;\n                }, []);\n                setState({\n                  isLoading: false,\n                  posts: posts,\n                  error: false\n                });\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n\n                if (isMounted.current) {\n                  setState({\n                    isLoading: false,\n                    error: true,\n                    posts: []\n                  });\n                }\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n    return function () {\n      isMounted.current = false;\n      source.cancel('abort');\n    };\n  }, []);\n  return state;\n};\n\nvar _default = useFetch;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/containers/HomePage/hooks.js"],"names":["useFetch","isMounted","error","isLoading","posts","link","state","setState","CancelToken","axios","source","fetchData","get","cancelToken","token","data","reduce","acc","curr","push","title","seo","metaTitle","slug","content","metaDescription","current","cancel"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAMC,SAAS,GAAG,mBAAO,IAAP,CAAlB;;AACA,kBAA0B,qBAAS;AACjCC,IAAAA,KAAK,EAAE,KAD0B;AAEjCC,IAAAA,SAAS,EAAE,IAFsB;AAGjCC,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,EAAgB;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAAhB;AAH0B,GAAT,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAMA,wBAAU,YAAM;AACd,QAAMC,WAAW,GAAGC,kBAAMD,WAA1B;AACA,QAAME,MAAM,GAAGF,WAAW,CAACE,MAAZ,EAAf;;AAEA,QAAMC,SAAS;AAAA,+FAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAESF,kBAAMG,GAAN,CACrB,kEADqB,EAErB;AACEC,kBAAAA,WAAW,EAAEH,MAAM,CAACI;AADtB,iBAFqB,CAFT;;AAAA;AAAA;AAENC,gBAAAA,IAFM,oBAENA,IAFM;AASRX,gBAAAA,KATQ,GASAW,IAAI,CAACC,MAAL,CAAY,UAACC,GAAD,EAAMC,IAAN,EAAe;AACvCD,kBAAAA,GAAG,CAACE,IAAJ,CAAS;AACPC,oBAAAA,KAAK,EAAEF,IAAI,CAACG,GAAL,CAASC,SADT;AAEPjB,oBAAAA,IAAI,EAAEa,IAAI,CAACK,IAFJ;AAGPC,oBAAAA,OAAO,EAAEN,IAAI,CAACG,GAAL,CAASI;AAHX,mBAAT;AAMA,yBAAOR,GAAP;AACD,iBARa,EAQX,EARW,CATA;AAmBdV,gBAAAA,QAAQ,CAAC;AAAEJ,kBAAAA,SAAS,EAAE,KAAb;AAAoBC,kBAAAA,KAAK,EAALA,KAApB;AAA2BF,kBAAAA,KAAK,EAAE;AAAlC,iBAAD,CAAR;AAnBc;AAAA;;AAAA;AAAA;AAAA;;AAqBd,oBAAID,SAAS,CAACyB,OAAd,EAAuB;AACrBnB,kBAAAA,QAAQ,CAAC;AAAEJ,oBAAAA,SAAS,EAAE,KAAb;AAAoBD,oBAAAA,KAAK,EAAE,IAA3B;AAAiCE,oBAAAA,KAAK,EAAE;AAAxC,mBAAD,CAAR;AACD;;AAvBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATO,SAAS;AAAA;AAAA;AAAA,OAAf;;AA2BAA,IAAAA,SAAS;AAET,WAAO,YAAM;AACXV,MAAAA,SAAS,CAACyB,OAAV,GAAoB,KAApB;AACAhB,MAAAA,MAAM,CAACiB,MAAP,CAAc,OAAd;AACD,KAHD;AAID,GArCD,EAqCG,EArCH;AAuCA,SAAOrB,KAAP;AACD,CAhDD;;eAkDeN,Q","sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\n\nconst useFetch = () => {\n  const isMounted = useRef(true);\n  const [state, setState] = useState({\n    error: false,\n    isLoading: true,\n    posts: [{ link: '1' }, { link: '2' }],\n  });\n\n  useEffect(() => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(\n          'https://strapi.io/api/blog-posts?_limit=2&_sort=publishedAt:desc',\n          {\n            cancelToken: source.token,\n          }\n        );\n\n        const posts = data.reduce((acc, curr) => {\n          acc.push({\n            title: curr.seo.metaTitle,\n            link: curr.slug,\n            content: curr.seo.metaDescription,\n          });\n\n          return acc;\n        }, []);\n\n        setState({ isLoading: false, posts, error: false });\n      } catch (err) {\n        if (isMounted.current) {\n          setState({ isLoading: false, error: true, posts: [] });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      isMounted.current = false;\n      source.cancel('abort');\n    };\n  }, []);\n\n  return state;\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"script"}