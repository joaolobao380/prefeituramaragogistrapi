{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _constants = _interopRequireDefault(require(\"ee_else_ce/components/Roles/GlobalActions/utils/constants\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _CheckboxWithCondition = _interopRequireDefault(require(\"../CheckboxWithCondition\"));\n\nvar _utils = require(\"./utils\");\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar GlobalActions = function GlobalActions(_ref) {\n  var actions = _ref.actions,\n      isFormDisabled = _ref.isFormDisabled,\n      kind = _ref.kind;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _usePermissionsDataMa = (0, _hooks.usePermissionsDataManager)(),\n      modifiedData = _usePermissionsDataMa.modifiedData,\n      onChangeCollectionTypeGlobalActionCheckbox = _usePermissionsDataMa.onChangeCollectionTypeGlobalActionCheckbox;\n\n  var displayedActions = (0, _react.useMemo)(function () {\n    return (0, _utils.findDisplayedActions)(actions);\n  }, [actions]);\n  var checkboxesState = (0, _react.useMemo)(function () {\n    return (0, _utils.getCheckboxesState)(displayedActions, modifiedData[kind]);\n  }, [modifiedData, displayedActions, kind]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], {\n    disabled: isFormDisabled\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, null, displayedActions.map(function (_ref2) {\n    var label = _ref2.label,\n        actionId = _ref2.actionId;\n    return /*#__PURE__*/_react[\"default\"].createElement(_CheckboxWithCondition[\"default\"], {\n      key: actionId,\n      disabled: isFormDisabled || _constants[\"default\"],\n      message: formatMessage({\n        id: \"Settings.roles.form.permissions.\".concat(label.toLowerCase()),\n        defaultMessage: label\n      }),\n      onChange: function onChange(_ref3) {\n        var value = _ref3.target.value;\n        onChangeCollectionTypeGlobalActionCheckbox(kind, actionId, value);\n      },\n      name: actionId,\n      value: (0, _lodash.get)(checkboxesState, [actionId, 'hasAllActionsSelected'], false),\n      someChecked: (0, _lodash.get)(checkboxesState, [actionId, 'hasSomeActionsSelected'], false)\n    });\n  })));\n};\n\nGlobalActions.defaultProps = {\n  actions: []\n};\nGlobalActions.propTypes = {\n  actions: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape({\n    label: _propTypes[\"default\"].string.isRequired,\n    actionId: _propTypes[\"default\"].string.isRequired,\n    subjects: _propTypes[\"default\"].array.isRequired\n  })),\n  isFormDisabled: _propTypes[\"default\"].bool.isRequired,\n  kind: _propTypes[\"default\"].string.isRequired\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(GlobalActions);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/components/Roles/GlobalActions/index.js"],"names":["GlobalActions","actions","isFormDisabled","kind","formatMessage","modifiedData","onChangeCollectionTypeGlobalActionCheckbox","displayedActions","checkboxesState","map","label","actionId","IS_DISABLED","id","toLowerCase","defaultMessage","value","target","defaultProps","propTypes","PropTypes","arrayOf","shape","string","isRequired","subjects","array","bool"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAAuC;AAAA,MAApCC,OAAoC,QAApCA,OAAoC;AAAA,MAA3BC,cAA2B,QAA3BA,cAA2B;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC3D,iBAA0B,yBAA1B;AAAA,MAAQC,aAAR,YAAQA,aAAR;;AACA,8BAAqE,uCAArE;AAAA,MAAQC,YAAR,yBAAQA,YAAR;AAAA,MAAsBC,0CAAtB,yBAAsBA,0CAAtB;;AAEA,MAAMC,gBAAgB,GAAG,oBAAQ,YAAM;AACrC,WAAO,iCAAqBN,OAArB,CAAP;AACD,GAFwB,EAEtB,CAACA,OAAD,CAFsB,CAAzB;AAIA,MAAMO,eAAe,GAAG,oBAAQ,YAAM;AACpC,WAAO,+BAAmBD,gBAAnB,EAAqCF,YAAY,CAACF,IAAD,CAAjD,CAAP;AACD,GAFuB,EAErB,CAACE,YAAD,EAAeE,gBAAf,EAAiCJ,IAAjC,CAFqB,CAAxB;AAIA,sBACE,gCAAC,mBAAD;AAAS,IAAA,QAAQ,EAAED;AAAnB,kBACE,gCAAC,UAAD,QACGK,gBAAgB,CAACE,GAAjB,CAAqB,iBAAyB;AAAA,QAAtBC,KAAsB,SAAtBA,KAAsB;AAAA,QAAfC,QAAe,SAAfA,QAAe;AAC7C,wBACE,gCAAC,iCAAD;AACE,MAAA,GAAG,EAAEA,QADP;AAEE,MAAA,QAAQ,EAAET,cAAc,IAAIU,qBAF9B;AAGE,MAAA,OAAO,EAAER,aAAa,CAAC;AACrBS,QAAAA,EAAE,4CAAqCH,KAAK,CAACI,WAAN,EAArC,CADmB;AAErBC,QAAAA,cAAc,EAAEL;AAFK,OAAD,CAHxB;AAOE,MAAA,QAAQ,EAAE,yBAA2B;AAAA,YAAdM,KAAc,SAAxBC,MAAwB,CAAdD,KAAc;AACnCV,QAAAA,0CAA0C,CAACH,IAAD,EAAOQ,QAAP,EAAiBK,KAAjB,CAA1C;AACD,OATH;AAUE,MAAA,IAAI,EAAEL,QAVR;AAWE,MAAA,KAAK,EAAE,iBAAIH,eAAJ,EAAqB,CAACG,QAAD,EAAW,uBAAX,CAArB,EAA0D,KAA1D,CAXT;AAYE,MAAA,WAAW,EAAE,iBAAIH,eAAJ,EAAqB,CAACG,QAAD,EAAW,wBAAX,CAArB,EAA2D,KAA3D;AAZf,MADF;AAgBD,GAjBA,CADH,CADF,CADF;AAwBD,CApCD;;AAsCAX,aAAa,CAACkB,YAAd,GAA6B;AAC3BjB,EAAAA,OAAO,EAAE;AADkB,CAA7B;AAIAD,aAAa,CAACmB,SAAd,GAA0B;AACxBlB,EAAAA,OAAO,EAAEmB,sBAAUC,OAAV,CACPD,sBAAUE,KAAV,CAAgB;AACdZ,IAAAA,KAAK,EAAEU,sBAAUG,MAAV,CAAiBC,UADV;AAEdb,IAAAA,QAAQ,EAAES,sBAAUG,MAAV,CAAiBC,UAFb;AAGdC,IAAAA,QAAQ,EAAEL,sBAAUM,KAAV,CAAgBF;AAHZ,GAAhB,CADO,CADe;AAQxBtB,EAAAA,cAAc,EAAEkB,sBAAUO,IAAV,CAAeH,UARP;AASxBrB,EAAAA,IAAI,EAAEiB,sBAAUG,MAAV,CAAiBC;AATC,CAA1B;;4BAYe,iBAAKxB,aAAL,C","sourcesContent":["import React, { memo, useMemo } from 'react';\nimport { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Flex } from '@buffetjs/core';\nimport { useIntl } from 'react-intl';\nimport IS_DISABLED from 'ee_else_ce/components/Roles/GlobalActions/utils/constants';\nimport { usePermissionsDataManager } from '../../../hooks';\nimport CheckboxWithCondition from '../CheckboxWithCondition';\nimport { findDisplayedActions, getCheckboxesState } from './utils';\nimport Wrapper from './Wrapper';\n\nconst GlobalActions = ({ actions, isFormDisabled, kind }) => {\n  const { formatMessage } = useIntl();\n  const { modifiedData, onChangeCollectionTypeGlobalActionCheckbox } = usePermissionsDataManager();\n\n  const displayedActions = useMemo(() => {\n    return findDisplayedActions(actions);\n  }, [actions]);\n\n  const checkboxesState = useMemo(() => {\n    return getCheckboxesState(displayedActions, modifiedData[kind]);\n  }, [modifiedData, displayedActions, kind]);\n\n  return (\n    <Wrapper disabled={isFormDisabled}>\n      <Flex>\n        {displayedActions.map(({ label, actionId }) => {\n          return (\n            <CheckboxWithCondition\n              key={actionId}\n              disabled={isFormDisabled || IS_DISABLED}\n              message={formatMessage({\n                id: `Settings.roles.form.permissions.${label.toLowerCase()}`,\n                defaultMessage: label,\n              })}\n              onChange={({ target: { value } }) => {\n                onChangeCollectionTypeGlobalActionCheckbox(kind, actionId, value);\n              }}\n              name={actionId}\n              value={get(checkboxesState, [actionId, 'hasAllActionsSelected'], false)}\n              someChecked={get(checkboxesState, [actionId, 'hasSomeActionsSelected'], false)}\n            />\n          );\n        })}\n      </Flex>\n    </Wrapper>\n  );\n};\n\nGlobalActions.defaultProps = {\n  actions: [],\n};\n\nGlobalActions.propTypes = {\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      actionId: PropTypes.string.isRequired,\n      subjects: PropTypes.array.isRequired,\n    })\n  ),\n  isFormDisabled: PropTypes.bool.isRequired,\n  kind: PropTypes.string.isRequired,\n};\n\nexport default memo(GlobalActions);\n"]},"metadata":{},"sourceType":"script"}