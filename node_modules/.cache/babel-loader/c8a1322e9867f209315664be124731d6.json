{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _icons = require(\"@buffetjs/icons\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _useLocales2 = _interopRequireDefault(require(\"../../hooks/useLocales\"));\n\nvar _LocaleRow = _interopRequireDefault(require(\"../LocaleRow\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _ModalEdit = _interopRequireDefault(require(\"../ModalEdit\"));\n\nvar _ModalDelete = _interopRequireDefault(require(\"../ModalDelete\"));\n\nvar _ModalCreate = _interopRequireDefault(require(\"../ModalCreate\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar LocaleList = function LocaleList(_ref) {\n  var canUpdateLocale = _ref.canUpdateLocale,\n      canDeleteLocale = _ref.canDeleteLocale,\n      onToggleCreateModal = _ref.onToggleCreateModal,\n      isCreating = _ref.isCreating;\n\n  var _useState = (0, _react.useState)(),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      localeToDelete = _useState2[0],\n      setLocaleToDelete = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      localeToEdit = _useState4[0],\n      setLocaleToEdit = _useState4[1];\n\n  var _useLocales = (0, _useLocales2[\"default\"])(),\n      locales = _useLocales.locales,\n      isLoading = _useLocales.isLoading;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage; // Delete actions\n\n\n  var closeModalToDelete = function closeModalToDelete() {\n    return setLocaleToDelete(undefined);\n  };\n\n  var handleDeleteLocale = canDeleteLocale ? setLocaleToDelete : undefined; // Edit actions\n\n  var closeModalToEdit = function closeModalToEdit() {\n    setLocaleToEdit(undefined);\n  };\n\n  var handleEditLocale = canUpdateLocale ? setLocaleToEdit : undefined;\n\n  if (isLoading || locales && locales.length > 0) {\n    var listTitle = isLoading ? null : formatMessage({\n      id: (0, _utils.getTrad)(\"Settings.locales.list.title\".concat(locales.length > 1 ? '.plural' : '.singular'))\n    }, {\n      number: locales.length\n    });\n    return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_custom.List, {\n      radius: \"2px\",\n      title: listTitle,\n      items: locales,\n      isLoading: isLoading,\n      customRowComponent: function customRowComponent(locale) {\n        return /*#__PURE__*/_react[\"default\"].createElement(_LocaleRow[\"default\"], {\n          locale: locale,\n          onDelete: handleDeleteLocale,\n          onEdit: handleEditLocale\n        });\n      }\n    }), /*#__PURE__*/_react[\"default\"].createElement(_ModalCreate[\"default\"], {\n      isOpened: isCreating,\n      onClose: onToggleCreateModal,\n      alreadyUsedLocales: locales\n    }), /*#__PURE__*/_react[\"default\"].createElement(_ModalDelete[\"default\"], {\n      localeToDelete: localeToDelete,\n      onClose: closeModalToDelete\n    }), /*#__PURE__*/_react[\"default\"].createElement(_ModalEdit[\"default\"], {\n      localeToEdit: localeToEdit,\n      onClose: closeModalToEdit,\n      locales: locales\n    }));\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.EmptyState, {\n    title: formatMessage({\n      id: (0, _utils.getTrad)('Settings.list.empty.title')\n    }),\n    description: formatMessage({\n      id: (0, _utils.getTrad)('Settings.list.empty.description')\n    })\n  }), onToggleCreateModal && /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.ListButton, null, /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    label: formatMessage({\n      id: (0, _utils.getTrad)('Settings.list.actions.add')\n    }),\n    onClick: onToggleCreateModal,\n    color: \"primary\",\n    type: \"button\",\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.Plus, {\n      fill: \"#007eff\",\n      width: \"11px\",\n      height: \"11px\"\n    })\n  })), /*#__PURE__*/_react[\"default\"].createElement(_ModalCreate[\"default\"], {\n    isOpened: isCreating,\n    onClose: onToggleCreateModal\n  }));\n};\n\nLocaleList.defaultProps = {\n  onToggleCreateModal: undefined\n};\nLocaleList.propTypes = {\n  canUpdateLocale: _propTypes[\"default\"].bool.isRequired,\n  canDeleteLocale: _propTypes[\"default\"].bool.isRequired,\n  onToggleCreateModal: _propTypes[\"default\"].func,\n  isCreating: _propTypes[\"default\"].bool.isRequired\n};\nvar _default = LocaleList;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/components/LocaleList/index.js"],"names":["LocaleList","canUpdateLocale","canDeleteLocale","onToggleCreateModal","isCreating","localeToDelete","setLocaleToDelete","localeToEdit","setLocaleToEdit","locales","isLoading","formatMessage","closeModalToDelete","undefined","handleDeleteLocale","closeModalToEdit","handleEditLocale","length","listTitle","id","number","locale","defaultProps","propTypes","PropTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { EmptyState, ListButton } from 'strapi-helper-plugin';\nimport { List } from '@buffetjs/custom';\nimport { Button } from '@buffetjs/core';\nimport { Plus } from '@buffetjs/icons';\nimport PropTypes from 'prop-types';\nimport useLocales from '../../hooks/useLocales';\nimport LocaleRow from '../LocaleRow';\nimport { getTrad } from '../../utils';\nimport ModalEdit from '../ModalEdit';\nimport ModalDelete from '../ModalDelete';\nimport ModalCreate from '../ModalCreate';\n\nconst LocaleList = ({ canUpdateLocale, canDeleteLocale, onToggleCreateModal, isCreating }) => {\n  const [localeToDelete, setLocaleToDelete] = useState();\n  const [localeToEdit, setLocaleToEdit] = useState();\n  const { locales, isLoading } = useLocales();\n  const { formatMessage } = useIntl();\n\n  // Delete actions\n  const closeModalToDelete = () => setLocaleToDelete(undefined);\n  const handleDeleteLocale = canDeleteLocale ? setLocaleToDelete : undefined;\n\n  // Edit actions\n  const closeModalToEdit = () => {\n    setLocaleToEdit(undefined);\n  };\n  const handleEditLocale = canUpdateLocale ? setLocaleToEdit : undefined;\n\n  if (isLoading || (locales && locales.length > 0)) {\n    const listTitle = isLoading\n      ? null\n      : formatMessage(\n          {\n            id: getTrad(\n              `Settings.locales.list.title${locales.length > 1 ? '.plural' : '.singular'}`\n            ),\n          },\n          { number: locales.length }\n        );\n\n    return (\n      <>\n        <List\n          radius=\"2px\"\n          title={listTitle}\n          items={locales}\n          isLoading={isLoading}\n          customRowComponent={locale => (\n            <LocaleRow locale={locale} onDelete={handleDeleteLocale} onEdit={handleEditLocale} />\n          )}\n        />\n\n        <ModalCreate\n          isOpened={isCreating}\n          onClose={onToggleCreateModal}\n          alreadyUsedLocales={locales}\n        />\n        <ModalDelete localeToDelete={localeToDelete} onClose={closeModalToDelete} />\n        <ModalEdit localeToEdit={localeToEdit} onClose={closeModalToEdit} locales={locales} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <EmptyState\n        title={formatMessage({ id: getTrad('Settings.list.empty.title') })}\n        description={formatMessage({ id: getTrad('Settings.list.empty.description') })}\n      />\n\n      {onToggleCreateModal && (\n        <ListButton>\n          <Button\n            label={formatMessage({ id: getTrad('Settings.list.actions.add') })}\n            onClick={onToggleCreateModal}\n            color=\"primary\"\n            type=\"button\"\n            icon={<Plus fill=\"#007eff\" width=\"11px\" height=\"11px\" />}\n          />\n        </ListButton>\n      )}\n\n      <ModalCreate isOpened={isCreating} onClose={onToggleCreateModal} />\n    </>\n  );\n};\n\nLocaleList.defaultProps = {\n  onToggleCreateModal: undefined,\n};\n\nLocaleList.propTypes = {\n  canUpdateLocale: PropTypes.bool.isRequired,\n  canDeleteLocale: PropTypes.bool.isRequired,\n  onToggleCreateModal: PropTypes.func,\n  isCreating: PropTypes.bool.isRequired,\n};\n\nexport default LocaleList;\n"]},"metadata":{},"sourceType":"script"}