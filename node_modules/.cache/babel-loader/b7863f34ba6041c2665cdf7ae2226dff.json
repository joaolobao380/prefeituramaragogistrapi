{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar yup = _interopRequireWildcard(require(\"yup\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nyup.addMethod(yup.mixed, 'defined', function () {\n  return this.test('defined', _strapiHelperPlugin.translatedErrors.required, function (value) {\n    return value !== undefined;\n  });\n});\nyup.addMethod(yup.array, 'notEmptyMin', function (min) {\n  return this.test('notEmptyMin', _strapiHelperPlugin.translatedErrors.min, function (value) {\n    if ((0, _lodash.isEmpty)(value)) {\n      return true;\n    }\n\n    return value.length >= min;\n  });\n});\nyup.addMethod(yup.string, 'isInferior', function (message, max) {\n  return this.test('isInferior', message, function (value) {\n    if (!value) {\n      return true;\n    }\n\n    if (Number.isNaN((0, _lodash.toNumber)(value))) {\n      return true;\n    }\n\n    return (0, _lodash.toNumber)(max) >= (0, _lodash.toNumber)(value);\n  });\n});\nyup.addMethod(yup.string, 'isSuperior', function (message, min) {\n  return this.test('isSuperior', message, function (value) {\n    if (!value) {\n      return true;\n    }\n\n    if (Number.isNaN((0, _lodash.toNumber)(value))) {\n      return true;\n    }\n\n    return (0, _lodash.toNumber)(value) >= (0, _lodash.toNumber)(min);\n  });\n});\n\nvar getAttributes = function getAttributes(data) {\n  return (0, _lodash.get)(data, ['attributes'], {});\n};\n\nvar createYupSchema = function createYupSchema(model, _ref) {\n  var components = _ref.components;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    isCreatingEntry: true,\n    isDraft: true,\n    isFromComponent: false\n  };\n  var attributes = getAttributes(model);\n  return yup.object().shape(Object.keys(attributes).reduce(function (acc, current) {\n    var attribute = attributes[current];\n\n    if (attribute.type !== 'relation' && attribute.type !== 'component' && attribute.type !== 'dynamiczone') {\n      var formatted = createYupSchemaAttribute(attribute.type, attribute, options);\n      acc[current] = formatted;\n    }\n\n    if (attribute.type === 'relation') {\n      acc[current] = ['oneWay', 'oneToOne', 'manyToOne', 'oneToManyMorph', 'oneToOneMorph'].includes(attribute.relationType) ? yup.object().nullable() : yup.array().nullable();\n    }\n\n    if (attribute.type === 'component') {\n      var componentFieldSchema = createYupSchema(components[attribute.component], {\n        components: components\n      }, _objectSpread(_objectSpread({}, options), {}, {\n        isFromComponent: true\n      }));\n\n      if (attribute.repeatable === true) {\n        var min = attribute.min,\n            max = attribute.max,\n            required = attribute.required;\n\n        var _componentSchema = yup.lazy(function (value) {\n          var baseSchema = yup.array().of(componentFieldSchema);\n\n          if (min && !options.isDraft) {\n            if (required) {\n              baseSchema = baseSchema.min(min, _strapiHelperPlugin.translatedErrors.min);\n            } else if (required !== true && (0, _lodash.isEmpty)(value)) {\n              baseSchema = baseSchema.nullable();\n            } else {\n              baseSchema = baseSchema.min(min, _strapiHelperPlugin.translatedErrors.min);\n            }\n          }\n\n          if (max) {\n            baseSchema = baseSchema.max(max, _strapiHelperPlugin.translatedErrors.max);\n          }\n\n          return baseSchema;\n        });\n\n        acc[current] = _componentSchema;\n        return acc;\n      }\n\n      var componentSchema = yup.lazy(function (obj) {\n        if (obj !== undefined) {\n          return attribute.required === true && !options.isDraft ? componentFieldSchema.defined() : componentFieldSchema.nullable();\n        }\n\n        return attribute.required === true ? yup.object().defined() : yup.object().nullable();\n      });\n      acc[current] = componentSchema;\n      return acc;\n    }\n\n    if (attribute.type === 'dynamiczone') {\n      var dynamicZoneSchema = yup.array().of(yup.lazy(function (_ref2) {\n        var __component = _ref2.__component;\n        return createYupSchema(components[__component], {\n          components: components\n        }, _objectSpread(_objectSpread({}, options), {}, {\n          isFromComponent: true\n        }));\n      }));\n      var _max = attribute.max,\n          _min = attribute.min;\n\n      if (attribute.required && !options.isDraft) {\n        dynamicZoneSchema = dynamicZoneSchema.test('required', _strapiHelperPlugin.translatedErrors.required, function (value) {\n          if (options.isCreatingEntry) {\n            return value !== null || value !== undefined;\n          }\n\n          if (value === undefined) {\n            return true;\n          }\n\n          return value !== null;\n        });\n\n        if (_min) {\n          dynamicZoneSchema = dynamicZoneSchema.test('min', _strapiHelperPlugin.translatedErrors.min, function (value) {\n            if (options.isCreatingEntry) {\n              return value && value.length > 0;\n            }\n\n            if (value === undefined) {\n              return true;\n            }\n\n            return value !== null && value.length > 0;\n          }).test('required', _strapiHelperPlugin.translatedErrors.required, function (value) {\n            if (options.isCreatingEntry) {\n              return value !== null || value !== undefined;\n            }\n\n            if (value === undefined) {\n              return true;\n            }\n\n            return value !== null;\n          });\n        }\n      } else {\n        // eslint-disable-next-line no-lonely-if\n        if (_min) {\n          dynamicZoneSchema = dynamicZoneSchema.notEmptyMin(_min);\n        }\n      }\n\n      if (_max) {\n        dynamicZoneSchema = dynamicZoneSchema.max(_max, _strapiHelperPlugin.translatedErrors.max);\n      }\n\n      acc[current] = dynamicZoneSchema;\n    }\n\n    return acc;\n  }, {}));\n};\n\nvar createYupSchemaAttribute = function createYupSchemaAttribute(type, validations, options) {\n  var schema = yup.mixed();\n\n  if (['string', 'uid', 'text', 'richtext', 'email', 'password', 'enumeration'].includes(type)) {\n    schema = yup.string();\n  }\n\n  if (type === 'json') {\n    schema = yup.mixed(_strapiHelperPlugin.translatedErrors.json).test('isJSON', _strapiHelperPlugin.translatedErrors.json, function (value) {\n      if (value === undefined) {\n        return true;\n      }\n\n      if ((0, _lodash.isNumber)(value) || (0, _lodash.isNull)(value) || (0, _lodash.isObject)(value) || (0, _lodash.isArray)(value)) {\n        return true;\n      }\n\n      try {\n        JSON.parse(value);\n        return true;\n      } catch (err) {\n        return false;\n      }\n    }).nullable();\n  }\n\n  if (type === 'email') {\n    schema = schema.email(_strapiHelperPlugin.translatedErrors.email);\n  }\n\n  if (['number', 'integer', 'biginteger', 'float', 'decimal'].includes(type)) {\n    schema = yup.number().transform(function (cv) {\n      return (0, _lodash.isNaN)(cv) ? undefined : cv;\n    }).typeError();\n  }\n\n  if (['date', 'datetime'].includes(type)) {\n    schema = yup.date();\n  }\n\n  if (type === 'biginteger') {\n    schema = yup.string().matches(/^\\d*$/);\n  }\n\n  Object.keys(validations).forEach(function (validation) {\n    var validationValue = validations[validation];\n\n    if (!!validationValue || !(0, _lodash.isBoolean)(validationValue) && Number.isInteger(Math.floor(validationValue)) || validationValue === 0) {\n      switch (validation) {\n        case 'required':\n          {\n            if (!options.isDraft) {\n              if (type === 'password' && options.isCreatingEntry) {\n                schema = schema.required(_strapiHelperPlugin.translatedErrors.required);\n              }\n\n              if (type !== 'password') {\n                if (options.isCreatingEntry) {\n                  schema = schema.required(_strapiHelperPlugin.translatedErrors.required);\n                } else {\n                  schema = schema.test('required', _strapiHelperPlugin.translatedErrors.required, function (value) {\n                    // Field is not touched and the user is editing the entry\n                    if (value === undefined && !options.isFromComponent) {\n                      return true;\n                    }\n\n                    if (['number', 'integer', 'biginteger', 'float', 'decimal'].includes(type)) {\n                      if (value === 0) {\n                        return true;\n                      }\n\n                      return !!value;\n                    }\n\n                    if (['date', 'datetime'].includes(type)) {\n                      return (0, _moment[\"default\"])(value)._isValid === true;\n                    }\n\n                    if (type === 'boolean') {\n                      return value !== null;\n                    }\n\n                    return !(0, _lodash.isEmpty)(value);\n                  });\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 'max':\n          {\n            if (type === 'biginteger') {\n              schema = schema.isInferior(_strapiHelperPlugin.translatedErrors.max, validationValue);\n            } else {\n              schema = schema.max(validationValue, _strapiHelperPlugin.translatedErrors.max);\n            }\n\n            break;\n          }\n\n        case 'maxLength':\n          schema = schema.max(validationValue, _strapiHelperPlugin.translatedErrors.maxLength);\n          break;\n\n        case 'min':\n          {\n            if (type === 'biginteger') {\n              schema = schema.isSuperior(_strapiHelperPlugin.translatedErrors.min, validationValue);\n            } else {\n              schema = schema.min(validationValue, _strapiHelperPlugin.translatedErrors.min);\n            }\n\n            break;\n          }\n\n        case 'minLength':\n          {\n            if (!options.isDraft) {\n              schema = schema.min(validationValue, _strapiHelperPlugin.translatedErrors.minLength);\n            }\n\n            break;\n          }\n\n        case 'regex':\n          schema = schema.matches(new RegExp(validationValue), _strapiHelperPlugin.translatedErrors.regex);\n          break;\n\n        case 'lowercase':\n          if (['text', 'textarea', 'email', 'string'].includes(type)) {\n            schema = schema.strict().lowercase();\n          }\n\n          break;\n\n        case 'uppercase':\n          if (['text', 'textarea', 'email', 'string'].includes(type)) {\n            schema = schema.strict().uppercase();\n          }\n\n          break;\n\n        case 'positive':\n          if (['number', 'integer', 'bigint', 'float', 'decimal'].includes(type)) {\n            schema = schema.positive();\n          }\n\n          break;\n\n        case 'negative':\n          if (['number', 'integer', 'bigint', 'float', 'decimal'].includes(type)) {\n            schema = schema.negative();\n          }\n\n          break;\n\n        default:\n          schema = schema.nullable();\n      }\n    }\n  });\n  return schema;\n};\n\nvar _default = createYupSchema;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/EditViewDataManagerProvider/utils/schema.js"],"names":["yup","addMethod","mixed","test","errorsTrads","required","value","undefined","array","min","length","string","message","max","Number","isNaN","getAttributes","data","createYupSchema","model","components","options","isCreatingEntry","isDraft","isFromComponent","attributes","object","shape","Object","keys","reduce","acc","current","attribute","type","formatted","createYupSchemaAttribute","includes","relationType","nullable","componentFieldSchema","component","repeatable","componentSchema","lazy","baseSchema","of","obj","defined","dynamicZoneSchema","__component","notEmptyMin","validations","schema","json","JSON","parse","err","email","number","transform","cv","typeError","date","matches","forEach","validation","validationValue","isInteger","Math","floor","_isValid","isInferior","maxLength","isSuperior","minLength","RegExp","regex","strict","lowercase","uppercase","positive","negative"],"mappings":"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","sourcesContent":["import {\n  get,\n  isBoolean,\n  isNumber,\n  isNull,\n  isObject,\n  isArray,\n  isEmpty,\n  isNaN,\n  toNumber,\n} from 'lodash';\nimport moment from 'moment';\nimport * as yup from 'yup';\nimport { translatedErrors as errorsTrads } from 'strapi-helper-plugin';\n\nyup.addMethod(yup.mixed, 'defined', function() {\n  return this.test('defined', errorsTrads.required, value => value !== undefined);\n});\n\nyup.addMethod(yup.array, 'notEmptyMin', function(min) {\n  return this.test('notEmptyMin', errorsTrads.min, value => {\n    if (isEmpty(value)) {\n      return true;\n    }\n\n    return value.length >= min;\n  });\n});\n\nyup.addMethod(yup.string, 'isInferior', function(message, max) {\n  return this.test('isInferior', message, function(value) {\n    if (!value) {\n      return true;\n    }\n\n    if (Number.isNaN(toNumber(value))) {\n      return true;\n    }\n\n    return toNumber(max) >= toNumber(value);\n  });\n});\n\nyup.addMethod(yup.string, 'isSuperior', function(message, min) {\n  return this.test('isSuperior', message, function(value) {\n    if (!value) {\n      return true;\n    }\n\n    if (Number.isNaN(toNumber(value))) {\n      return true;\n    }\n\n    return toNumber(value) >= toNumber(min);\n  });\n});\n\nconst getAttributes = data => get(data, ['attributes'], {});\n\nconst createYupSchema = (\n  model,\n  { components },\n  options = { isCreatingEntry: true, isDraft: true, isFromComponent: false }\n) => {\n  const attributes = getAttributes(model);\n\n  return yup.object().shape(\n    Object.keys(attributes).reduce((acc, current) => {\n      const attribute = attributes[current];\n\n      if (\n        attribute.type !== 'relation' &&\n        attribute.type !== 'component' &&\n        attribute.type !== 'dynamiczone'\n      ) {\n        const formatted = createYupSchemaAttribute(attribute.type, attribute, options);\n        acc[current] = formatted;\n      }\n\n      if (attribute.type === 'relation') {\n        acc[current] = [\n          'oneWay',\n          'oneToOne',\n          'manyToOne',\n          'oneToManyMorph',\n          'oneToOneMorph',\n        ].includes(attribute.relationType)\n          ? yup.object().nullable()\n          : yup.array().nullable();\n      }\n\n      if (attribute.type === 'component') {\n        const componentFieldSchema = createYupSchema(\n          components[attribute.component],\n          {\n            components,\n          },\n          { ...options, isFromComponent: true }\n        );\n\n        if (attribute.repeatable === true) {\n          const { min, max, required } = attribute;\n          let componentSchema = yup.lazy(value => {\n            let baseSchema = yup.array().of(componentFieldSchema);\n\n            if (min && !options.isDraft) {\n              if (required) {\n                baseSchema = baseSchema.min(min, errorsTrads.min);\n              } else if (required !== true && isEmpty(value)) {\n                baseSchema = baseSchema.nullable();\n              } else {\n                baseSchema = baseSchema.min(min, errorsTrads.min);\n              }\n            }\n\n            if (max) {\n              baseSchema = baseSchema.max(max, errorsTrads.max);\n            }\n\n            return baseSchema;\n          });\n\n          acc[current] = componentSchema;\n\n          return acc;\n        }\n        const componentSchema = yup.lazy(obj => {\n          if (obj !== undefined) {\n            return attribute.required === true && !options.isDraft\n              ? componentFieldSchema.defined()\n              : componentFieldSchema.nullable();\n          }\n\n          return attribute.required === true ? yup.object().defined() : yup.object().nullable();\n        });\n\n        acc[current] = componentSchema;\n\n        return acc;\n      }\n\n      if (attribute.type === 'dynamiczone') {\n        let dynamicZoneSchema = yup.array().of(\n          yup.lazy(({ __component }) => {\n            return createYupSchema(\n              components[__component],\n              { components },\n              { ...options, isFromComponent: true }\n            );\n          })\n        );\n\n        const { max, min } = attribute;\n\n        if (attribute.required && !options.isDraft) {\n          dynamicZoneSchema = dynamicZoneSchema.test('required', errorsTrads.required, value => {\n            if (options.isCreatingEntry) {\n              return value !== null || value !== undefined;\n            }\n\n            if (value === undefined) {\n              return true;\n            }\n\n            return value !== null;\n          });\n\n          if (min) {\n            dynamicZoneSchema = dynamicZoneSchema\n              .test('min', errorsTrads.min, value => {\n                if (options.isCreatingEntry) {\n                  return value && value.length > 0;\n                }\n\n                if (value === undefined) {\n                  return true;\n                }\n\n                return value !== null && value.length > 0;\n              })\n              .test('required', errorsTrads.required, value => {\n                if (options.isCreatingEntry) {\n                  return value !== null || value !== undefined;\n                }\n\n                if (value === undefined) {\n                  return true;\n                }\n\n                return value !== null;\n              });\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (min) {\n            dynamicZoneSchema = dynamicZoneSchema.notEmptyMin(min);\n          }\n        }\n\n        if (max) {\n          dynamicZoneSchema = dynamicZoneSchema.max(max, errorsTrads.max);\n        }\n\n        acc[current] = dynamicZoneSchema;\n      }\n\n      return acc;\n    }, {})\n  );\n};\n\nconst createYupSchemaAttribute = (type, validations, options) => {\n  let schema = yup.mixed();\n\n  if (['string', 'uid', 'text', 'richtext', 'email', 'password', 'enumeration'].includes(type)) {\n    schema = yup.string();\n  }\n\n  if (type === 'json') {\n    schema = yup\n      .mixed(errorsTrads.json)\n      .test('isJSON', errorsTrads.json, value => {\n        if (value === undefined) {\n          return true;\n        }\n\n        if (isNumber(value) || isNull(value) || isObject(value) || isArray(value)) {\n          return true;\n        }\n\n        try {\n          JSON.parse(value);\n\n          return true;\n        } catch (err) {\n          return false;\n        }\n      })\n      .nullable();\n  }\n\n  if (type === 'email') {\n    schema = schema.email(errorsTrads.email);\n  }\n\n  if (['number', 'integer', 'biginteger', 'float', 'decimal'].includes(type)) {\n    schema = yup\n      .number()\n      .transform(cv => (isNaN(cv) ? undefined : cv))\n      .typeError();\n  }\n\n  if (['date', 'datetime'].includes(type)) {\n    schema = yup.date();\n  }\n\n  if (type === 'biginteger') {\n    schema = yup.string().matches(/^\\d*$/);\n  }\n\n  Object.keys(validations).forEach(validation => {\n    const validationValue = validations[validation];\n\n    if (\n      !!validationValue ||\n      (!isBoolean(validationValue) && Number.isInteger(Math.floor(validationValue))) ||\n      validationValue === 0\n    ) {\n      switch (validation) {\n        case 'required': {\n          if (!options.isDraft) {\n            if (type === 'password' && options.isCreatingEntry) {\n              schema = schema.required(errorsTrads.required);\n            }\n\n            if (type !== 'password') {\n              if (options.isCreatingEntry) {\n                schema = schema.required(errorsTrads.required);\n              } else {\n                schema = schema.test('required', errorsTrads.required, value => {\n                  // Field is not touched and the user is editing the entry\n                  if (value === undefined && !options.isFromComponent) {\n                    return true;\n                  }\n\n                  if (['number', 'integer', 'biginteger', 'float', 'decimal'].includes(type)) {\n                    if (value === 0) {\n                      return true;\n                    }\n\n                    return !!value;\n                  }\n\n                  if (['date', 'datetime'].includes(type)) {\n                    return moment(value)._isValid === true;\n                  }\n\n                  if (type === 'boolean') {\n                    return value !== null;\n                  }\n\n                  return !isEmpty(value);\n                });\n              }\n            }\n          }\n\n          break;\n        }\n\n        case 'max': {\n          if (type === 'biginteger') {\n            schema = schema.isInferior(errorsTrads.max, validationValue);\n          } else {\n            schema = schema.max(validationValue, errorsTrads.max);\n          }\n          break;\n        }\n        case 'maxLength':\n          schema = schema.max(validationValue, errorsTrads.maxLength);\n          break;\n        case 'min': {\n          if (type === 'biginteger') {\n            schema = schema.isSuperior(errorsTrads.min, validationValue);\n          } else {\n            schema = schema.min(validationValue, errorsTrads.min);\n          }\n          break;\n        }\n        case 'minLength': {\n          if (!options.isDraft) {\n            schema = schema.min(validationValue, errorsTrads.minLength);\n          }\n          break;\n        }\n        case 'regex':\n          schema = schema.matches(new RegExp(validationValue), errorsTrads.regex);\n          break;\n        case 'lowercase':\n          if (['text', 'textarea', 'email', 'string'].includes(type)) {\n            schema = schema.strict().lowercase();\n          }\n          break;\n        case 'uppercase':\n          if (['text', 'textarea', 'email', 'string'].includes(type)) {\n            schema = schema.strict().uppercase();\n          }\n          break;\n        case 'positive':\n          if (['number', 'integer', 'bigint', 'float', 'decimal'].includes(type)) {\n            schema = schema.positive();\n          }\n          break;\n        case 'negative':\n          if (['number', 'integer', 'bigint', 'float', 'decimal'].includes(type)) {\n            schema = schema.negative();\n          }\n          break;\n        default:\n          schema = schema.nullable();\n      }\n    }\n  });\n\n  return schema;\n};\n\nexport default createYupSchema;\n"]},"metadata":{},"sourceType":"script"}