{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _reactstrap = require(\"reactstrap\");\n\nvar _lodash = require(\"lodash\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _i18n = require(\"../../i18n\");\n\nvar _ContainerFluid = _interopRequireDefault(require(\"../../components/ContainerFluid\"));\n\nvar _PageTitle = _interopRequireDefault(require(\"../../components/PageTitle\"));\n\nvar _SizedInput = _interopRequireDefault(require(\"../../components/SizedInput\"));\n\nvar _Settings = require(\"../../components/Settings\");\n\nvar _FormBloc = _interopRequireDefault(require(\"../../components/FormBloc\"));\n\nvar _hooks = require(\"../../hooks\");\n\nvar _useChangeLanguage = _interopRequireDefault(require(\"../LanguageProvider/hooks/useChangeLanguage\"));\n\nvar _components = _interopRequireDefault(require(\"./components\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ProfilePage = function ProfilePage() {\n  var changeLanguage = (0, _useChangeLanguage[\"default\"])();\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var onSubmitSuccessCb = function onSubmitSuccessCb(data) {\n    changeLanguage(data.preferedLanguage);\n\n    _strapiHelperPlugin.auth.setUserInfo(data);\n  };\n\n  var _useSettingsForm = (0, _hooks.useSettingsForm)('/admin/users/me', _utils.schema, onSubmitSuccessCb, ['email', 'firstname', 'lastname', 'username', 'preferedLanguage']),\n      _useSettingsForm2 = (0, _slicedToArray2[\"default\"])(_useSettingsForm, 3),\n      _useSettingsForm2$ = _useSettingsForm2[0],\n      formErrors = _useSettingsForm2$.formErrors,\n      initialData = _useSettingsForm2$.initialData,\n      isLoading = _useSettingsForm2$.isLoading,\n      modifiedData = _useSettingsForm2$.modifiedData,\n      showHeaderLoader = _useSettingsForm2$.showHeaderLoader,\n      showHeaderButtonLoader = _useSettingsForm2$.showHeaderButtonLoader,\n      // eslint-disable-next-line no-unused-vars\n  _ = _useSettingsForm2[1],\n      _useSettingsForm2$2 = _useSettingsForm2[2],\n      handleCancel = _useSettingsForm2$2.handleCancel,\n      handleChange = _useSettingsForm2$2.handleChange,\n      handleSubmit = _useSettingsForm2$2.handleSubmit,\n      setField = _useSettingsForm2$2.setField;\n\n  var headerLabel = (0, _react.useMemo)(function () {\n    var userInfos = _strapiHelperPlugin.auth.getUserInfo();\n\n    if (modifiedData) {\n      return modifiedData.username || \"\".concat(modifiedData.firstname, \" \").concat(modifiedData.lastname);\n    }\n\n    return userInfos.username || \"\".concat(userInfos.firstname, \" \").concat(userInfos.lastname);\n  }, [modifiedData]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_PageTitle[\"default\"], {\n    title: \"User profile\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/_react[\"default\"].createElement(_ContainerFluid[\"default\"], {\n    padding: \"18px 30px 0 30px\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Settings.Header, {\n    isLoading: showHeaderLoader,\n    initialData: initialData,\n    label: headerLabel,\n    modifiedData: modifiedData,\n    onCancel: handleCancel,\n    showHeaderButtonLoader: showHeaderButtonLoader\n  }), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.BaselineAlignment, {\n    top: true,\n    size: \"3px\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_FormBloc[\"default\"], {\n    isLoading: isLoading,\n    title: formatMessage({\n      id: 'Settings.profile.form.section.profile.title'\n    })\n  }, Object.keys(_utils.form).map(function (key) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_SizedInput[\"default\"], (0, _extends2[\"default\"])({}, _utils.form[key], {\n      key: key,\n      error: formErrors[key],\n      name: key,\n      onChange: handleChange,\n      value: (0, _lodash.get)(modifiedData, key, '')\n    }));\n  })), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.BaselineAlignment, {\n    top: true,\n    size: \"2px\"\n  }), !isLoading && /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    top: true,\n    size: \"md\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_FormBloc[\"default\"], {\n    title: formatMessage({\n      id: 'Settings.profile.form.section.password.title'\n    })\n  }, /*#__PURE__*/_react[\"default\"].createElement(_SizedInput[\"default\"], {\n    label: \"Auth.form.password.label\",\n    type: \"password\",\n    autoComplete: \"new-password\",\n    validations: {},\n    error: formErrors.password,\n    name: \"password\",\n    onChange: handleChange,\n    value: (0, _lodash.get)(modifiedData, 'password', '')\n  }), /*#__PURE__*/_react[\"default\"].createElement(_SizedInput[\"default\"], {\n    label: \"Auth.form.confirmPassword.label\",\n    type: \"password\",\n    validations: {},\n    error: formErrors.confirmPassword,\n    name: \"confirmPassword\",\n    onChange: handleChange,\n    value: (0, _lodash.get)(modifiedData, 'confirmPassword', '')\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.BaselineAlignment, {\n    top: true,\n    size: \"13px\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    top: true,\n    size: \"smd\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_FormBloc[\"default\"], {\n    title: formatMessage({\n      id: 'Settings.profile.form.section.experience.title'\n    })\n  }, /*#__PURE__*/_react[\"default\"].createElement(_components[\"default\"], {\n    htmlFor: \"\"\n  }, formatMessage({\n    id: 'Settings.profile.form.section.experience.interfaceLanguage'\n  })), /*#__PURE__*/_react[\"default\"].createElement(_reactstrap.Col, {\n    xs: \"6\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.Select, {\n    \"aria-labelledby\": \"interface-language\",\n    selectedValue: (0, _lodash.get)(modifiedData, 'preferedLanguage'),\n    onChange: function onChange(nextLocaleCode) {\n      return setField('preferedLanguage', nextLocaleCode);\n    }\n  }, _i18n.languages.map(function (language) {\n    var langName = _i18n.languageNativeNames[language];\n    return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.Option, {\n      value: language,\n      key: language\n    }, langName);\n  })), /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    size: \"sm\",\n    top: true,\n    bottom: true\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    color: \"grey\"\n  }, formatMessage({\n    id: 'Settings.profile.form.section.experience.interfaceLanguage.hint'\n  }))))))))), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.BaselineAlignment, {\n    bottom: true,\n    size: \"80px\"\n  }));\n};\n\nvar _default = ProfilePage;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/containers/ProfilePage/index.js"],"names":["ProfilePage","changeLanguage","formatMessage","onSubmitSuccessCb","data","preferedLanguage","auth","setUserInfo","schema","formErrors","initialData","isLoading","modifiedData","showHeaderLoader","showHeaderButtonLoader","_","handleCancel","handleChange","handleSubmit","setField","headerLabel","userInfos","getUserInfo","username","firstname","lastname","id","Object","keys","form","map","key","password","confirmPassword","nextLocaleCode","languages","language","langName","languageNativeNames"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { BaselineAlignment, auth, Select, Option } from 'strapi-helper-plugin';\nimport { Padded, Text } from '@buffetjs/core';\nimport { Col } from 'reactstrap';\nimport { get } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport { languages, languageNativeNames } from '../../i18n';\nimport ContainerFluid from '../../components/ContainerFluid';\nimport PageTitle from '../../components/PageTitle';\nimport SizedInput from '../../components/SizedInput';\nimport { Header } from '../../components/Settings';\nimport FormBloc from '../../components/FormBloc';\nimport { useSettingsForm } from '../../hooks';\nimport useChangeLanguage from '../LanguageProvider/hooks/useChangeLanguage';\nimport ProfilePageLabel from './components';\nimport { form, schema } from './utils';\n\nconst ProfilePage = () => {\n  const changeLanguage = useChangeLanguage();\n  const { formatMessage } = useIntl();\n\n  const onSubmitSuccessCb = data => {\n    changeLanguage(data.preferedLanguage);\n    auth.setUserInfo(data);\n  };\n\n  const [\n    { formErrors, initialData, isLoading, modifiedData, showHeaderLoader, showHeaderButtonLoader },\n    // eslint-disable-next-line no-unused-vars\n    _,\n    { handleCancel, handleChange, handleSubmit, setField },\n  ] = useSettingsForm('/admin/users/me', schema, onSubmitSuccessCb, [\n    'email',\n    'firstname',\n    'lastname',\n    'username',\n    'preferedLanguage',\n  ]);\n\n  const headerLabel = useMemo(() => {\n    const userInfos = auth.getUserInfo();\n\n    if (modifiedData) {\n      return modifiedData.username || `${modifiedData.firstname} ${modifiedData.lastname}`;\n    }\n\n    return userInfos.username || `${userInfos.firstname} ${userInfos.lastname}`;\n  }, [modifiedData]);\n\n  return (\n    <>\n      <PageTitle title=\"User profile\" />\n      <form onSubmit={handleSubmit}>\n        <ContainerFluid padding=\"18px 30px 0 30px\">\n          <Header\n            isLoading={showHeaderLoader}\n            initialData={initialData}\n            label={headerLabel}\n            modifiedData={modifiedData}\n            onCancel={handleCancel}\n            showHeaderButtonLoader={showHeaderButtonLoader}\n          />\n          <BaselineAlignment top size=\"3px\" />\n          {/* Experience block */}\n          <FormBloc\n            isLoading={isLoading}\n            title={formatMessage({ id: 'Settings.profile.form.section.profile.title' })}\n          >\n            {Object.keys(form).map(key => (\n              <SizedInput\n                {...form[key]}\n                key={key}\n                error={formErrors[key]}\n                name={key}\n                onChange={handleChange}\n                value={get(modifiedData, key, '')}\n              />\n            ))}\n          </FormBloc>\n          <BaselineAlignment top size=\"2px\" />\n\n          {/* Password block */}\n          {!isLoading && (\n            <>\n              <Padded top size=\"md\">\n                <FormBloc\n                  title={formatMessage({ id: 'Settings.profile.form.section.password.title' })}\n                >\n                  <SizedInput\n                    label=\"Auth.form.password.label\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    validations={{}}\n                    error={formErrors.password}\n                    name=\"password\"\n                    onChange={handleChange}\n                    value={get(modifiedData, 'password', '')}\n                  />\n\n                  <SizedInput\n                    label=\"Auth.form.confirmPassword.label\"\n                    type=\"password\"\n                    validations={{}}\n                    error={formErrors.confirmPassword}\n                    name=\"confirmPassword\"\n                    onChange={handleChange}\n                    value={get(modifiedData, 'confirmPassword', '')}\n                  />\n                </FormBloc>\n              </Padded>\n\n              <BaselineAlignment top size=\"13px\" />\n\n              {/* Interface block */}\n              <Padded top size=\"smd\">\n                <FormBloc\n                  title={formatMessage({ id: 'Settings.profile.form.section.experience.title' })}\n                >\n                  <ProfilePageLabel htmlFor=\"\">\n                    {formatMessage({\n                      id: 'Settings.profile.form.section.experience.interfaceLanguage',\n                    })}\n                  </ProfilePageLabel>\n                  <Col xs=\"6\">\n                    <Select\n                      aria-labelledby=\"interface-language\"\n                      selectedValue={get(modifiedData, 'preferedLanguage')}\n                      onChange={nextLocaleCode => setField('preferedLanguage', nextLocaleCode)}\n                    >\n                      {languages.map(language => {\n                        const langName = languageNativeNames[language];\n\n                        return (\n                          <Option value={language} key={language}>\n                            {langName}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n\n                    <Padded size=\"sm\" top bottom>\n                      <Text color=\"grey\">\n                        {formatMessage({\n                          id: 'Settings.profile.form.section.experience.interfaceLanguage.hint',\n                        })}\n                      </Text>\n                    </Padded>\n                  </Col>\n                </FormBloc>\n              </Padded>\n            </>\n          )}\n        </ContainerFluid>\n      </form>\n      <BaselineAlignment bottom size=\"80px\" />\n    </>\n  );\n};\n\nexport default ProfilePage;\n"]},"metadata":{},"sourceType":"script"}