{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _lodash = require(\"lodash\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Sets all the none object values of an object to the given one\n * @param {object} obj\n * @param {boolean} valueToSet The value we want to set\n * It preserves the shape of the object, it only modifies the leafs\n * of an object.\n * This utility is very helpful when dealing with parent<>children checkboxes\n */\nvar updateValues = function updateValues(obj, valueToSet) {\n  return Object.keys(obj).reduce(function (acc, current) {\n    var currentValue = obj[current];\n\n    if (current === 'conditions') {\n      acc[current] = currentValue;\n      return acc;\n    }\n\n    if ((0, _lodash.isObject)(currentValue)) {\n      return _objectSpread(_objectSpread({}, acc), {}, (0, _defineProperty2[\"default\"])({}, current, updateValues(currentValue, valueToSet)));\n    }\n\n    acc[current] = valueToSet;\n    return acc;\n  }, {});\n};\n\nvar _default = updateValues;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/components/Roles/Permissions/utils/updateValues.js"],"names":["updateValues","obj","valueToSet","Object","keys","reduce","acc","current","currentValue"],"mappings":";;;;;;;;;;;AAAA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,UAAN,EAAqB;AACxC,SAAOC,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,MAAjB,CAAwB,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC/C,QAAMC,YAAY,GAAGP,GAAG,CAACM,OAAD,CAAxB;;AAEA,QAAIA,OAAO,KAAK,YAAhB,EAA8B;AAC5BD,MAAAA,GAAG,CAACC,OAAD,CAAH,GAAeC,YAAf;AAEA,aAAOF,GAAP;AACD;;AAED,QAAI,sBAASE,YAAT,CAAJ,EAA4B;AAC1B,6CAAYF,GAAZ,4CAAkBC,OAAlB,EAA4BP,YAAY,CAACQ,YAAD,EAAeN,UAAf,CAAxC;AACD;;AAEDI,IAAAA,GAAG,CAACC,OAAD,CAAH,GAAeL,UAAf;AAEA,WAAOI,GAAP;AACD,GAhBM,EAgBJ,EAhBI,CAAP;AAiBD,CAlBD;;eAoBeN,Y","sourcesContent":["import { isObject } from 'lodash';\n\n/**\n * Sets all the none object values of an object to the given one\n * @param {object} obj\n * @param {boolean} valueToSet The value we want to set\n * It preserves the shape of the object, it only modifies the leafs\n * of an object.\n * This utility is very helpful when dealing with parent<>children checkboxes\n */\nconst updateValues = (obj, valueToSet) => {\n  return Object.keys(obj).reduce((acc, current) => {\n    const currentValue = obj[current];\n\n    if (current === 'conditions') {\n      acc[current] = currentValue;\n\n      return acc;\n    }\n\n    if (isObject(currentValue)) {\n      return { ...acc, [current]: updateValues(currentValue, valueToSet) };\n    }\n\n    acc[current] = valueToSet;\n\n    return acc;\n  }, {});\n};\n\nexport default updateValues;\n"]},"metadata":{},"sourceType":"script"}