{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _StyledLink = _interopRequireDefault(require(\"./StyledLink\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ConfigureLink = function ConfigureLink(_ref) {\n  var slug = _ref.slug;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      emitEvent = _useGlobalContext.emitEvent;\n\n  var handleClick = function handleClick() {\n    emitEvent('willEditListLayout');\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_StyledLink[\"default\"], {\n    to: \"\".concat(slug, \"/configurations/list\"),\n    onClick: handleClick\n  }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.LayoutIcon, null), /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n    id: \"app.links.configure-view\"\n  })));\n};\n\nConfigureLink.propTypes = {\n  slug: _propTypes[\"default\"].string.isRequired\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(ConfigureLink);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/ListView/FieldPicker/ConfigureLink/index.js"],"names":["ConfigureLink","slug","emitEvent","handleClick","propTypes","PropTypes","string","isRequired"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAClC,0BAAsB,2CAAtB;AAAA,MAAQC,SAAR,qBAAQA,SAAR;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBD,IAAAA,SAAS,CAAC,oBAAD,CAAT;AACD,GAFD;;AAIA,sBACE,gCAAC,mBAAD,qBACE,gCAAC,sBAAD;AAAM,IAAA,EAAE,YAAKD,IAAL,yBAAR;AAAyC,IAAA,OAAO,EAAEE;AAAlD,kBACE,gCAAC,8BAAD,OADF,eAEE,gCAAC,2BAAD;AAAkB,IAAA,EAAE,EAAC;AAArB,IAFF,CADF,CADF;AAQD,CAfD;;AAiBAH,aAAa,CAACI,SAAd,GAA0B;AACxBH,EAAAA,IAAI,EAAEI,sBAAUC,MAAV,CAAiBC;AADC,CAA1B;;4BAIe,iBAAKP,aAAL,C","sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { LayoutIcon, useGlobalContext } from 'strapi-helper-plugin';\nimport { FormattedMessage } from 'react-intl';\nimport Link from './StyledLink';\nimport Wrapper from './Wrapper';\n\nconst ConfigureLink = ({ slug }) => {\n  const { emitEvent } = useGlobalContext();\n\n  const handleClick = () => {\n    emitEvent('willEditListLayout');\n  };\n\n  return (\n    <Wrapper>\n      <Link to={`${slug}/configurations/list`} onClick={handleClick}>\n        <LayoutIcon />\n        <FormattedMessage id=\"app.links.configure-view\" />\n      </Link>\n    </Wrapper>\n  );\n};\n\nConfigureLink.propTypes = {\n  slug: PropTypes.string.isRequired,\n};\n\nexport default memo(ConfigureLink);\n"]},"metadata":{},"sourceType":"script"}