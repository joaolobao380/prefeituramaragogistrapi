{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _reactSelect = require(\"react-select\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _utils = require(\"../../utils\");\n\nvar _templateObject;\n\nvar TextGrow = (0, _styledComponents[\"default\"])(_core.Text)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  flex-grow: 2;\\n\"])));\nvar statusToTitleMap = {\n  draft: 'content-manager.components.Select.draft-info-title',\n  published: 'content-manager.components.Select.publish-info-title',\n  'did-not-create-locale': (0, _utils.getTrad)('components.Select.locales.not-available')\n};\n\nvar Option = function Option(props) {\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var Component = _reactSelect.components.Option;\n  var options = (0, _get[\"default\"])(props, ['selectProps', 'options'], {});\n  var currentOption = options.find(function (option) {\n    return option.value === props.value;\n  });\n  var titleLabelID = statusToTitleMap[currentOption.status];\n  var title = formatMessage({\n    id: titleLabelID\n  });\n  var fontWeight = props.isFocused ? 'bold' : 'regular';\n  return /*#__PURE__*/_react[\"default\"].createElement(Component, props, /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.RelationDPState, (0, _extends2[\"default\"])({}, currentOption, {\n    marginLeft: \"0\",\n    marginTop: \"1px\",\n    marginRight: \"10px\",\n    marginBottom: \"0\",\n    title: title\n  })), /*#__PURE__*/_react[\"default\"].createElement(TextGrow, {\n    ellipsis: true,\n    as: \"div\",\n    fontWeight: fontWeight,\n    title: props.label\n  }, props.label, \"\\xA0\")));\n};\n\nOption.defaultProps = {};\nOption.propTypes = {\n  label: _propTypes[\"default\"].string.isRequired,\n  isFocused: _propTypes[\"default\"].bool.isRequired,\n  selectProps: _propTypes[\"default\"].shape({\n    options: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape({\n      status: _propTypes[\"default\"].string.isRequired,\n      value: _propTypes[\"default\"].string.isRequired\n    }).isRequired).isRequired\n  }).isRequired,\n  value: _propTypes[\"default\"].string.isRequired\n};\nvar _default = Option;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/components/CMEditViewLocalePicker/Option.js"],"names":["TextGrow","Text","statusToTitleMap","draft","published","Option","props","formatMessage","Component","components","options","currentOption","find","option","value","titleLabelID","status","title","id","fontWeight","isFocused","label","defaultProps","propTypes","PropTypes","string","isRequired","bool","selectProps","shape","arrayOf"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,QAAQ,GAAG,kCAAOC,UAAP,CAAH,yGAAd;AAIA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,oDADgB;AAEvBC,EAAAA,SAAS,EAAE,sDAFY;AAGvB,2BAAyB,oBAAQ,yCAAR;AAHF,CAAzB;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,iBAA0B,yBAA1B;AAAA,MAAQC,aAAR,YAAQA,aAAR;;AACA,MAAMC,SAAS,GAAGC,wBAAWJ,MAA7B;AACA,MAAMK,OAAO,GAAG,qBAAIJ,KAAJ,EAAW,CAAC,aAAD,EAAgB,SAAhB,CAAX,EAAuC,EAAvC,CAAhB;AACA,MAAMK,aAAa,GAAGD,OAAO,CAACE,IAAR,CAAa,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,KAAP,KAAiBR,KAAK,CAACQ,KAA3B;AAAA,GAAnB,CAAtB;AACA,MAAMC,YAAY,GAAGb,gBAAgB,CAACS,aAAa,CAACK,MAAf,CAArC;AACA,MAAMC,KAAK,GAAGV,aAAa,CAAC;AAAEW,IAAAA,EAAE,EAAEH;AAAN,GAAD,CAA3B;AACA,MAAMI,UAAU,GAAGb,KAAK,CAACc,SAAN,GAAkB,MAAlB,GAA2B,SAA9C;AAEA,sBACE,gCAAC,SAAD,EAAed,KAAf,eACE,gCAAC,UAAD,qBACE,gCAAC,mCAAD,gCACMK,aADN;AAEE,IAAA,UAAU,EAAC,GAFb;AAGE,IAAA,SAAS,EAAC,KAHZ;AAIE,IAAA,WAAW,EAAC,MAJd;AAKE,IAAA,YAAY,EAAC,GALf;AAME,IAAA,KAAK,EAAEM;AANT,KADF,eAUE,gCAAC,QAAD;AAAU,IAAA,QAAQ,MAAlB;AAAmB,IAAA,EAAE,EAAC,KAAtB;AAA4B,IAAA,UAAU,EAAEE,UAAxC;AAAoD,IAAA,KAAK,EAAEb,KAAK,CAACe;AAAjE,KACGf,KAAK,CAACe,KADT,SAVF,CADF,CADF;AAkBD,CA3BD;;AA6BAhB,MAAM,CAACiB,YAAP,GAAsB,EAAtB;AAEAjB,MAAM,CAACkB,SAAP,GAAmB;AACjBF,EAAAA,KAAK,EAAEG,sBAAUC,MAAV,CAAiBC,UADP;AAEjBN,EAAAA,SAAS,EAAEI,sBAAUG,IAAV,CAAeD,UAFT;AAGjBE,EAAAA,WAAW,EAAEJ,sBAAUK,KAAV,CAAgB;AAC3BnB,IAAAA,OAAO,EAAEc,sBAAUM,OAAV,CACPN,sBAAUK,KAAV,CAAgB;AACdb,MAAAA,MAAM,EAAEQ,sBAAUC,MAAV,CAAiBC,UADX;AAEdZ,MAAAA,KAAK,EAAEU,sBAAUC,MAAV,CAAiBC;AAFV,KAAhB,EAGGA,UAJI,EAKPA;AANyB,GAAhB,EAOVA,UAVc;AAWjBZ,EAAAA,KAAK,EAAEU,sBAAUC,MAAV,CAAiBC;AAXP,CAAnB;eAcerB,M","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { components } from 'react-select';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { Flex, Text } from '@buffetjs/core';\nimport { RelationDPState } from 'strapi-helper-plugin';\nimport { getTrad } from '../../utils';\n\nconst TextGrow = styled(Text)`\n  flex-grow: 2;\n`;\n\nconst statusToTitleMap = {\n  draft: 'content-manager.components.Select.draft-info-title',\n  published: 'content-manager.components.Select.publish-info-title',\n  'did-not-create-locale': getTrad('components.Select.locales.not-available'),\n};\n\nconst Option = props => {\n  const { formatMessage } = useIntl();\n  const Component = components.Option;\n  const options = get(props, ['selectProps', 'options'], {});\n  const currentOption = options.find(option => option.value === props.value);\n  const titleLabelID = statusToTitleMap[currentOption.status];\n  const title = formatMessage({ id: titleLabelID });\n  const fontWeight = props.isFocused ? 'bold' : 'regular';\n\n  return (\n    <Component {...props}>\n      <Flex>\n        <RelationDPState\n          {...currentOption}\n          marginLeft=\"0\"\n          marginTop=\"1px\"\n          marginRight=\"10px\"\n          marginBottom=\"0\"\n          title={title}\n        />\n\n        <TextGrow ellipsis as=\"div\" fontWeight={fontWeight} title={props.label}>\n          {props.label}&nbsp;\n        </TextGrow>\n      </Flex>\n    </Component>\n  );\n};\n\nOption.defaultProps = {};\n\nOption.propTypes = {\n  label: PropTypes.string.isRequired,\n  isFocused: PropTypes.bool.isRequired,\n  selectProps: PropTypes.shape({\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        status: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired,\n      }).isRequired\n    ).isRequired,\n  }).isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Option;\n"]},"metadata":{},"sourceType":"script"}