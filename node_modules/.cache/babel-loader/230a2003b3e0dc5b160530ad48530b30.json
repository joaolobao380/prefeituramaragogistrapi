{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _CardPreview = _interopRequireDefault(require(\"../CardPreview\"));\n\nvar _Chevron = _interopRequireDefault(require(\"./Chevron\"));\n\nvar InputFilePreview = function InputFilePreview(_ref) {\n  var file = _ref.file,\n      _onClick = _ref.onClick,\n      isSlider = _ref.isSlider;\n  var fileUrl = (0, _strapiHelperPlugin.prefixFileUrlWithBackendUrl)((0, _lodash.get)(file, ['formats', 'small', 'url'], file.url));\n  return /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, {\n    key: file.id,\n    style: {\n      height: '100%'\n    },\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  }, isSlider && /*#__PURE__*/_react[\"default\"].createElement(_Chevron[\"default\"], {\n    side: \"left\",\n    onClick: function onClick() {\n      return _onClick(false);\n    }\n  }), /*#__PURE__*/_react[\"default\"].createElement(_CardPreview[\"default\"], {\n    hasIcon: true,\n    url: fileUrl,\n    type: file.mime\n  }), isSlider && /*#__PURE__*/_react[\"default\"].createElement(_Chevron[\"default\"], {\n    side: \"right\",\n    onClick: function onClick() {\n      return _onClick(true);\n    }\n  }));\n};\n\nInputFilePreview.propTypes = {\n  file: _propTypes[\"default\"].object,\n  isSlider: _propTypes[\"default\"].bool,\n  onClick: _propTypes[\"default\"].func.isRequired\n};\nInputFilePreview.defaultProps = {\n  isSlider: false,\n  file: null\n};\nvar _default = InputFilePreview;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/components/InputMedia/InputFilePreview.js"],"names":["InputFilePreview","file","onClick","isSlider","fileUrl","url","id","height","mime","propTypes","PropTypes","object","bool","func","isRequired","defaultProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAiC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,QAAwB,QAAxBA,OAAwB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACxD,MAAMC,OAAO,GAAG,qDAA4B,iBAAIH,IAAJ,EAAU,CAAC,SAAD,EAAY,OAAZ,EAAqB,KAArB,CAAV,EAAuCA,IAAI,CAACI,GAA5C,CAA5B,CAAhB;AAEA,sBACE,gCAAC,UAAD;AACE,IAAA,GAAG,EAAEJ,IAAI,CAACK,EADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAFT;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,cAAc,EAAC;AAJjB,KAMGJ,QAAQ,iBAAI,gCAAC,mBAAD;AAAS,IAAA,IAAI,EAAC,MAAd;AAAqB,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAO,CAAC,KAAD,CAAb;AAAA;AAA9B,IANf,eAOE,gCAAC,uBAAD;AAAa,IAAA,OAAO,MAApB;AAAqB,IAAA,GAAG,EAAEE,OAA1B;AAAmC,IAAA,IAAI,EAAEH,IAAI,CAACO;AAA9C,IAPF,EAQGL,QAAQ,iBAAI,gCAAC,mBAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAO,CAAC,IAAD,CAAb;AAAA;AAA/B,IARf,CADF;AAYD,CAfD;;AAiBAF,gBAAgB,CAACS,SAAjB,GAA6B;AAC3BR,EAAAA,IAAI,EAAES,sBAAUC,MADW;AAE3BR,EAAAA,QAAQ,EAAEO,sBAAUE,IAFO;AAG3BV,EAAAA,OAAO,EAAEQ,sBAAUG,IAAV,CAAeC;AAHG,CAA7B;AAKAd,gBAAgB,CAACe,YAAjB,GAAgC;AAC9BZ,EAAAA,QAAQ,EAAE,KADoB;AAE9BF,EAAAA,IAAI,EAAE;AAFwB,CAAhC;eAKeD,gB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash';\nimport { prefixFileUrlWithBackendUrl } from 'strapi-helper-plugin';\nimport { Flex } from '@buffetjs/core';\n\nimport CardPreview from '../CardPreview';\nimport Chevron from './Chevron';\n\nconst InputFilePreview = ({ file, onClick, isSlider }) => {\n  const fileUrl = prefixFileUrlWithBackendUrl(get(file, ['formats', 'small', 'url'], file.url));\n\n  return (\n    <Flex\n      key={file.id}\n      style={{ height: '100%' }}\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      {isSlider && <Chevron side=\"left\" onClick={() => onClick(false)} />}\n      <CardPreview hasIcon url={fileUrl} type={file.mime} />\n      {isSlider && <Chevron side=\"right\" onClick={() => onClick(true)} />}\n    </Flex>\n  );\n};\n\nInputFilePreview.propTypes = {\n  file: PropTypes.object,\n  isSlider: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\nInputFilePreview.defaultProps = {\n  isSlider: false,\n  file: null,\n};\n\nexport default InputFilePreview;\n"]},"metadata":{},"sourceType":"script"}