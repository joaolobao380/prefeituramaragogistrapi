{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapDispatchToProps = mapDispatchToProps;\nexports.App = App;\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _redux = require(\"redux\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactQuery = require(\"react-query\");\n\nvar _GlobalStyle = _interopRequireDefault(require(\"../../components/GlobalStyle\"));\n\nvar _Admin = _interopRequireDefault(require(\"../Admin\"));\n\nvar _AuthPage = _interopRequireDefault(require(\"../AuthPage\"));\n\nvar _NotFoundPage = _interopRequireDefault(require(\"../NotFoundPage\"));\n\nvar _NotificationProvider = _interopRequireDefault(require(\"../NotificationProvider\"));\n\nvar _Theme = _interopRequireDefault(require(\"../Theme\"));\n\nvar _utils = require(\"./utils\");\n\nvar _components = require(\"./components\");\n\nvar _actions = require(\"./actions\");\n\nvar _NewNotification = _interopRequireDefault(require(\"../NewNotification\"));\n\nvar _PrivateRoute = _interopRequireDefault(require(\"../PrivateRoute\"));\n\nvar _routes = _interopRequireDefault(require(\"./utils/routes\"));\n\nvar _utils2 = require(\"../SettingsPage/utils\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar queryClient = new _reactQuery.QueryClient();\n\nfunction App(props) {\n  var getDataRef = (0, _react.useRef)();\n\n  var _useState = (0, _react.useState)({\n    isLoading: true,\n    hasAdmin: false\n  }),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      _useState2$ = _useState2[0],\n      isLoading = _useState2$.isLoading,\n      hasAdmin = _useState2$.hasAdmin,\n      setState = _useState2[1];\n\n  getDataRef.current = props.getDataSucceeded;\n  var authRoutes = (0, _react.useMemo)(function () {\n    return (0, _utils2.makeUniqueRoutes)(_routes[\"default\"].map(function (_ref) {\n      var to = _ref.to,\n          Component = _ref.Component,\n          exact = _ref.exact;\n      return (0, _utils2.createRoute)(Component, to, exact);\n    }));\n  }, []);\n  (0, _react.useEffect)(function () {\n    var currentToken = _strapiHelperPlugin.auth.getToken();\n\n    var renewToken = /*#__PURE__*/function () {\n      var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n        var _yield$request, token;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return (0, _strapiHelperPlugin.request)('/admin/renew-token', {\n                  method: 'POST',\n                  body: {\n                    token: currentToken\n                  }\n                });\n\n              case 3:\n                _yield$request = _context.sent;\n                token = _yield$request.data.token;\n\n                _strapiHelperPlugin.auth.updateToken(token);\n\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n\n                // Refresh app\n                _strapiHelperPlugin.auth.clearAppStorage();\n\n                window.location.reload();\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function renewToken() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (currentToken) {\n      renewToken();\n    }\n  }, []);\n  (0, _react.useEffect)(function () {\n    var getData = /*#__PURE__*/function () {\n      var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        var _yield$request2, data, uuid, deviceId;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return (0, _strapiHelperPlugin.request)('/admin/init', {\n                  method: 'GET'\n                });\n\n              case 3:\n                _yield$request2 = _context2.sent;\n                data = _yield$request2.data;\n                uuid = data.uuid;\n\n                if (!uuid) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                _context2.prev = 7;\n                _context2.next = 10;\n                return (0, _utils.getUID)();\n\n              case 10:\n                deviceId = _context2.sent;\n                fetch('https://analytics.strapi.io/track', {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    event: 'didInitializeAdministration',\n                    uuid: uuid,\n                    deviceId: deviceId\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n                _context2.next = 16;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](7);\n\n              case 16:\n                getDataRef.current(data);\n                setState({\n                  isLoading: false,\n                  hasAdmin: data.hasAdmin\n                });\n                _context2.next = 23;\n                break;\n\n              case 20:\n                _context2.prev = 20;\n                _context2.t1 = _context2[\"catch\"](0);\n                strapi.notification.toggle({\n                  type: 'warning',\n                  message: {\n                    id: 'app.containers.App.notification.error.init'\n                  }\n                });\n\n              case 23:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 20], [7, 14]]);\n      }));\n\n      return function getData() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    getData();\n  }, []);\n\n  var setHasAdmin = function setHasAdmin(hasAdmin) {\n    return setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        hasAdmin: hasAdmin\n      });\n    });\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.LoadingIndicatorPage, null);\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Theme[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_components.Wrapper, null, /*#__PURE__*/_react[\"default\"].createElement(_GlobalStyle[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_reactQuery.QueryClientProvider, {\n    client: queryClient\n  }, /*#__PURE__*/_react[\"default\"].createElement(_NotificationProvider[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_NewNotification[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_components.Content, null, /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Switch, null, authRoutes, /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Route, {\n    path: \"/auth/:authType\",\n    render: function render(routerProps) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_AuthPage[\"default\"], (0, _extends2[\"default\"])({}, routerProps, {\n        setHasAdmin: setHasAdmin,\n        hasAdmin: hasAdmin\n      }));\n    },\n    exact: true\n  }), /*#__PURE__*/_react[\"default\"].createElement(_PrivateRoute[\"default\"], {\n    path: \"/\",\n    component: _Admin[\"default\"]\n  }), /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Route, {\n    path: \"\",\n    component: _NotFoundPage[\"default\"]\n  }))))));\n}\n\nApp.propTypes = {\n  getDataSucceeded: _propTypes[\"default\"].func.isRequired\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return (0, _redux.bindActionCreators)({\n    getDataSucceeded: _actions.getDataSucceeded\n  }, dispatch);\n}\n\nvar withConnect = (0, _reactRedux.connect)(null, mapDispatchToProps);\n\nvar _default = (0, _redux.compose)(withConnect)(App);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/containers/App/index.js"],"names":["queryClient","QueryClient","App","props","getDataRef","isLoading","hasAdmin","setState","current","getDataSucceeded","authRoutes","routes","map","to","Component","exact","currentToken","auth","getToken","renewToken","method","body","token","data","updateToken","clearAppStorage","window","location","reload","getData","uuid","deviceId","fetch","JSON","stringify","event","headers","strapi","notification","toggle","type","message","id","setHasAdmin","prev","routerProps","Admin","NotFoundPage","propTypes","PropTypes","func","isRequired","mapDispatchToProps","dispatch","withConnect"],"mappings":"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","sourcesContent":["/**\n *\n * App.js\n *\n * This component is the skeleton around the actual pages, and should only\n * contain code that should be seen on all pages. (e.g. navigation bar)\n *\n * NOTE: while this component should technically be a stateless functional\n * component (SFC), hot reloading does not currently support SFCs. If hot\n * reloading is not a neccessity for you then you can refactor it and remove\n * the linting exception.\n */\n\nimport React, { useEffect, useRef, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, compose } from 'redux';\nimport { LoadingIndicatorPage, auth, request } from 'strapi-helper-plugin';\nimport { QueryClientProvider, QueryClient } from 'react-query';\n\nimport GlobalStyle from '../../components/GlobalStyle';\nimport Admin from '../Admin';\nimport AuthPage from '../AuthPage';\nimport NotFoundPage from '../NotFoundPage';\n// eslint-disable-next-line import/no-cycle\nimport NotificationProvider from '../NotificationProvider';\nimport Theme from '../Theme';\nimport { getUID } from './utils';\nimport { Content, Wrapper } from './components';\nimport { getDataSucceeded } from './actions';\nimport NewNotification from '../NewNotification';\nimport PrivateRoute from '../PrivateRoute';\nimport routes from './utils/routes';\nimport { makeUniqueRoutes, createRoute } from '../SettingsPage/utils';\n\nconst queryClient = new QueryClient();\n\nfunction App(props) {\n  const getDataRef = useRef();\n  const [{ isLoading, hasAdmin }, setState] = useState({ isLoading: true, hasAdmin: false });\n  getDataRef.current = props.getDataSucceeded;\n\n  const authRoutes = useMemo(() => {\n    return makeUniqueRoutes(\n      routes.map(({ to, Component, exact }) => createRoute(Component, to, exact))\n    );\n  }, []);\n\n  useEffect(() => {\n    const currentToken = auth.getToken();\n\n    const renewToken = async () => {\n      try {\n        const {\n          data: { token },\n        } = await request('/admin/renew-token', {\n          method: 'POST',\n          body: { token: currentToken },\n        });\n        auth.updateToken(token);\n      } catch (err) {\n        // Refresh app\n        auth.clearAppStorage();\n        window.location.reload();\n      }\n    };\n\n    if (currentToken) {\n      renewToken();\n    }\n  }, []);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const { data } = await request('/admin/init', { method: 'GET' });\n\n        const { uuid } = data;\n\n        if (uuid) {\n          try {\n            const deviceId = await getUID();\n\n            fetch('https://analytics.strapi.io/track', {\n              method: 'POST',\n              body: JSON.stringify({\n                event: 'didInitializeAdministration',\n                uuid,\n                deviceId,\n              }),\n              headers: {\n                'Content-Type': 'application/json',\n              },\n            });\n          } catch (e) {\n            // Silent.\n          }\n        }\n\n        getDataRef.current(data);\n        setState({ isLoading: false, hasAdmin: data.hasAdmin });\n      } catch (err) {\n        strapi.notification.toggle({\n          type: 'warning',\n          message: { id: 'app.containers.App.notification.error.init' },\n        });\n      }\n    };\n\n    getData();\n  }, []);\n\n  const setHasAdmin = hasAdmin => setState(prev => ({ ...prev, hasAdmin }));\n\n  if (isLoading) {\n    return <LoadingIndicatorPage />;\n  }\n\n  return (\n    <Theme>\n      <Wrapper>\n        <GlobalStyle />\n        <QueryClientProvider client={queryClient}>\n          <NotificationProvider />\n          <NewNotification />\n          <Content>\n            <Switch>\n              {authRoutes}\n              <Route\n                path=\"/auth/:authType\"\n                render={routerProps => (\n                  <AuthPage {...routerProps} setHasAdmin={setHasAdmin} hasAdmin={hasAdmin} />\n                )}\n                exact\n              />\n              <PrivateRoute path=\"/\" component={Admin} />\n              <Route path=\"\" component={NotFoundPage} />\n            </Switch>\n          </Content>\n        </QueryClientProvider>\n      </Wrapper>\n    </Theme>\n  );\n}\n\nApp.propTypes = {\n  getDataSucceeded: PropTypes.func.isRequired,\n};\n\nexport function mapDispatchToProps(dispatch) {\n  return bindActionCreators({ getDataSucceeded }, dispatch);\n}\n\nconst withConnect = connect(null, mapDispatchToProps);\n\nexport default compose(withConnect)(App);\nexport { App };\n"]},"metadata":{},"sourceType":"script"}