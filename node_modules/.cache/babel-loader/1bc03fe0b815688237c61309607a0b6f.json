{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _permissions = _interopRequireDefault(require(\"../../../permissions\"));\n\nvar _pluginId = _interopRequireDefault(require(\"../../../pluginId\"));\n\nvar _templateObject;\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar StyledButton = (0, _styledComponents[\"default\"])(_core.Button)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  padding-left: 15px;\\n  padding-right: 15px;\\n\"])));\n\nvar Button = function Button(_ref) {\n  var isTemporary = _ref.isTemporary,\n      isInContentTypeView = _ref.isInContentTypeView,\n      contentTypeKind = _ref.contentTypeKind,\n      targetUid = _ref.targetUid;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push;\n\n  var collectionTypesConfigurations = _permissions[\"default\"].collectionTypesConfigurations,\n      componentsConfigurations = _permissions[\"default\"].componentsConfigurations,\n      singleTypesConfigurations = _permissions[\"default\"].singleTypesConfigurations;\n\n  var icon = /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.LayoutIcon, {\n    className: \"colored\",\n    fill: isTemporary ? '#B4B6BA' : '#007eff'\n  });\n\n  var label = formatMessage({\n    id: 'content-type-builder.form.button.configure-view'\n  });\n  var permissionsToApply = collectionTypesConfigurations;\n\n  var handleClick = function handleClick() {\n    if (isTemporary) {\n      return false;\n    }\n\n    if (isInContentTypeView) {\n      push(\"/plugins/\".concat(_pluginId[\"default\"], \"/collectionType/\").concat(targetUid, \"/configurations/edit\"));\n    } else {\n      push(\"/plugins/\".concat(_pluginId[\"default\"], \"/components/\").concat(targetUid, \"/configurations/edit\"));\n    }\n\n    return false;\n  };\n\n  if (isInContentTypeView && contentTypeKind === 'singleType') {\n    permissionsToApply = singleTypesConfigurations;\n  }\n\n  if (!isInContentTypeView) {\n    permissionsToApply = componentsConfigurations;\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.CheckPermissions, {\n    permissions: permissionsToApply\n  }, /*#__PURE__*/_react[\"default\"].createElement(StyledButton, {\n    icon: icon,\n    label: label,\n    color: \"secondary\",\n    onClick: handleClick,\n    style: {\n      marginTop: '2px'\n    },\n    disabled: isTemporary\n  }));\n};\n\nButton.defaultProps = {\n  contentTypeKind: 'collectionType',\n  isInContentTypeView: true,\n  isTemporary: false,\n  targetUid: ''\n};\nButton.propTypes = {\n  contentTypeKind: _propTypes[\"default\"].string,\n  isInContentTypeView: _propTypes[\"default\"].bool,\n  isTemporary: _propTypes[\"default\"].bool,\n  targetUid: _propTypes[\"default\"].string\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(Button);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/InjectedComponents/ContentTypeBuilder/ConfigureViewButton/index.js"],"names":["StyledButton","Base","Button","isTemporary","isInContentTypeView","contentTypeKind","targetUid","formatMessage","push","collectionTypesConfigurations","pluginPermissions","componentsConfigurations","singleTypesConfigurations","icon","label","id","permissionsToApply","handleClick","pluginId","marginTop","defaultProps","propTypes","PropTypes","string","bool"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,YAAY,GAAG,kCAAOC,YAAP,CAAH,uIAAlB;;AAKA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAsE;AAAA,MAAnEC,WAAmE,QAAnEA,WAAmE;AAAA,MAAtDC,mBAAsD,QAAtDA,mBAAsD;AAAA,MAAjCC,eAAiC,QAAjCA,eAAiC;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AACnF,iBAA0B,yBAA1B;AAAA,MAAQC,aAAR,YAAQA,aAAR;;AACA,oBAAiB,iCAAjB;AAAA,MAAQC,IAAR,eAAQA,IAAR;;AACA,MACEC,6BADF,GAIIC,uBAJJ,CACED,6BADF;AAAA,MAEEE,wBAFF,GAIID,uBAJJ,CAEEC,wBAFF;AAAA,MAGEC,yBAHF,GAIIF,uBAJJ,CAGEE,yBAHF;;AAKA,MAAMC,IAAI,gBAAG,gCAAC,8BAAD;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAgC,IAAA,IAAI,EAAEV,WAAW,GAAG,SAAH,GAAe;AAAhE,IAAb;;AACA,MAAMW,KAAK,GAAGP,aAAa,CAAC;AAAEQ,IAAAA,EAAE,EAAE;AAAN,GAAD,CAA3B;AACA,MAAIC,kBAAkB,GAAGP,6BAAzB;;AAEA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAId,WAAJ,EAAiB;AACf,aAAO,KAAP;AACD;;AAED,QAAIC,mBAAJ,EAAyB;AACvBI,MAAAA,IAAI,oBAAaU,oBAAb,6BAAwCZ,SAAxC,0BAAJ;AACD,KAFD,MAEO;AACLE,MAAAA,IAAI,oBAAaU,oBAAb,yBAAoCZ,SAApC,0BAAJ;AACD;;AAED,WAAO,KAAP;AACD,GAZD;;AAcA,MAAIF,mBAAmB,IAAIC,eAAe,KAAK,YAA/C,EAA6D;AAC3DW,IAAAA,kBAAkB,GAAGJ,yBAArB;AACD;;AAED,MAAI,CAACR,mBAAL,EAA0B;AACxBY,IAAAA,kBAAkB,GAAGL,wBAArB;AACD;;AAED,sBACE,gCAAC,oCAAD;AAAkB,IAAA,WAAW,EAAEK;AAA/B,kBACE,gCAAC,YAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,KAAK,EAAC,WAHR;AAIE,IAAA,OAAO,EAAEG,WAJX;AAKE,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KALT;AAME,IAAA,QAAQ,EAAEhB;AANZ,IADF,CADF;AAYD,CA9CD;;AAgDAD,MAAM,CAACkB,YAAP,GAAsB;AACpBf,EAAAA,eAAe,EAAE,gBADG;AAEpBD,EAAAA,mBAAmB,EAAE,IAFD;AAGpBD,EAAAA,WAAW,EAAE,KAHO;AAIpBG,EAAAA,SAAS,EAAE;AAJS,CAAtB;AAOAJ,MAAM,CAACmB,SAAP,GAAmB;AACjBhB,EAAAA,eAAe,EAAEiB,sBAAUC,MADV;AAEjBnB,EAAAA,mBAAmB,EAAEkB,sBAAUE,IAFd;AAGjBrB,EAAAA,WAAW,EAAEmB,sBAAUE,IAHN;AAIjBlB,EAAAA,SAAS,EAAEgB,sBAAUC;AAJJ,CAAnB;;4BAOe,iBAAKrB,MAAL,C","sourcesContent":["import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { LayoutIcon, CheckPermissions } from 'strapi-helper-plugin';\nimport { Button as Base } from '@buffetjs/core';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport pluginPermissions from '../../../permissions';\nimport pluginId from '../../../pluginId';\n\nconst StyledButton = styled(Base)`\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nconst Button = ({ isTemporary, isInContentTypeView, contentTypeKind, targetUid }) => {\n  const { formatMessage } = useIntl();\n  const { push } = useHistory();\n  const {\n    collectionTypesConfigurations,\n    componentsConfigurations,\n    singleTypesConfigurations,\n  } = pluginPermissions;\n  const icon = <LayoutIcon className=\"colored\" fill={isTemporary ? '#B4B6BA' : '#007eff'} />;\n  const label = formatMessage({ id: 'content-type-builder.form.button.configure-view' });\n  let permissionsToApply = collectionTypesConfigurations;\n\n  const handleClick = () => {\n    if (isTemporary) {\n      return false;\n    }\n\n    if (isInContentTypeView) {\n      push(`/plugins/${pluginId}/collectionType/${targetUid}/configurations/edit`);\n    } else {\n      push(`/plugins/${pluginId}/components/${targetUid}/configurations/edit`);\n    }\n\n    return false;\n  };\n\n  if (isInContentTypeView && contentTypeKind === 'singleType') {\n    permissionsToApply = singleTypesConfigurations;\n  }\n\n  if (!isInContentTypeView) {\n    permissionsToApply = componentsConfigurations;\n  }\n\n  return (\n    <CheckPermissions permissions={permissionsToApply}>\n      <StyledButton\n        icon={icon}\n        label={label}\n        color=\"secondary\"\n        onClick={handleClick}\n        style={{ marginTop: '2px' }}\n        disabled={isTemporary}\n      />\n    </CheckPermissions>\n  );\n};\n\nButton.defaultProps = {\n  contentTypeKind: 'collectionType',\n  isInContentTypeView: true,\n  isTemporary: false,\n  targetUid: '',\n};\n\nButton.propTypes = {\n  contentTypeKind: PropTypes.string,\n  isInContentTypeView: PropTypes.bool,\n  isTemporary: PropTypes.bool,\n  targetUid: PropTypes.string,\n};\n\nexport default memo(Button);\n"]},"metadata":{},"sourceType":"script"}