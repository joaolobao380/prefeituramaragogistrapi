{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"translationMessages\", {\n  enumerable: true,\n  get: function get() {\n    return _translations[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"languageNativeNames\", {\n  enumerable: true,\n  get: function get() {\n    return _translations.languageNativeNames;\n  }\n});\nexports.languages = void 0;\n\nvar _translations = _interopRequireWildcard(require(\"./translations\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * i18n.js\n *\n * This will setup the i18n language files and locale data for your plugin.\n *\n */\n// NOTE TO PLUGINS DEVELOPERS:\n// If you modify this file you also need to update the documentation accordingly\n// Here's the file: strapi/docs/3.0.0-beta.x/admin-panel/customization.md#customize-the-strapi-admin-package\n// IF THE DOC IS NOT UPDATED THE PULL REQUEST WILL NOT BE MERGED\nvar languages = Object.keys(_translations[\"default\"]);\nexports.languages = languages;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/i18n.js"],"names":["languages","Object","keys","translationMessages"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAYA;;;;;;AAZA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA,IAAMA,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYC,wBAAZ,CAAlB","sourcesContent":["/**\n * i18n.js\n *\n * This will setup the i18n language files and locale data for your plugin.\n *\n */\n\n// NOTE TO PLUGINS DEVELOPERS:\n// If you modify this file you also need to update the documentation accordingly\n// Here's the file: strapi/docs/3.0.0-beta.x/admin-panel/customization.md#customize-the-strapi-admin-package\n// IF THE DOC IS NOT UPDATED THE PULL REQUEST WILL NOT BE MERGED\n\nimport translationMessages, { languageNativeNames } from './translations';\n\nconst languages = Object.keys(translationMessages);\n\nexport { languages, translationMessages, languageNativeNames };\n"]},"metadata":{},"sourceType":"script"}