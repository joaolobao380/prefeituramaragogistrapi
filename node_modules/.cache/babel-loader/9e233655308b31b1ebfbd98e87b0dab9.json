{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = checkStore;\n\nvar _conformsTo = _interopRequireDefault(require(\"lodash/conformsTo\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _isObject = _interopRequireDefault(require(\"lodash/isObject\"));\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\n/**\n * Validate the shape of redux store\n */\nfunction checkStore(store) {\n  var shape = {\n    dispatch: _isFunction[\"default\"],\n    subscribe: _isFunction[\"default\"],\n    getState: _isFunction[\"default\"],\n    replaceReducer: _isFunction[\"default\"],\n    runSaga: _isFunction[\"default\"],\n    injectedReducers: _isObject[\"default\"],\n    injectedSagas: _isObject[\"default\"]\n  };\n  (0, _invariant[\"default\"])((0, _conformsTo[\"default\"])(store, shape), '(app/utils...) injectors: Expected a valid redux store');\n}","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/utils/checkStore.js"],"names":["checkStore","store","shape","dispatch","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACe,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AACxC,MAAMC,KAAK,GAAG;AACZC,IAAAA,QAAQ,EAAEC,sBADE;AAEZC,IAAAA,SAAS,EAAED,sBAFC;AAGZE,IAAAA,QAAQ,EAAEF,sBAHE;AAIZG,IAAAA,cAAc,EAAEH,sBAJJ;AAKZI,IAAAA,OAAO,EAAEJ,sBALG;AAMZK,IAAAA,gBAAgB,EAAEC,oBANN;AAOZC,IAAAA,aAAa,EAAED;AAPH,GAAd;AAUA,6BACE,4BAAWT,KAAX,EAAkBC,KAAlB,CADF,EAEE,wDAFF;AAID","sourcesContent":["import conformsTo from 'lodash/conformsTo';\nimport isFunction from 'lodash/isFunction';\nimport isObject from 'lodash/isObject';\nimport invariant from 'invariant';\n\n/**\n * Validate the shape of redux store\n */\nexport default function checkStore(store) {\n  const shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject,\n  };\n\n  invariant(\n    conformsTo(store, shape),\n    '(app/utils...) injectors: Expected a valid redux store',\n  );\n}\n"]},"metadata":{},"sourceType":"script"}