{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _pluginId = _interopRequireDefault(require(\"../../../pluginId\"));\n\nvar getInputProps = function getInputProps(fieldName) {\n  var type;\n\n  switch (fieldName) {\n    case 'description':\n    case 'label':\n    case 'placeholder':\n      type = 'text';\n      break;\n\n    case 'mainField':\n      type = 'select';\n      break;\n\n    case 'editable':\n      type = 'bool';\n      break;\n\n    default:\n      type = '';\n  }\n\n  var labelId = fieldName === 'mainField' ? \"\".concat(_pluginId[\"default\"], \".containers.SettingPage.editSettings.entry.title\") : \"\".concat(_pluginId[\"default\"], \".form.Input.\").concat(fieldName);\n  return {\n    type: type,\n    label: {\n      id: labelId\n    }\n  };\n};\n\nvar _default = getInputProps;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/EditSettingsView/utils/getInputProps.js"],"names":["getInputProps","fieldName","type","labelId","pluginId","label","id"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,SAAS,EAAI;AACjC,MAAIC,IAAJ;;AAEA,UAAQD,SAAR;AACE,SAAK,aAAL;AACA,SAAK,OAAL;AACA,SAAK,aAAL;AACEC,MAAAA,IAAI,GAAG,MAAP;AACA;;AACF,SAAK,WAAL;AACEA,MAAAA,IAAI,GAAG,QAAP;AACA;;AACF,SAAK,UAAL;AACEA,MAAAA,IAAI,GAAG,MAAP;AACA;;AACF;AACEA,MAAAA,IAAI,GAAG,EAAP;AAbJ;;AAgBA,MAAMC,OAAO,GACXF,SAAS,KAAK,WAAd,aACOG,oBADP,kEAEOA,oBAFP,yBAE8BH,SAF9B,CADF;AAKA,SAAO;AAAEC,IAAAA,IAAI,EAAJA,IAAF;AAAQG,IAAAA,KAAK,EAAE;AAAEC,MAAAA,EAAE,EAAEH;AAAN;AAAf,GAAP;AACD,CAzBD;;eA2BeH,a","sourcesContent":["import pluginId from '../../../pluginId';\n\nconst getInputProps = fieldName => {\n  let type;\n\n  switch (fieldName) {\n    case 'description':\n    case 'label':\n    case 'placeholder':\n      type = 'text';\n      break;\n    case 'mainField':\n      type = 'select';\n      break;\n    case 'editable':\n      type = 'bool';\n      break;\n    default:\n      type = '';\n  }\n\n  const labelId =\n    fieldName === 'mainField'\n      ? `${pluginId}.containers.SettingPage.editSettings.entry.title`\n      : `${pluginId}.form.Input.${fieldName}`;\n\n  return { type, label: { id: labelId } };\n};\n\nexport default getInputProps;\n"]},"metadata":{},"sourceType":"script"}