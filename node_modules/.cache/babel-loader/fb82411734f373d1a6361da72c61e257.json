{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.initialState = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _immer = _interopRequireDefault(require(\"immer\"));\n\nvar _constants = require(\"./constants\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  data: [],\n  didDeleteData: false,\n  entriesToDelete: [],\n  isLoading: true,\n  showModalConfirmButtonLoading: false,\n  showWarningDelete: false,\n  showWarningDeleteAll: false,\n  contentType: {},\n  initialDisplayedHeaders: [],\n  displayedHeaders: [],\n  pagination: {\n    total: 0\n  }\n};\nexports.initialState = initialState;\n\nvar listViewReducer = function listViewReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return (// eslint-disable-next-line consistent-return\n    (0, _immer[\"default\"])(state, function (drafState) {\n      switch (action.type) {\n        case _constants.GET_DATA:\n          {\n            return _objectSpread(_objectSpread({}, initialState), {}, {\n              contentType: state.contentType,\n              initialDisplayedHeaders: state.initialDisplayedHeaders,\n              displayedHeaders: state.displayedHeaders\n            });\n          }\n\n        case _constants.GET_DATA_SUCCEEDED:\n          {\n            drafState.pagination = action.pagination;\n            drafState.data = action.data;\n            drafState.isLoading = false;\n            break;\n          }\n\n        case _constants.ON_CHANGE_BULK:\n          {\n            var hasElement = state.entriesToDelete.some(function (el) {\n              return el === action.name;\n            });\n\n            if (hasElement) {\n              drafState.entriesToDelete = drafState.entriesToDelete.filter(function (el) {\n                return el !== action.name;\n              });\n              break;\n            }\n\n            drafState.entriesToDelete.push(action.name);\n            break;\n          }\n\n        case _constants.ON_CHANGE_BULK_SELECT_ALL:\n          {\n            if (state.entriesToDelete.length > 0) {\n              drafState.entriesToDelete = [];\n              break;\n            }\n\n            drafState.data.forEach(function (value) {\n              drafState.entriesToDelete.push(value.id.toString());\n            });\n            break;\n          }\n\n        case _constants.ON_CHANGE_LIST_HEADERS:\n          {\n            var _action$target = action.target,\n                name = _action$target.name,\n                value = _action$target.value;\n\n            if (!value) {\n              var _state$contentType = state.contentType,\n                  metadatas = _state$contentType.metadatas,\n                  attributes = _state$contentType.attributes,\n                  uid = _state$contentType.uid;\n              var metas = metadatas[name].list;\n              var header = {\n                name: name,\n                fieldSchema: attributes[name],\n                metadatas: metas,\n                key: \"__\".concat(name, \"_key__\")\n              };\n\n              if (attributes[name].type === 'relation') {\n                drafState.displayedHeaders.push(_objectSpread(_objectSpread({}, header), {}, {\n                  queryInfos: {\n                    defaultParams: {},\n                    endPoint: \"collection-types/\".concat(uid)\n                  }\n                }));\n              } else {\n                drafState.displayedHeaders.push(header);\n              }\n            } else {\n              drafState.displayedHeaders = state.displayedHeaders.filter(function (header) {\n                return header.name !== name;\n              });\n            }\n\n            break;\n          }\n\n        case _constants.ON_DELETE_DATA_SUCCEEDED:\n          {\n            drafState.didDeleteData = true;\n            drafState.showWarningDelete = false;\n            break;\n          }\n\n        case _constants.ON_DELETE_DATA_ERROR:\n          {\n            drafState.didDeleteData = false;\n            drafState.showWarningDelete = false;\n            break;\n          }\n\n        case _constants.ON_DELETE_SEVERAL_DATA_SUCCEEDED:\n          {\n            drafState.didDeleteData = true;\n            drafState.showWarningDeleteAll = false;\n            break;\n          }\n\n        case _constants.ON_RESET_LIST_HEADERS:\n          {\n            drafState.displayedHeaders = state.initialDisplayedHeaders;\n            break;\n          }\n\n        case _constants.RESET_PROPS:\n          {\n            return initialState;\n          }\n\n        case _constants.SET_MODAL_LOADING_STATE:\n          {\n            drafState.showModalConfirmButtonLoading = true;\n            break;\n          }\n\n        case _constants.TOGGLE_MODAL_DELETE:\n          {\n            drafState.showModalConfirmButtonLoading = false; // Only change this value when the modal is opening\n\n            if (!state.showWarningDelete) {\n              drafState.didDeleteData = false;\n            }\n\n            drafState.entriesToDelete = [];\n            drafState.showWarningDelete = !state.showWarningDelete;\n            break;\n          }\n\n        case _constants.TOGGLE_MODAL_DELETE_ALL:\n          {\n            drafState.showModalConfirmButtonLoading = false; // Only change this value when the modal is closing\n\n            if (!state.showWarningDeleteAll) {\n              drafState.didDeleteData = false;\n            }\n\n            drafState.showWarningDeleteAll = !state.showWarningDeleteAll;\n            break;\n          }\n\n        case _constants.SET_LIST_LAYOUT:\n          {\n            var contentType = action.contentType,\n                displayedHeaders = action.displayedHeaders;\n            drafState.contentType = contentType;\n            drafState.displayedHeaders = displayedHeaders;\n            drafState.initialDisplayedHeaders = displayedHeaders;\n            break;\n          }\n\n        default:\n          return drafState;\n      }\n    })\n  );\n};\n\nvar _default = listViewReducer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/ListView/reducer.js"],"names":["initialState","data","didDeleteData","entriesToDelete","isLoading","showModalConfirmButtonLoading","showWarningDelete","showWarningDeleteAll","contentType","initialDisplayedHeaders","displayedHeaders","pagination","total","listViewReducer","state","action","drafState","type","GET_DATA","GET_DATA_SUCCEEDED","ON_CHANGE_BULK","hasElement","some","el","name","filter","push","ON_CHANGE_BULK_SELECT_ALL","length","forEach","value","id","toString","ON_CHANGE_LIST_HEADERS","target","metadatas","attributes","uid","metas","list","header","fieldSchema","key","queryInfos","defaultParams","endPoint","ON_DELETE_DATA_SUCCEEDED","ON_DELETE_DATA_ERROR","ON_DELETE_SEVERAL_DATA_SUCCEEDED","ON_RESET_LIST_HEADERS","RESET_PROPS","SET_MODAL_LOADING_STATE","TOGGLE_MODAL_DELETE","TOGGLE_MODAL_DELETE_ALL","SET_LIST_LAYOUT"],"mappings":"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","sourcesContent":["/**\n *\n * listView reducer\n */\n\nimport produce from 'immer';\nimport {\n  GET_DATA,\n  GET_DATA_SUCCEEDED,\n  RESET_PROPS,\n  ON_CHANGE_BULK,\n  ON_CHANGE_BULK_SELECT_ALL,\n  ON_DELETE_DATA_ERROR,\n  ON_DELETE_DATA_SUCCEEDED,\n  ON_DELETE_SEVERAL_DATA_SUCCEEDED,\n  TOGGLE_MODAL_DELETE,\n  TOGGLE_MODAL_DELETE_ALL,\n  ON_CHANGE_LIST_HEADERS,\n  ON_RESET_LIST_HEADERS,\n  SET_LIST_LAYOUT,\n  SET_MODAL_LOADING_STATE,\n} from './constants';\n\nexport const initialState = {\n  data: [],\n  didDeleteData: false,\n  entriesToDelete: [],\n  isLoading: true,\n  showModalConfirmButtonLoading: false,\n  showWarningDelete: false,\n  showWarningDeleteAll: false,\n  contentType: {},\n  initialDisplayedHeaders: [],\n  displayedHeaders: [],\n  pagination: {\n    total: 0,\n  },\n};\n\nconst listViewReducer = (state = initialState, action) =>\n  // eslint-disable-next-line consistent-return\n  produce(state, drafState => {\n    switch (action.type) {\n      case GET_DATA: {\n        return {\n          ...initialState,\n          contentType: state.contentType,\n          initialDisplayedHeaders: state.initialDisplayedHeaders,\n          displayedHeaders: state.displayedHeaders,\n        };\n      }\n\n      case GET_DATA_SUCCEEDED: {\n        drafState.pagination = action.pagination;\n        drafState.data = action.data;\n        drafState.isLoading = false;\n        break;\n      }\n      case ON_CHANGE_BULK: {\n        const hasElement = state.entriesToDelete.some(el => el === action.name);\n\n        if (hasElement) {\n          drafState.entriesToDelete = drafState.entriesToDelete.filter(el => el !== action.name);\n          break;\n        }\n\n        drafState.entriesToDelete.push(action.name);\n        break;\n      }\n      case ON_CHANGE_BULK_SELECT_ALL: {\n        if (state.entriesToDelete.length > 0) {\n          drafState.entriesToDelete = [];\n\n          break;\n        }\n\n        drafState.data.forEach(value => {\n          drafState.entriesToDelete.push(value.id.toString());\n        });\n\n        break;\n      }\n\n      case ON_CHANGE_LIST_HEADERS: {\n        const {\n          target: { name, value },\n        } = action;\n\n        if (!value) {\n          const { metadatas, attributes, uid } = state.contentType;\n          const metas = metadatas[name].list;\n          const header = {\n            name,\n            fieldSchema: attributes[name],\n            metadatas: metas,\n            key: `__${name}_key__`,\n          };\n\n          if (attributes[name].type === 'relation') {\n            drafState.displayedHeaders.push({\n              ...header,\n              queryInfos: {\n                defaultParams: {},\n                endPoint: `collection-types/${uid}`,\n              },\n            });\n          } else {\n            drafState.displayedHeaders.push(header);\n          }\n        } else {\n          drafState.displayedHeaders = state.displayedHeaders.filter(\n            header => header.name !== name\n          );\n        }\n\n        break;\n      }\n      case ON_DELETE_DATA_SUCCEEDED: {\n        drafState.didDeleteData = true;\n        drafState.showWarningDelete = false;\n        break;\n      }\n      case ON_DELETE_DATA_ERROR: {\n        drafState.didDeleteData = false;\n        drafState.showWarningDelete = false;\n        break;\n      }\n      case ON_DELETE_SEVERAL_DATA_SUCCEEDED: {\n        drafState.didDeleteData = true;\n        drafState.showWarningDeleteAll = false;\n        break;\n      }\n      case ON_RESET_LIST_HEADERS: {\n        drafState.displayedHeaders = state.initialDisplayedHeaders;\n        break;\n      }\n      case RESET_PROPS: {\n        return initialState;\n      }\n      case SET_MODAL_LOADING_STATE: {\n        drafState.showModalConfirmButtonLoading = true;\n        break;\n      }\n      case TOGGLE_MODAL_DELETE: {\n        drafState.showModalConfirmButtonLoading = false;\n\n        // Only change this value when the modal is opening\n        if (!state.showWarningDelete) {\n          drafState.didDeleteData = false;\n        }\n\n        drafState.entriesToDelete = [];\n        drafState.showWarningDelete = !state.showWarningDelete;\n\n        break;\n      }\n      case TOGGLE_MODAL_DELETE_ALL: {\n        drafState.showModalConfirmButtonLoading = false;\n\n        // Only change this value when the modal is closing\n        if (!state.showWarningDeleteAll) {\n          drafState.didDeleteData = false;\n        }\n\n        drafState.showWarningDeleteAll = !state.showWarningDeleteAll;\n        break;\n      }\n      case SET_LIST_LAYOUT: {\n        const { contentType, displayedHeaders } = action;\n\n        drafState.contentType = contentType;\n        drafState.displayedHeaders = displayedHeaders;\n        drafState.initialDisplayedHeaders = displayedHeaders;\n\n        break;\n      }\n      default:\n        return drafState;\n    }\n  });\n\nexport default listViewReducer;\n"]},"metadata":{},"sourceType":"script"}