{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar EventRow = function EventRow(_ref) {\n  var disabledEvents = _ref.disabledEvents,\n      name = _ref.name,\n      events = _ref.events,\n      inputValue = _ref.inputValue,\n      handleChange = _ref.handleChange,\n      handleChangeAll = _ref.handleChangeAll;\n  var enabledCheckboxes = events.filter(function (event) {\n    return !disabledEvents.includes(event);\n  });\n  var areAllCheckboxesSelected = inputValue.length === enabledCheckboxes.length;\n  var hasSomeCheckboxSelected = inputValue.length > 0;\n\n  var onChangeAll = function onChangeAll(_ref2) {\n    var name = _ref2.target.name;\n    var valueToSet = !areAllCheckboxesSelected;\n    handleChangeAll({\n      target: {\n        name: name,\n        value: valueToSet\n      }\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(\"tr\", null, /*#__PURE__*/_react[\"default\"].createElement(\"td\", null, /*#__PURE__*/_react[\"default\"].createElement(_core.Checkbox, {\n    name: name,\n    onChange: onChangeAll,\n    message: name,\n    someChecked: hasSomeCheckboxSelected && !areAllCheckboxesSelected,\n    value: areAllCheckboxesSelected\n  })), events.map(function (event) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"td\", {\n      key: event\n    }, /*#__PURE__*/_react[\"default\"].createElement(_core.Checkbox, {\n      disabled: disabledEvents.includes(event),\n      name: event,\n      value: inputValue.includes(event),\n      onChange: handleChange\n    }));\n  }));\n};\n\nEventRow.defaultProps = {\n  disabledEvents: [],\n  events: [],\n  inputValue: [],\n  handleChange: function handleChange() {},\n  handleChangeAll: function handleChangeAll() {}\n};\nEventRow.propTypes = {\n  disabledEvents: _propTypes[\"default\"].array,\n  events: _propTypes[\"default\"].array,\n  inputValue: _propTypes[\"default\"].array,\n  handleChange: _propTypes[\"default\"].func,\n  handleChangeAll: _propTypes[\"default\"].func,\n  name: _propTypes[\"default\"].string.isRequired\n};\nvar _default = EventRow;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/components/Webhooks/EventInput/EventRow.js"],"names":["EventRow","disabledEvents","name","events","inputValue","handleChange","handleChangeAll","enabledCheckboxes","filter","event","includes","areAllCheckboxesSelected","length","hasSomeCheckboxSelected","onChangeAll","target","valueToSet","value","map","defaultProps","propTypes","PropTypes","array","func","string","isRequired"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,OAAiF;AAAA,MAA9EC,cAA8E,QAA9EA,cAA8E;AAAA,MAA9DC,IAA8D,QAA9DA,IAA8D;AAAA,MAAxDC,MAAwD,QAAxDA,MAAwD;AAAA,MAAhDC,UAAgD,QAAhDA,UAAgD;AAAA,MAApCC,YAAoC,QAApCA,YAAoC;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;AAChG,MAAMC,iBAAiB,GAAGJ,MAAM,CAACK,MAAP,CAAc,UAAAC,KAAK,EAAI;AAC/C,WAAO,CAACR,cAAc,CAACS,QAAf,CAAwBD,KAAxB,CAAR;AACD,GAFyB,CAA1B;AAIA,MAAME,wBAAwB,GAAGP,UAAU,CAACQ,MAAX,KAAsBL,iBAAiB,CAACK,MAAzE;AACA,MAAMC,uBAAuB,GAAGT,UAAU,CAACQ,MAAX,GAAoB,CAApD;;AAEA,MAAME,WAAW,GAAG,SAAdA,WAAc,QAA0B;AAAA,QAAbZ,IAAa,SAAvBa,MAAuB,CAAbb,IAAa;AAC5C,QAAMc,UAAU,GAAG,CAACL,wBAApB;AAEAL,IAAAA,eAAe,CAAC;AACdS,MAAAA,MAAM,EAAE;AAAEb,QAAAA,IAAI,EAAJA,IAAF;AAAQe,QAAAA,KAAK,EAAED;AAAf;AADM,KAAD,CAAf;AAGD,GAND;;AAQA,sBACE,yDACE,yDACE,gCAAC,cAAD;AACE,IAAA,IAAI,EAAEd,IADR;AAEE,IAAA,QAAQ,EAAEY,WAFZ;AAGE,IAAA,OAAO,EAAEZ,IAHX;AAIE,IAAA,WAAW,EAAEW,uBAAuB,IAAI,CAACF,wBAJ3C;AAKE,IAAA,KAAK,EAAEA;AALT,IADF,CADF,EAWGR,MAAM,CAACe,GAAP,CAAW,UAAAT,KAAK,EAAI;AACnB,wBACE;AAAI,MAAA,GAAG,EAAEA;AAAT,oBACE,gCAAC,cAAD;AACE,MAAA,QAAQ,EAAER,cAAc,CAACS,QAAf,CAAwBD,KAAxB,CADZ;AAEE,MAAA,IAAI,EAAEA,KAFR;AAGE,MAAA,KAAK,EAAEL,UAAU,CAACM,QAAX,CAAoBD,KAApB,CAHT;AAIE,MAAA,QAAQ,EAAEJ;AAJZ,MADF,CADF;AAUD,GAXA,CAXH,CADF;AA0BD,CA1CD;;AA4CAL,QAAQ,CAACmB,YAAT,GAAwB;AACtBlB,EAAAA,cAAc,EAAE,EADM;AAEtBE,EAAAA,MAAM,EAAE,EAFc;AAGtBC,EAAAA,UAAU,EAAE,EAHU;AAItBC,EAAAA,YAAY,EAAE,wBAAM,CAAE,CAJA;AAKtBC,EAAAA,eAAe,EAAE,2BAAM,CAAE;AALH,CAAxB;AAQAN,QAAQ,CAACoB,SAAT,GAAqB;AACnBnB,EAAAA,cAAc,EAAEoB,sBAAUC,KADP;AAEnBnB,EAAAA,MAAM,EAAEkB,sBAAUC,KAFC;AAGnBlB,EAAAA,UAAU,EAAEiB,sBAAUC,KAHH;AAInBjB,EAAAA,YAAY,EAAEgB,sBAAUE,IAJL;AAKnBjB,EAAAA,eAAe,EAAEe,sBAAUE,IALR;AAMnBrB,EAAAA,IAAI,EAAEmB,sBAAUG,MAAV,CAAiBC;AANJ,CAArB;eASezB,Q","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from '@buffetjs/core';\n\nconst EventRow = ({ disabledEvents, name, events, inputValue, handleChange, handleChangeAll }) => {\n  const enabledCheckboxes = events.filter(event => {\n    return !disabledEvents.includes(event);\n  });\n\n  const areAllCheckboxesSelected = inputValue.length === enabledCheckboxes.length;\n  const hasSomeCheckboxSelected = inputValue.length > 0;\n\n  const onChangeAll = ({ target: { name } }) => {\n    const valueToSet = !areAllCheckboxesSelected;\n\n    handleChangeAll({\n      target: { name, value: valueToSet },\n    });\n  };\n\n  return (\n    <tr>\n      <td>\n        <Checkbox\n          name={name}\n          onChange={onChangeAll}\n          message={name}\n          someChecked={hasSomeCheckboxSelected && !areAllCheckboxesSelected}\n          value={areAllCheckboxesSelected}\n        />\n      </td>\n\n      {events.map(event => {\n        return (\n          <td key={event}>\n            <Checkbox\n              disabled={disabledEvents.includes(event)}\n              name={event}\n              value={inputValue.includes(event)}\n              onChange={handleChange}\n            />\n          </td>\n        );\n      })}\n    </tr>\n  );\n};\n\nEventRow.defaultProps = {\n  disabledEvents: [],\n  events: [],\n  inputValue: [],\n  handleChange: () => {},\n  handleChangeAll: () => {},\n};\n\nEventRow.propTypes = {\n  disabledEvents: PropTypes.array,\n  events: PropTypes.array,\n  inputValue: PropTypes.array,\n  handleChange: PropTypes.func,\n  handleChangeAll: PropTypes.func,\n  name: PropTypes.string.isRequired,\n};\n\nexport default EventRow;\n"]},"metadata":{},"sourceType":"script"}