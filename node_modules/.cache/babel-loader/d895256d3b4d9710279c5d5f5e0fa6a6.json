{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _formik = require(\"formik\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _SettingsPageTitle = _interopRequireDefault(require(\"../../../components/SettingsPageTitle\"));\n\nvar _ContainerFluid = _interopRequireDefault(require(\"../../../components/ContainerFluid\"));\n\nvar _Roles = require(\"../../../components/Roles\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _schema = _interopRequireDefault(require(\"./utils/schema\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar EditPage = function EditPage() {\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      emitEvent = _useGlobalContext.emitEvent,\n      settingsBaseURL = _useGlobalContext.settingsBaseURL;\n\n  var _useRouteMatch = (0, _reactRouterDom.useRouteMatch)(\"\".concat(settingsBaseURL, \"/roles/:id\")),\n      id = _useRouteMatch.params.id;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isSubmiting = _useState2[0],\n      setIsSubmiting = _useState2[1];\n\n  var permissionsRef = (0, _react.useRef)();\n\n  var _useFetchPermissionsL = (0, _hooks.useFetchPermissionsLayout)(id),\n      isLayoutLoading = _useFetchPermissionsL.isLoading,\n      permissionsLayout = _useFetchPermissionsL.data;\n\n  var _useFetchRole = (0, _hooks.useFetchRole)(id),\n      role = _useFetchRole.role,\n      rolePermissions = _useFetchRole.permissions,\n      isRoleLoading = _useFetchRole.isLoading,\n      onSubmitSucceeded = _useFetchRole.onSubmitSucceeded;\n  /* eslint-disable indent */\n\n\n  var headerActions = function headerActions(handleSubmit, handleReset) {\n    return isLayoutLoading && isRoleLoading ? [] : [{\n      label: formatMessage({\n        id: 'app.components.Button.reset',\n        defaultMessage: 'Reset'\n      }),\n      disabled: role.code === 'strapi-super-admin',\n      onClick: function onClick() {\n        handleReset();\n        permissionsRef.current.resetForm();\n      },\n      color: 'cancel',\n      type: 'button'\n    }, {\n      label: formatMessage({\n        id: 'app.components.Button.save',\n        defaultMessage: 'Save'\n      }),\n      disabled: role.code === 'strapi-super-admin',\n      onClick: handleSubmit,\n      color: 'success',\n      type: 'submit',\n      isLoading: isSubmiting\n    }];\n  };\n  /* eslint-enable indent */\n\n\n  var handleEditRoleSubmit = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(data) {\n      var _permissionsRef$curre, permissionsToSend, didUpdateConditions, errorMessage, message;\n\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              strapi.lockAppWithOverlay();\n              setIsSubmiting(true);\n              _permissionsRef$curre = permissionsRef.current.getPermissions(), permissionsToSend = _permissionsRef$curre.permissionsToSend, didUpdateConditions = _permissionsRef$curre.didUpdateConditions;\n              _context.next = 6;\n              return (0, _strapiHelperPlugin.request)(\"/admin/roles/\".concat(id), {\n                method: 'PUT',\n                body: data\n              });\n\n            case 6:\n              if (!(role.code !== 'strapi-super-admin')) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 9;\n              return (0, _strapiHelperPlugin.request)(\"/admin/roles/\".concat(id, \"/permissions\"), {\n                method: 'PUT',\n                body: {\n                  permissions: permissionsToSend\n                }\n              });\n\n            case 9:\n              if (didUpdateConditions) {\n                emitEvent('didUpdateConditions');\n              }\n\n            case 10:\n              permissionsRef.current.setFormAfterSubmit();\n              onSubmitSucceeded({\n                name: data.name,\n                description: data.description\n              });\n              strapi.notification.toggle({\n                type: 'success',\n                message: {\n                  id: 'notification.success.saved'\n                }\n              });\n              _context.next = 21;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0.response);\n              errorMessage = (0, _get[\"default\"])(_context.t0, 'response.payload.message', 'An error occured');\n              message = (0, _get[\"default\"])(_context.t0, 'response.payload.data.permissions[0]', errorMessage);\n              strapi.notification.toggle({\n                type: 'warning',\n                message: message\n              });\n\n            case 21:\n              _context.prev = 21;\n              setIsSubmiting(false);\n              strapi.unlockApp();\n              return _context.finish(21);\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 15, 21, 25]]);\n    }));\n\n    return function handleEditRoleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var isFormDisabled = role.code === 'strapi-super-admin';\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_SettingsPageTitle[\"default\"], {\n    name: \"Roles\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_formik.Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      name: role.name,\n      description: role.description\n    },\n    onSubmit: handleEditRoleSubmit,\n    validationSchema: _schema[\"default\"],\n    validateOnChange: false\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values,\n        errors = _ref2.errors,\n        handleReset = _ref2.handleReset,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur;\n    return /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/_react[\"default\"].createElement(_ContainerFluid[\"default\"], {\n      padding: \"0\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_custom.Header, {\n      title: {\n        label: formatMessage({\n          id: 'Settings.roles.edit.title',\n          defaultMessage: 'Edit a role'\n        })\n      },\n      content: formatMessage({\n        id: 'Settings.roles.create.description',\n        defaultMessage: 'Define the rights given to the role'\n      }),\n      actions: headerActions(handleSubmit, handleReset),\n      isLoading: isLayoutLoading || isRoleLoading\n    }), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.BaselineAlignment, {\n      top: true,\n      size: \"3px\"\n    }), /*#__PURE__*/_react[\"default\"].createElement(_Roles.RoleForm, {\n      isLoading: isRoleLoading,\n      disabled: isFormDisabled,\n      errors: errors,\n      values: values,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      role: role\n    }), !isLayoutLoading && !isRoleLoading && /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n      top: true,\n      bottom: true,\n      size: \"md\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Roles.Permissions, {\n      isFormDisabled: isFormDisabled,\n      permissions: rolePermissions,\n      ref: permissionsRef,\n      layout: permissionsLayout\n    }))));\n  }));\n};\n\nvar _default = EditPage;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/containers/Roles/EditPage/index.js"],"names":["EditPage","formatMessage","emitEvent","settingsBaseURL","id","params","isSubmiting","setIsSubmiting","permissionsRef","isLayoutLoading","isLoading","permissionsLayout","data","role","rolePermissions","permissions","isRoleLoading","onSubmitSucceeded","headerActions","handleSubmit","handleReset","label","defaultMessage","disabled","code","onClick","current","resetForm","color","type","handleEditRoleSubmit","strapi","lockAppWithOverlay","getPermissions","permissionsToSend","didUpdateConditions","method","body","setFormAfterSubmit","name","description","notification","toggle","message","console","error","response","errorMessage","unlockApp","isFormDisabled","schema","values","errors","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport get from 'lodash/get';\nimport { BaselineAlignment, useGlobalContext, request } from 'strapi-helper-plugin';\nimport { Header } from '@buffetjs/custom';\nimport { Padded } from '@buffetjs/core';\nimport { Formik } from 'formik';\nimport { useIntl } from 'react-intl';\nimport PageTitle from '../../../components/SettingsPageTitle';\nimport ContainerFluid from '../../../components/ContainerFluid';\nimport { Permissions, RoleForm } from '../../../components/Roles';\nimport { useFetchRole, useFetchPermissionsLayout } from '../../../hooks';\nimport schema from './utils/schema';\n\nconst EditPage = () => {\n  const { formatMessage } = useIntl();\n  const { emitEvent, settingsBaseURL } = useGlobalContext();\n  const {\n    params: { id },\n  } = useRouteMatch(`${settingsBaseURL}/roles/:id`);\n  const [isSubmiting, setIsSubmiting] = useState(false);\n  const permissionsRef = useRef();\n\n  const { isLoading: isLayoutLoading, data: permissionsLayout } = useFetchPermissionsLayout(id);\n  const {\n    role,\n    permissions: rolePermissions,\n    isLoading: isRoleLoading,\n    onSubmitSucceeded,\n  } = useFetchRole(id);\n\n  /* eslint-disable indent */\n  const headerActions = (handleSubmit, handleReset) =>\n    isLayoutLoading && isRoleLoading\n      ? []\n      : [\n          {\n            label: formatMessage({\n              id: 'app.components.Button.reset',\n              defaultMessage: 'Reset',\n            }),\n            disabled: role.code === 'strapi-super-admin',\n            onClick: () => {\n              handleReset();\n              permissionsRef.current.resetForm();\n            },\n            color: 'cancel',\n            type: 'button',\n          },\n          {\n            label: formatMessage({\n              id: 'app.components.Button.save',\n              defaultMessage: 'Save',\n            }),\n            disabled: role.code === 'strapi-super-admin',\n            onClick: handleSubmit,\n            color: 'success',\n            type: 'submit',\n            isLoading: isSubmiting,\n          },\n        ];\n  /* eslint-enable indent */\n\n  const handleEditRoleSubmit = async data => {\n    try {\n      strapi.lockAppWithOverlay();\n      setIsSubmiting(true);\n\n      const { permissionsToSend, didUpdateConditions } = permissionsRef.current.getPermissions();\n\n      await request(`/admin/roles/${id}`, {\n        method: 'PUT',\n        body: data,\n      });\n\n      if (role.code !== 'strapi-super-admin') {\n        await request(`/admin/roles/${id}/permissions`, {\n          method: 'PUT',\n          body: {\n            permissions: permissionsToSend,\n          },\n        });\n\n        if (didUpdateConditions) {\n          emitEvent('didUpdateConditions');\n        }\n      }\n\n      permissionsRef.current.setFormAfterSubmit();\n      onSubmitSucceeded({ name: data.name, description: data.description });\n\n      strapi.notification.toggle({\n        type: 'success',\n        message: { id: 'notification.success.saved' },\n      });\n    } catch (err) {\n      console.error(err.response);\n\n      const errorMessage = get(err, 'response.payload.message', 'An error occured');\n      const message = get(err, 'response.payload.data.permissions[0]', errorMessage);\n\n      strapi.notification.toggle({\n        type: 'warning',\n        message,\n      });\n    } finally {\n      setIsSubmiting(false);\n      strapi.unlockApp();\n    }\n  };\n\n  const isFormDisabled = role.code === 'strapi-super-admin';\n\n  return (\n    <>\n      <PageTitle name=\"Roles\" />\n      <Formik\n        enableReinitialize\n        initialValues={{\n          name: role.name,\n          description: role.description,\n        }}\n        onSubmit={handleEditRoleSubmit}\n        validationSchema={schema}\n        validateOnChange={false}\n      >\n        {({ handleSubmit, values, errors, handleReset, handleChange, handleBlur }) => (\n          <form onSubmit={handleSubmit}>\n            <ContainerFluid padding=\"0\">\n              <Header\n                title={{\n                  label: formatMessage({\n                    id: 'Settings.roles.edit.title',\n                    defaultMessage: 'Edit a role',\n                  }),\n                }}\n                content={formatMessage({\n                  id: 'Settings.roles.create.description',\n                  defaultMessage: 'Define the rights given to the role',\n                })}\n                actions={headerActions(handleSubmit, handleReset)}\n                isLoading={isLayoutLoading || isRoleLoading}\n              />\n              <BaselineAlignment top size=\"3px\" />\n              <RoleForm\n                isLoading={isRoleLoading}\n                disabled={isFormDisabled}\n                errors={errors}\n                values={values}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                role={role}\n              />\n              {!isLayoutLoading && !isRoleLoading && (\n                <Padded top bottom size=\"md\">\n                  <Permissions\n                    isFormDisabled={isFormDisabled}\n                    permissions={rolePermissions}\n                    ref={permissionsRef}\n                    layout={permissionsLayout}\n                  />\n                </Padded>\n              )}\n            </ContainerFluid>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default EditPage;\n"]},"metadata":{},"sourceType":"script"}