{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _immutable = require(\"immutable\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _lodash = require(\"lodash\");\n\nfunction init(initialState, _ref) {\n  var name = _ref.name,\n      type = _ref.type,\n      options = _ref.options;\n\n  // Create the first filter\n  var _getFilterType = (0, _strapiHelperPlugin.getFilterType)(type),\n      _getFilterType2 = (0, _slicedToArray2[\"default\"])(_getFilterType, 1),\n      filter = _getFilterType2[0];\n\n  var value = '';\n\n  if (type === 'boolean') {\n    value = 'true';\n  } else if (type === 'number') {\n    value = 0;\n  } else if (type === 'enumeration') {\n    value = (0, _lodash.get)(options, [0], '');\n  }\n\n  var initialFilter = {\n    name: name,\n    filter: filter.value,\n    value: value\n  };\n  return initialState.update('initialData', function () {\n    return (0, _immutable.fromJS)([initialFilter]);\n  }).update('modifiedData', function () {\n    return (0, _immutable.fromJS)([initialFilter]);\n  });\n}\n\nvar _default = init;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/components/FilterPicker/init.js"],"names":["init","initialState","name","type","options","filter","value","initialFilter","update"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,SAASA,IAAT,CAAcC,YAAd,QAAqD;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AACnD;AACA,uBAAiB,uCAAcD,IAAd,CAAjB;AAAA;AAAA,MAAOE,MAAP;;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAIH,IAAI,KAAK,SAAb,EAAwB;AACtBG,IAAAA,KAAK,GAAG,MAAR;AACD,GAFD,MAEO,IAAIH,IAAI,KAAK,QAAb,EAAuB;AAC5BG,IAAAA,KAAK,GAAG,CAAR;AACD,GAFM,MAEA,IAAIH,IAAI,KAAK,aAAb,EAA4B;AACjCG,IAAAA,KAAK,GAAG,iBAAIF,OAAJ,EAAa,CAAC,CAAD,CAAb,EAAkB,EAAlB,CAAR;AACD;;AAED,MAAMG,aAAa,GAAG;AAAEL,IAAAA,IAAI,EAAJA,IAAF;AAAQG,IAAAA,MAAM,EAAEA,MAAM,CAACC,KAAvB;AAA8BA,IAAAA,KAAK,EAALA;AAA9B,GAAtB;AAEA,SAAOL,YAAY,CAChBO,MADI,CACG,aADH,EACkB;AAAA,WAAM,uBAAO,CAACD,aAAD,CAAP,CAAN;AAAA,GADlB,EAEJC,MAFI,CAEG,cAFH,EAEmB;AAAA,WAAM,uBAAO,CAACD,aAAD,CAAP,CAAN;AAAA,GAFnB,CAAP;AAGD;;eAEcP,I","sourcesContent":["import { fromJS } from 'immutable';\nimport { getFilterType } from 'strapi-helper-plugin';\nimport { get } from 'lodash';\n\nfunction init(initialState, { name, type, options }) {\n  // Create the first filter\n  const [filter] = getFilterType(type);\n  let value = '';\n\n  if (type === 'boolean') {\n    value = 'true';\n  } else if (type === 'number') {\n    value = 0;\n  } else if (type === 'enumeration') {\n    value = get(options, [0], '');\n  }\n\n  const initialFilter = { name, filter: filter.value, value };\n\n  return initialState\n    .update('initialData', () => fromJS([initialFilter]))\n    .update('modifiedData', () => fromJS([initialFilter]));\n}\n\nexport default init;\n"]},"metadata":{},"sourceType":"script"}