{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialState = exports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _immutable = require(\"immutable\");\n\nvar initialState = (0, _immutable.fromJS)({\n  isLoading: true,\n  initialData: {\n    responsiveDimensions: true,\n    sizeOptimization: true,\n    autoOrientation: false,\n    videoPreview: false\n  },\n  modifiedData: {\n    responsiveDimensions: true,\n    sizeOptimization: true,\n    autoOrientation: false,\n    videoPreview: false\n  }\n});\nexports.initialState = initialState;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'CANCEL_CHANGES':\n      return state.update('modifiedData', function () {\n        return state.get('initialData');\n      });\n\n    case 'GET_DATA_SUCCEEDED':\n      return state.update('isLoading', function () {\n        return false;\n      }).update('initialData', function () {\n        return (0, _immutable.fromJS)(action.data);\n      }).update('modifiedData', function () {\n        return (0, _immutable.fromJS)(action.data);\n      });\n\n    case 'ON_CHANGE':\n      return state.updateIn(['modifiedData'].concat((0, _toConsumableArray2[\"default\"])(action.keys.split('.'))), function () {\n        return action.value;\n      });\n\n    case 'SUBMIT_SUCCEEDED':\n      return state.update('initialData', function () {\n        return state.get('modifiedData');\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar _default = reducer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/containers/SettingsPage/reducer.js"],"names":["initialState","isLoading","initialData","responsiveDimensions","sizeOptimization","autoOrientation","videoPreview","modifiedData","reducer","state","action","type","update","get","data","updateIn","keys","split","value"],"mappings":";;;;;;;;;;;AAAA;;AAEA,IAAMA,YAAY,GAAG,uBAAO;AAC1BC,EAAAA,SAAS,EAAE,IADe;AAE1BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,oBAAoB,EAAE,IADX;AAEXC,IAAAA,gBAAgB,EAAE,IAFP;AAGXC,IAAAA,eAAe,EAAE,KAHN;AAIXC,IAAAA,YAAY,EAAE;AAJH,GAFa;AAQ1BC,EAAAA,YAAY,EAAE;AACZJ,IAAAA,oBAAoB,EAAE,IADV;AAEZC,IAAAA,gBAAgB,EAAE,IAFN;AAGZC,IAAAA,eAAe,EAAE,KAHL;AAIZC,IAAAA,YAAY,EAAE;AAJF;AARY,CAAP,CAArB;;;AAgBA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAOF,KAAK,CAACG,MAAN,CAAa,cAAb,EAA6B;AAAA,eAAMH,KAAK,CAACI,GAAN,CAAU,aAAV,CAAN;AAAA,OAA7B,CAAP;;AACF,SAAK,oBAAL;AACE,aAAOJ,KAAK,CACTG,MADI,CACG,WADH,EACgB;AAAA,eAAM,KAAN;AAAA,OADhB,EAEJA,MAFI,CAEG,aAFH,EAEkB;AAAA,eAAM,uBAAOF,MAAM,CAACI,IAAd,CAAN;AAAA,OAFlB,EAGJF,MAHI,CAGG,cAHH,EAGmB;AAAA,eAAM,uBAAOF,MAAM,CAACI,IAAd,CAAN;AAAA,OAHnB,CAAP;;AAIF,SAAK,WAAL;AACE,aAAOL,KAAK,CAACM,QAAN,EAAgB,cAAhB,6CAAmCL,MAAM,CAACM,IAAP,CAAYC,KAAZ,CAAkB,GAAlB,CAAnC,IAA4D;AAAA,eAAMP,MAAM,CAACQ,KAAb;AAAA,OAA5D,CAAP;;AACF,SAAK,kBAAL;AACE,aAAOT,KAAK,CAACG,MAAN,CAAa,aAAb,EAA4B;AAAA,eAAMH,KAAK,CAACI,GAAN,CAAU,cAAV,CAAN;AAAA,OAA5B,CAAP;;AACF;AACE,aAAOJ,KAAP;AAbJ;AAeD,CAhBD;;eAkBeD,O","sourcesContent":["import { fromJS } from 'immutable';\n\nconst initialState = fromJS({\n  isLoading: true,\n  initialData: {\n    responsiveDimensions: true,\n    sizeOptimization: true,\n    autoOrientation: false,\n    videoPreview: false,\n  },\n  modifiedData: {\n    responsiveDimensions: true,\n    sizeOptimization: true,\n    autoOrientation: false,\n    videoPreview: false,\n  },\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CANCEL_CHANGES':\n      return state.update('modifiedData', () => state.get('initialData'));\n    case 'GET_DATA_SUCCEEDED':\n      return state\n        .update('isLoading', () => false)\n        .update('initialData', () => fromJS(action.data))\n        .update('modifiedData', () => fromJS(action.data));\n    case 'ON_CHANGE':\n      return state.updateIn(['modifiedData', ...action.keys.split('.')], () => action.value);\n    case 'SUBMIT_SUCCEEDED':\n      return state.update('initialData', () => state.get('modifiedData'));\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\nexport { initialState };\n"]},"metadata":{},"sourceType":"script"}