{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _package = _interopRequireDefault(require(\"../../package.json\"));\n\nvar _logo = _interopRequireDefault(require(\"./assets/images/logo.svg\"));\n\nvar _permissions = _interopRequireDefault(require(\"./permissions\"));\n\nvar _App = _interopRequireDefault(require(\"./containers/App\"));\n\nvar _Initializer = _interopRequireDefault(require(\"./containers/Initializer\"));\n\nvar _SettingsPage = _interopRequireDefault(require(\"./containers/SettingsPage\"));\n\nvar _InputMedia = _interopRequireDefault(require(\"./components/InputMedia\"));\n\nvar _InputModalStepper = _interopRequireDefault(require(\"./containers/InputModalStepper\"));\n\nvar _translations = _interopRequireDefault(require(\"./translations\"));\n\nvar _pluginId = _interopRequireDefault(require(\"./pluginId\"));\n\nvar _utils = require(\"./utils\");\n\n// NOTE TO PLUGINS DEVELOPERS:\n// If you modify this file by adding new options to the plugin entry point\n// Here's the file: strapi/docs/3.0.0-beta.x/plugin-development/frontend-field-api.md\n// Here's the file: strapi/docs/3.0.0-beta.x/guides/registering-a-field-in-admin.md\n// Also the strapi-generate-plugins/files/admin/src/index.js needs to be updated\n// IF THE DOC IS NOT UPDATED THE PULL REQUEST WILL NOT BE MERGED\nvar _default = function _default(strapi) {\n  var pluginDescription = _package[\"default\"].strapi.description || _package[\"default\"].description;\n  var icon = _package[\"default\"].strapi.icon;\n  var name = _package[\"default\"].strapi.name;\n  var plugin = {\n    blockerComponent: null,\n    blockerComponentProps: {},\n    description: pluginDescription,\n    fileModel: null,\n    icon: icon,\n    id: _pluginId[\"default\"],\n    initializer: _Initializer[\"default\"],\n    injectedComponents: [],\n    isReady: false,\n    isRequired: _package[\"default\"].strapi.required || false,\n    layout: null,\n    lifecycles: null,\n    mainComponent: _App[\"default\"],\n    name: name,\n    pluginLogo: _logo[\"default\"],\n    preventComponentRendering: false,\n    settings: {\n      global: {\n        links: [{\n          title: {\n            id: (0, _utils.getTrad)('plugin.name'),\n            defaultMessage: 'Media Library'\n          },\n          name: 'media-library',\n          to: \"\".concat(strapi.settingsBaseURL, \"/media-library\"),\n          Component: function Component() {\n            return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.CheckPagePermissions, {\n              permissions: _permissions[\"default\"].settings\n            }, /*#__PURE__*/_react[\"default\"].createElement(_SettingsPage[\"default\"], null));\n          },\n          permissions: _permissions[\"default\"].settings\n        }]\n      }\n    },\n    trads: _translations[\"default\"],\n    menu: {\n      pluginsSectionLinks: [{\n        destination: \"/plugins/\".concat(_pluginId[\"default\"]),\n        icon: icon,\n        label: {\n          id: \"\".concat(_pluginId[\"default\"], \".plugin.name\"),\n          defaultMessage: 'Media Library'\n        },\n        name: name,\n        permissions: _permissions[\"default\"].main\n      }]\n    }\n  };\n  strapi.registerComponent({\n    name: 'media-library',\n    Component: _InputModalStepper[\"default\"]\n  });\n  strapi.registerField({\n    type: 'media',\n    Component: _InputMedia[\"default\"]\n  });\n  return strapi.registerPlugin(plugin);\n};\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/index.js"],"names":["strapi","pluginDescription","pluginPkg","description","icon","name","plugin","blockerComponent","blockerComponentProps","fileModel","id","pluginId","initializer","Initializer","injectedComponents","isReady","isRequired","required","layout","lifecycles","mainComponent","App","pluginLogo","preventComponentRendering","settings","global","links","title","defaultMessage","to","settingsBaseURL","Component","pluginPermissions","permissions","trads","menu","pluginsSectionLinks","destination","label","main","registerComponent","InputModalStepper","registerField","type","InputMedia","registerPlugin"],"mappings":";;;;;;;;;AAMA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAnBA;AACA;AACA;AACA;AACA;AACA;eAgBe,kBAAAA,MAAM,EAAI;AACvB,MAAMC,iBAAiB,GAAGC,oBAAUF,MAAV,CAAiBG,WAAjB,IAAgCD,oBAAUC,WAApE;AACA,MAAMC,IAAI,GAAGF,oBAAUF,MAAV,CAAiBI,IAA9B;AACA,MAAMC,IAAI,GAAGH,oBAAUF,MAAV,CAAiBK,IAA9B;AAEA,MAAMC,MAAM,GAAG;AACbC,IAAAA,gBAAgB,EAAE,IADL;AAEbC,IAAAA,qBAAqB,EAAE,EAFV;AAGbL,IAAAA,WAAW,EAAEF,iBAHA;AAIbQ,IAAAA,SAAS,EAAE,IAJE;AAKbL,IAAAA,IAAI,EAAJA,IALa;AAMbM,IAAAA,EAAE,EAAEC,oBANS;AAObC,IAAAA,WAAW,EAAEC,uBAPA;AAQbC,IAAAA,kBAAkB,EAAE,EARP;AASbC,IAAAA,OAAO,EAAE,KATI;AAUbC,IAAAA,UAAU,EAAEd,oBAAUF,MAAV,CAAiBiB,QAAjB,IAA6B,KAV5B;AAWbC,IAAAA,MAAM,EAAE,IAXK;AAYbC,IAAAA,UAAU,EAAE,IAZC;AAabC,IAAAA,aAAa,EAAEC,eAbF;AAcbhB,IAAAA,IAAI,EAAJA,IAda;AAebiB,IAAAA,UAAU,EAAVA,gBAfa;AAgBbC,IAAAA,yBAAyB,EAAE,KAhBd;AAiBbC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,KAAK,EAAE;AACLjB,YAAAA,EAAE,EAAE,oBAAQ,aAAR,CADC;AAELkB,YAAAA,cAAc,EAAE;AAFX,WADT;AAKEvB,UAAAA,IAAI,EAAE,eALR;AAMEwB,UAAAA,EAAE,YAAK7B,MAAM,CAAC8B,eAAZ,mBANJ;AAOEC,UAAAA,SAAS,EAAE;AAAA,gCACT,gCAAC,wCAAD;AAAsB,cAAA,WAAW,EAAEC,wBAAkBR;AAArD,4BACE,gCAAC,wBAAD,OADF,CADS;AAAA,WAPb;AAYES,UAAAA,WAAW,EAAED,wBAAkBR;AAZjC,SADK;AADD;AADA,KAjBG;AAqCbU,IAAAA,KAAK,EAALA,wBArCa;AAsCbC,IAAAA,IAAI,EAAE;AACJC,MAAAA,mBAAmB,EAAE,CACnB;AACEC,QAAAA,WAAW,qBAAc1B,oBAAd,CADb;AAEEP,QAAAA,IAAI,EAAJA,IAFF;AAGEkC,QAAAA,KAAK,EAAE;AACL5B,UAAAA,EAAE,YAAKC,oBAAL,iBADG;AAELiB,UAAAA,cAAc,EAAE;AAFX,SAHT;AAOEvB,QAAAA,IAAI,EAAJA,IAPF;AAQE4B,QAAAA,WAAW,EAAED,wBAAkBO;AARjC,OADmB;AADjB;AAtCO,GAAf;AAsDAvC,EAAAA,MAAM,CAACwC,iBAAP,CAAyB;AAAEnC,IAAAA,IAAI,EAAE,eAAR;AAAyB0B,IAAAA,SAAS,EAAEU;AAApC,GAAzB;AACAzC,EAAAA,MAAM,CAAC0C,aAAP,CAAqB;AAAEC,IAAAA,IAAI,EAAE,OAAR;AAAiBZ,IAAAA,SAAS,EAAEa;AAA5B,GAArB;AAEA,SAAO5C,MAAM,CAAC6C,cAAP,CAAsBvC,MAAtB,CAAP;AACD,C","sourcesContent":["// NOTE TO PLUGINS DEVELOPERS:\n// If you modify this file by adding new options to the plugin entry point\n// Here's the file: strapi/docs/3.0.0-beta.x/plugin-development/frontend-field-api.md\n// Here's the file: strapi/docs/3.0.0-beta.x/guides/registering-a-field-in-admin.md\n// Also the strapi-generate-plugins/files/admin/src/index.js needs to be updated\n// IF THE DOC IS NOT UPDATED THE PULL REQUEST WILL NOT BE MERGED\nimport React from 'react';\nimport { CheckPagePermissions } from 'strapi-helper-plugin';\nimport pluginPkg from '../../package.json';\nimport pluginLogo from './assets/images/logo.svg';\nimport pluginPermissions from './permissions';\nimport App from './containers/App';\nimport Initializer from './containers/Initializer';\nimport SettingsPage from './containers/SettingsPage';\nimport InputMedia from './components/InputMedia';\nimport InputModalStepper from './containers/InputModalStepper';\n\nimport trads from './translations';\nimport pluginId from './pluginId';\nimport { getTrad } from './utils';\n\nexport default strapi => {\n  const pluginDescription = pluginPkg.strapi.description || pluginPkg.description;\n  const icon = pluginPkg.strapi.icon;\n  const name = pluginPkg.strapi.name;\n\n  const plugin = {\n    blockerComponent: null,\n    blockerComponentProps: {},\n    description: pluginDescription,\n    fileModel: null,\n    icon,\n    id: pluginId,\n    initializer: Initializer,\n    injectedComponents: [],\n    isReady: false,\n    isRequired: pluginPkg.strapi.required || false,\n    layout: null,\n    lifecycles: null,\n    mainComponent: App,\n    name,\n    pluginLogo,\n    preventComponentRendering: false,\n    settings: {\n      global: {\n        links: [\n          {\n            title: {\n              id: getTrad('plugin.name'),\n              defaultMessage: 'Media Library',\n            },\n            name: 'media-library',\n            to: `${strapi.settingsBaseURL}/media-library`,\n            Component: () => (\n              <CheckPagePermissions permissions={pluginPermissions.settings}>\n                <SettingsPage />\n              </CheckPagePermissions>\n            ),\n            permissions: pluginPermissions.settings,\n          },\n        ],\n      },\n    },\n    trads,\n    menu: {\n      pluginsSectionLinks: [\n        {\n          destination: `/plugins/${pluginId}`,\n          icon,\n          label: {\n            id: `${pluginId}.plugin.name`,\n            defaultMessage: 'Media Library',\n          },\n          name,\n          permissions: pluginPermissions.main,\n        },\n      ],\n    },\n  };\n\n  strapi.registerComponent({ name: 'media-library', Component: InputModalStepper });\n  strapi.registerField({ type: 'media', Component: InputMedia });\n\n  return strapi.registerPlugin(plugin);\n};\n"]},"metadata":{},"sourceType":"script"}