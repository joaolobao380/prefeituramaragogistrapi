{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _lodash = require(\"lodash\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _components = require(\"./components\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _templateObject;\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar BaselineAlignment = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  padding-top: \", \";\\n\"])), function (_ref) {\n  var size = _ref.size;\n  return size;\n});\n\nvar InformationCard = function InformationCard() {\n  var _useContentManagerEdi = (0, _strapiHelperPlugin.useContentManagerEditViewDataManager)(),\n      initialData = _useContentManagerEdi.initialData,\n      hasDraftAndPublish = _useContentManagerEdi.hasDraftAndPublish,\n      layout = _useContentManagerEdi.layout;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var updatedAtName = (0, _react.useMemo)(function () {\n    return (0, _lodash.get)(layout, ['options', 'timestamps'], ['created_at', 'updated_at'])[1];\n  }, [layout]);\n  var updatedBy = (0, _react.useMemo)(function () {\n    var firstname = (0, _lodash.get)(initialData, ['updated_by', 'firstname'], '');\n    var lastname = (0, _lodash.get)(initialData, ['updated_by', 'lastname'], '');\n    return \"\".concat(firstname, \" \").concat(lastname);\n  }, [initialData]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_components.SubWrapper, null, /*#__PURE__*/_react[\"default\"].createElement(BaselineAlignment, {\n    size: \"3px\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    top: true,\n    left: true,\n    right: true,\n    bottom: true,\n    size: \"smd\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    fontWeight: \"bold\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('containers.Edit.information')\n  })), /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    top: true,\n    size: \"smd\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(BaselineAlignment, {\n    size: \"2px\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, {\n    justifyContent: \"space-between\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    fontSize: \"xs\",\n    color: \"grey\",\n    textTransform: \"uppercase\",\n    fontWeight: \"semiBold\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('containers.Edit.information.lastUpdate')\n  })), /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    lineHeight: \"12px\"\n  }, (0, _lodash.isEmpty)(initialData) ? '-' : (0, _moment[\"default\"])(initialData[updatedAtName]).fromNow()))), /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    top: true,\n    size: \"smd\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(BaselineAlignment, {\n    size: \"3px\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, {\n    justifyContent: \"space-between\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    fontSize: \"xs\",\n    color: \"grey\",\n    textTransform: \"uppercase\",\n    fontWeight: \"semiBold\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('containers.Edit.information.by')\n  })), /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    lineHeight: \"12px\"\n  }, (0, _lodash.isEmpty)(initialData) ? '-' : updatedBy)))), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.InjectionZone, {\n    area: \"\".concat(_pluginId[\"default\"], \".editView.informations\")\n  })), /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    top: true,\n    size: \"sm\"\n  }), hasDraftAndPublish && /*#__PURE__*/_react[\"default\"].createElement(_components.StatusWrapper, {\n    isGreen: initialData.published_at\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    fontSize: \"sm\",\n    lineHeight: \"18px\"\n  }, \"\\u2022\"), /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    left: true,\n    size: \"xs\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    lineHeight: \"18px\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('containers.Edit.information.editing')\n  })), \"\\xA0\", /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    lineHeight: \"18px\",\n    fontWeight: \"bold\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)(initialData.published_at ? 'containers.Edit.information.publishedVersion' : 'containers.Edit.information.draftVersion')\n  })))), /*#__PURE__*/_react[\"default\"].createElement(BaselineAlignment, {\n    size: \"2px\"\n  }));\n};\n\nvar _default = InformationCard;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/EditView/InformationCard.js"],"names":["BaselineAlignment","styled","div","size","InformationCard","initialData","hasDraftAndPublish","layout","formatMessage","updatedAtName","updatedBy","firstname","lastname","id","fromNow","pluginId","published_at"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { Padded, Text, Flex } from '@buffetjs/core';\nimport { get, isEmpty } from 'lodash';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { useIntl } from 'react-intl';\nimport { InjectionZone, useContentManagerEditViewDataManager } from 'strapi-helper-plugin';\nimport { SubWrapper, StatusWrapper } from './components';\nimport pluginId from '../../pluginId';\nimport { getTrad } from '../../utils';\n\nconst BaselineAlignment = styled.div`\n  padding-top: ${({ size }) => size};\n`;\n\nconst InformationCard = () => {\n  const { initialData, hasDraftAndPublish, layout } = useContentManagerEditViewDataManager();\n  const { formatMessage } = useIntl();\n\n  const updatedAtName = useMemo(\n    () => get(layout, ['options', 'timestamps'], ['created_at', 'updated_at'])[1],\n    [layout]\n  );\n\n  const updatedBy = useMemo(() => {\n    const firstname = get(initialData, ['updated_by', 'firstname'], '');\n    const lastname = get(initialData, ['updated_by', 'lastname'], '');\n\n    return `${firstname} ${lastname}`;\n  }, [initialData]);\n\n  return (\n    <>\n      <SubWrapper>\n        <BaselineAlignment size=\"3px\" />\n        <Padded top left right bottom size=\"smd\">\n          <Text fontWeight=\"bold\">\n            {formatMessage({\n              id: getTrad('containers.Edit.information'),\n            })}\n          </Text>\n          <Padded top size=\"smd\">\n            <BaselineAlignment size=\"2px\" />\n            <Flex justifyContent=\"space-between\">\n              <Text fontSize=\"xs\" color=\"grey\" textTransform=\"uppercase\" fontWeight=\"semiBold\">\n                {formatMessage({\n                  id: getTrad('containers.Edit.information.lastUpdate'),\n                })}\n              </Text>\n              <Text lineHeight=\"12px\">\n                {isEmpty(initialData) ? '-' : moment(initialData[updatedAtName]).fromNow()}\n              </Text>\n            </Flex>\n          </Padded>\n          <Padded top size=\"smd\">\n            <BaselineAlignment size=\"3px\" />\n            <Flex justifyContent=\"space-between\">\n              <Text fontSize=\"xs\" color=\"grey\" textTransform=\"uppercase\" fontWeight=\"semiBold\">\n                {formatMessage({\n                  id: getTrad('containers.Edit.information.by'),\n                })}\n              </Text>\n              <Text lineHeight=\"12px\">{isEmpty(initialData) ? '-' : updatedBy}</Text>\n            </Flex>\n          </Padded>\n        </Padded>\n        <InjectionZone area={`${pluginId}.editView.informations`} />\n      </SubWrapper>\n      <Padded top size=\"sm\" />\n      {hasDraftAndPublish && (\n        <StatusWrapper isGreen={initialData.published_at}>\n          <Text fontSize=\"sm\" lineHeight=\"18px\">\n            •\n          </Text>\n          <Padded left size=\"xs\" />\n          <Flex>\n            <Text lineHeight=\"18px\">\n              {formatMessage({\n                id: getTrad('containers.Edit.information.editing'),\n              })}\n            </Text>\n            &nbsp;\n            <Text lineHeight=\"18px\" fontWeight=\"bold\">\n              {formatMessage({\n                id: getTrad(\n                  initialData.published_at\n                    ? 'containers.Edit.information.publishedVersion'\n                    : 'containers.Edit.information.draftVersion'\n                ),\n              })}\n            </Text>\n          </Flex>\n        </StatusWrapper>\n      )}\n      <BaselineAlignment size=\"2px\" />\n    </>\n  );\n};\n\nexport default InformationCard;\n"]},"metadata":{},"sourceType":"script"}