{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _styles = require(\"@buffetjs/styles\");\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _templateObject;\n\nvar mapToLocaleName = function mapToLocaleName(locales, localeCode) {\n  return (0, _get[\"default\"])(locales.find(function (_ref) {\n    var code = _ref.code;\n    return code === localeCode;\n  }), 'name', localeCode);\n};\n\nvar LocaleName = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  white-space: nowrap;\\n\"])));\n\nvar LocaleListCell = function LocaleListCell(_ref2) {\n  var locales = _ref2.locales,\n      localizations = _ref2.localizations,\n      currentLocaleCode = _ref2.locale,\n      id = _ref2.id;\n  var allLocalizations = [{\n    locale: currentLocaleCode\n  }].concat((0, _toConsumableArray2[\"default\"])(localizations));\n  var localizationNames = allLocalizations.map(function (locale) {\n    return locale.locale;\n  });\n  var defaultLocale = locales.find(function (locale) {\n    return locale.isDefault;\n  });\n  var hasDefaultLocale = localizationNames.includes(defaultLocale.code);\n  var localesArray = [];\n\n  if (hasDefaultLocale) {\n    var ctLocalesWithoutDefault = localizationNames.filter(function (locale) {\n      return locale !== defaultLocale.code;\n    });\n    var ctLocalesNamesWithoutDefault = ctLocalesWithoutDefault.map(function (locale) {\n      return mapToLocaleName(locales, locale);\n    });\n    ctLocalesNamesWithoutDefault.sort();\n    var ctLocalesNamesWithDefault = [\"\".concat(defaultLocale.name, \" (default)\")].concat((0, _toConsumableArray2[\"default\"])(ctLocalesNamesWithoutDefault));\n    localesArray = ctLocalesNamesWithDefault;\n  } else {\n    var ctLocales = localizationNames.map(function (locale) {\n      return mapToLocaleName(locales, locale);\n    });\n    ctLocales.sort();\n    localesArray = ctLocales;\n  }\n\n  var elId = \"entry-\".concat(id, \"__locale\");\n  var localesNames = localesArray.join(', ');\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(LocaleName, {\n    \"data-for\": elId,\n    \"data-tip\": localesNames\n  }, localesNames), /*#__PURE__*/_react[\"default\"].createElement(_styles.Tooltip, {\n    id: elId,\n    place: \"bottom\",\n    delay: 0\n  }, localesArray.map(function (name) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n      key: name,\n      top: true,\n      bottom: true,\n      size: \"xs\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n      ellipsis: true,\n      color: \"white\"\n    }, name));\n  })));\n};\n\nLocaleListCell.propTypes = {\n  id: _propTypes[\"default\"].number.isRequired,\n  localizations: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape({\n    locale: _propTypes[\"default\"].string.isRequired\n  })).isRequired,\n  locales: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape({\n    name: _propTypes[\"default\"].string.isRequired,\n    code: _propTypes[\"default\"].string.isRequired,\n    isDefault: _propTypes[\"default\"].bool\n  })).isRequired,\n  locale: _propTypes[\"default\"].string.isRequired\n};\nvar _default = LocaleListCell;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/components/LocaleListCell/LocaleListCell.js"],"names":["mapToLocaleName","locales","localeCode","find","code","LocaleName","styled","div","LocaleListCell","localizations","currentLocaleCode","locale","id","allLocalizations","localizationNames","map","defaultLocale","isDefault","hasDefaultLocale","includes","localesArray","ctLocalesWithoutDefault","filter","ctLocalesNamesWithoutDefault","sort","ctLocalesNamesWithDefault","name","ctLocales","elId","localesNames","join","propTypes","PropTypes","number","isRequired","arrayOf","shape","string","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Padded, Text } from '@buffetjs/core';\nimport { Tooltip } from '@buffetjs/styles';\nimport get from 'lodash/get';\nimport styled from 'styled-components';\n\nconst mapToLocaleName = (locales, localeCode) =>\n  get(\n    locales.find(({ code }) => code === localeCode),\n    'name',\n    localeCode\n  );\n\nconst LocaleName = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst LocaleListCell = ({ locales, localizations, locale: currentLocaleCode, id }) => {\n  const allLocalizations = [{ locale: currentLocaleCode }, ...localizations];\n  const localizationNames = allLocalizations.map(locale => locale.locale);\n  const defaultLocale = locales.find(locale => locale.isDefault);\n  const hasDefaultLocale = localizationNames.includes(defaultLocale.code);\n\n  let localesArray = [];\n\n  if (hasDefaultLocale) {\n    const ctLocalesWithoutDefault = localizationNames.filter(\n      locale => locale !== defaultLocale.code\n    );\n    const ctLocalesNamesWithoutDefault = ctLocalesWithoutDefault.map(locale =>\n      mapToLocaleName(locales, locale)\n    );\n\n    ctLocalesNamesWithoutDefault.sort();\n\n    const ctLocalesNamesWithDefault = [\n      `${defaultLocale.name} (default)`,\n      ...ctLocalesNamesWithoutDefault,\n    ];\n\n    localesArray = ctLocalesNamesWithDefault;\n  } else {\n    const ctLocales = localizationNames.map(locale => mapToLocaleName(locales, locale));\n    ctLocales.sort();\n\n    localesArray = ctLocales;\n  }\n\n  const elId = `entry-${id}__locale`;\n  const localesNames = localesArray.join(', ');\n\n  return (\n    <div>\n      <LocaleName data-for={elId} data-tip={localesNames}>\n        {localesNames}\n      </LocaleName>\n      <Tooltip id={elId} place=\"bottom\" delay={0}>\n        {localesArray.map(name => (\n          <Padded key={name} top bottom size=\"xs\">\n            <Text ellipsis color=\"white\">\n              {name}\n            </Text>\n          </Padded>\n        ))}\n      </Tooltip>\n    </div>\n  );\n};\n\nLocaleListCell.propTypes = {\n  id: PropTypes.number.isRequired,\n  localizations: PropTypes.arrayOf(\n    PropTypes.shape({\n      locale: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  locales: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      code: PropTypes.string.isRequired,\n      isDefault: PropTypes.bool,\n    })\n  ).isRequired,\n  locale: PropTypes.string.isRequired,\n};\n\nexport default LocaleListCell;\n"]},"metadata":{},"sourceType":"script"}