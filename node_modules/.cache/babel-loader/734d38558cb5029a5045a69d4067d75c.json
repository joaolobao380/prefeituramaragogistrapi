{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactSelect = require(\"react-select\");\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _useDataManager2 = _interopRequireDefault(require(\"../../hooks/useDataManager\"));\n\nvar _SelectMenuUl = _interopRequireDefault(require(\"../SelectMenuUl\"));\n\nvar _Category = _interopRequireDefault(require(\"./Category\"));\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nvar MenuList = function MenuList(_ref) {\n  var _ref$selectProps = _ref.selectProps,\n      isAddingAComponentToAnotherComponent = _ref$selectProps.isAddingAComponentToAnotherComponent,\n      name = _ref$selectProps.name,\n      onClickOption = _ref$selectProps.onClickOption,\n      refState = _ref$selectProps.refState,\n      value = _ref$selectProps.value,\n      rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"selectProps\"]);\n\n  var _useDataManager = (0, _useDataManager2[\"default\"])(),\n      componentsGroupedByCategory = _useDataManager.componentsGroupedByCategory,\n      componentsThatHaveOtherComponentInTheirAttributes = _useDataManager.componentsThatHaveOtherComponentInTheirAttributes;\n\n  var query = (0, _strapiHelperPlugin.useQuery)();\n  var Component = _reactSelect.components.MenuList;\n  var forTarget = query.get('forTarget');\n  var uid = query.get('targetUid');\n  var isTargetAComponent = ['component', 'components'].includes(forTarget);\n  return /*#__PURE__*/_react[\"default\"].createElement(Component, rest, /*#__PURE__*/_react[\"default\"].createElement(_SelectMenuUl[\"default\"], null, Object.keys(componentsGroupedByCategory).sort().map(function (categoryName) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"li\", {\n      key: categoryName\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Category[\"default\"], {\n      categoryName: categoryName\n    }), /*#__PURE__*/_react[\"default\"].createElement(_SelectMenuUl[\"default\"], {\n      style: {\n        marginTop: '-4px'\n      },\n      maxHeight: \"100%\"\n    }, componentsGroupedByCategory[categoryName].map(function (component) {\n      if (isAddingAComponentToAnotherComponent && componentsThatHaveOtherComponentInTheirAttributes.includes(component.uid) || isTargetAComponent && component.uid === uid) {\n        return null;\n      }\n\n      var isSelected = value.value === component.uid;\n      return /*#__PURE__*/_react[\"default\"].createElement(\"li\", {\n        key: component.uid,\n        className: \"li\",\n        onClick: function onClick() {\n          refState.current.select.blur();\n          onClickOption({\n            target: {\n              name: name,\n              value: component.uid\n            }\n          });\n        }\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"p\", {\n        datadescr: (0, _lodash.upperFirst)(component.schema.name),\n        style: {\n          color: isSelected ? '#007eff' : '',\n          fontWeight: isSelected ? '700' : '400'\n        }\n      }, (0, _lodash.upperFirst)(component.schema.name)));\n    })));\n  })));\n};\n\nMenuList.defaultProps = {\n  selectProps: {\n    isAddingAComponentToAnotherComponent: false,\n    refState: {\n      current: {\n        select: {\n          blur: function blur() {}\n        }\n      }\n    },\n    value: {\n      value: ''\n    }\n  }\n};\nMenuList.propTypes = {\n  selectProps: _propTypes[\"default\"].shape({\n    isAddingAComponentToAnotherComponent: _propTypes[\"default\"].bool,\n    name: _propTypes[\"default\"].string.isRequired,\n    onClickOption: _propTypes[\"default\"].func.isRequired,\n    refState: _propTypes[\"default\"].object,\n    value: _propTypes[\"default\"].object\n  })\n};\nvar _default = MenuList;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-type-builder/admin/src/components/ComponentSelect/MenuList.js"],"names":["MenuList","selectProps","isAddingAComponentToAnotherComponent","name","onClickOption","refState","value","rest","componentsGroupedByCategory","componentsThatHaveOtherComponentInTheirAttributes","query","Component","components","forTarget","get","uid","isTargetAComponent","includes","Object","keys","sort","map","categoryName","marginTop","component","isSelected","current","select","blur","target","schema","color","fontWeight","defaultProps","propTypes","PropTypes","shape","bool","string","isRequired","func","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { components } from 'react-select';\nimport { upperFirst } from 'lodash';\nimport { useQuery } from 'strapi-helper-plugin';\nimport useDataManager from '../../hooks/useDataManager';\nimport Ul from '../SelectMenuUl';\nimport Category from './Category';\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\nconst MenuList = ({\n  selectProps: { isAddingAComponentToAnotherComponent, name, onClickOption, refState, value },\n  ...rest\n}) => {\n  const {\n    componentsGroupedByCategory,\n    componentsThatHaveOtherComponentInTheirAttributes,\n  } = useDataManager();\n\n  const query = useQuery();\n  const Component = components.MenuList;\n  const forTarget = query.get('forTarget');\n  const uid = query.get('targetUid');\n  const isTargetAComponent = ['component', 'components'].includes(forTarget);\n\n  return (\n    <Component {...rest}>\n      <Ul>\n        {Object.keys(componentsGroupedByCategory)\n          .sort()\n          .map(categoryName => {\n            return (\n              <li key={categoryName}>\n                <Category categoryName={categoryName} />\n                <Ul style={{ marginTop: '-4px' }} maxHeight=\"100%\">\n                  {componentsGroupedByCategory[categoryName].map(component => {\n                    if (\n                      (isAddingAComponentToAnotherComponent &&\n                        componentsThatHaveOtherComponentInTheirAttributes.includes(\n                          component.uid\n                        )) ||\n                      (isTargetAComponent && component.uid === uid)\n                    ) {\n                      return null;\n                    }\n\n                    const isSelected = value.value === component.uid;\n\n                    return (\n                      <li\n                        key={component.uid}\n                        className=\"li\"\n                        onClick={() => {\n                          refState.current.select.blur();\n                          onClickOption({\n                            target: { name, value: component.uid },\n                          });\n                        }}\n                      >\n                        <p\n                          datadescr={upperFirst(component.schema.name)}\n                          style={{\n                            color: isSelected ? '#007eff' : '',\n                            fontWeight: isSelected ? '700' : '400',\n                          }}\n                        >\n                          {upperFirst(component.schema.name)}\n                        </p>\n                      </li>\n                    );\n                  })}\n                </Ul>\n              </li>\n            );\n          })}\n      </Ul>\n    </Component>\n  );\n};\n\nMenuList.defaultProps = {\n  selectProps: {\n    isAddingAComponentToAnotherComponent: false,\n    refState: {\n      current: {\n        select: {\n          blur: () => {},\n        },\n      },\n    },\n    value: {\n      value: '',\n    },\n  },\n};\n\nMenuList.propTypes = {\n  selectProps: PropTypes.shape({\n    isAddingAComponentToAnotherComponent: PropTypes.bool,\n    name: PropTypes.string.isRequired,\n    onClickOption: PropTypes.func.isRequired,\n    refState: PropTypes.object,\n    value: PropTypes.object,\n  }),\n};\n\nexport default MenuList;\n"]},"metadata":{},"sourceType":"script"}