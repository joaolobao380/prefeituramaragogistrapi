{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _styles = require(\"@buffetjs/styles\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _utils = require(\"../../utils\");\n\nvar _CardBorder = _interopRequireDefault(require(\"../CardBorder\"));\n\nvar _CardImgWrapper = _interopRequireDefault(require(\"../CardImgWrapper\"));\n\nvar _CardPreview = _interopRequireDefault(require(\"../CardPreview\"));\n\nvar _CardErrorMessage = _interopRequireDefault(require(\"../CardErrorMessage\"));\n\nvar _FileInfos = _interopRequireDefault(require(\"../FileInfos\"));\n\nvar _CardTitle = _interopRequireDefault(require(\"../CardTitle\"));\n\nvar _Tag = _interopRequireDefault(require(\"../Tag\"));\n\nvar _CardWrapper = _interopRequireDefault(require(\"../CardWrapper\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Card = function Card(_ref) {\n  var children = _ref.children,\n      _ref$options = _ref.options,\n      checked = _ref$options.checked,\n      errorMessage = _ref$options.errorMessage,\n      ext = _ref$options.ext,\n      hasError = _ref$options.hasError,\n      height = _ref$options.height,\n      id = _ref$options.id,\n      isDisabled = _ref$options.isDisabled,\n      mime = _ref$options.mime,\n      name = _ref$options.name,\n      onClick = _ref$options.onClick,\n      previewUrl = _ref$options.previewUrl,\n      small = _ref$options.small,\n      _ref$options$size = _ref$options.size,\n      size = _ref$options$size === void 0 ? 0 : _ref$options$size,\n      type = _ref$options.type,\n      url = _ref$options.url,\n      width = _ref$options.width,\n      _ref$options$withFile = _ref$options.withFileCaching,\n      withFileCaching = _ref$options$withFile === void 0 ? true : _ref$options$withFile,\n      withoutFileInfo = _ref$options.withoutFileInfo;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      formatMessage = _useGlobalContext.formatMessage;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      tooltipIsDisplayed = _useState2[0],\n      setDisplayTooltip = _useState2[1];\n\n  var fileSize = (0, _utils.formatBytes)(size, 0);\n  var fileType = mime || type;\n  var generatedExtension = !ext && name.lastIndexOf('.') !== -1 ? name.substr(name.lastIndexOf('.') + 1, name.length) : (0, _strapiHelperPlugin.getFileExtension)(ext);\n\n  var handleClick = function handleClick() {\n    if (!isDisabled || checked) {\n      onClick(id);\n    }\n  };\n\n  var handleTooltipToggle = function handleTooltipToggle() {\n    setDisplayTooltip(function (prev) {\n      return !prev;\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_CardWrapper[\"default\"], {\n    title: isDisabled ? formatMessage({\n      id: (0, _utils.getTrad)('list.assets.type-not-allowed')\n    }) : null,\n    onClick: handleClick\n  }, /*#__PURE__*/_react[\"default\"].createElement(_CardImgWrapper[\"default\"], {\n    checked: checked,\n    small: small\n  }, /*#__PURE__*/_react[\"default\"].createElement(_CardPreview[\"default\"], {\n    extension: generatedExtension,\n    hasError: hasError,\n    previewUrl: previewUrl,\n    url: url,\n    type: fileType,\n    withFileCaching: withFileCaching\n  }), /*#__PURE__*/_react[\"default\"].createElement(_CardBorder[\"default\"], {\n    color: hasError ? 'orange' : 'mediumBlue',\n    shown: checked || hasError\n  }), children), !withoutFileInfo && /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(_CardTitle[\"default\"], {\n    onMouseEnter: handleTooltipToggle,\n    onMouseLeave: handleTooltipToggle,\n    \"data-for\": \"\".concat(id),\n    \"data-tip\": name\n  }, name), tooltipIsDisplayed && /*#__PURE__*/_react[\"default\"].createElement(_styles.Tooltip, {\n    id: \"\".concat(id)\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Tag[\"default\"], {\n    label: (0, _utils.getType)(fileType)\n  })), /*#__PURE__*/_react[\"default\"].createElement(_FileInfos[\"default\"], {\n    extension: generatedExtension,\n    size: fileSize,\n    width: width,\n    height: height\n  })), hasError && /*#__PURE__*/_react[\"default\"].createElement(_CardErrorMessage[\"default\"], {\n    title: errorMessage\n  }, errorMessage));\n};\n\nCard.defaultProps = {\n  children: null,\n  options: {\n    checked: false,\n    errorMessage: null,\n    ext: null,\n    id: null,\n    isDisabled: false,\n    hasError: false,\n    height: null,\n    mime: null,\n    name: null,\n    onClick: function onClick() {},\n    previewUrl: null,\n    size: 0,\n    small: false,\n    type: null,\n    url: null,\n    width: null,\n    withFileCaching: true,\n    withoutFileInfo: false\n  }\n};\nCard.propTypes = {\n  children: _propTypes[\"default\"].node,\n  options: _propTypes[\"default\"].exact({\n    errorMessage: _propTypes[\"default\"].string,\n    ext: _propTypes[\"default\"].string,\n    hasError: _propTypes[\"default\"].bool,\n    height: _propTypes[\"default\"].number,\n    mime: _propTypes[\"default\"].string,\n    name: _propTypes[\"default\"].string,\n    onClick: _propTypes[\"default\"].func,\n    previewUrl: _propTypes[\"default\"].string,\n    size: _propTypes[\"default\"].number,\n    small: _propTypes[\"default\"].bool,\n    type: _propTypes[\"default\"].string,\n    url: _propTypes[\"default\"].string,\n    width: _propTypes[\"default\"].number,\n    withFileCaching: _propTypes[\"default\"].bool,\n    withoutFileInfo: _propTypes[\"default\"].bool,\n    id: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n    isDisabled: _propTypes[\"default\"].bool,\n    checked: _propTypes[\"default\"].bool\n  })\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(Card);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-upload/admin/src/components/Card/index.js"],"names":["Card","children","options","checked","errorMessage","ext","hasError","height","id","isDisabled","mime","name","onClick","previewUrl","small","size","type","url","width","withFileCaching","withoutFileInfo","formatMessage","tooltipIsDisplayed","setDisplayTooltip","fileSize","fileType","generatedExtension","lastIndexOf","substr","length","handleClick","handleTooltipToggle","prev","defaultProps","propTypes","PropTypes","node","exact","string","bool","number","func","oneOfType"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex } from '@buffetjs/core';\nimport { Tooltip } from '@buffetjs/styles';\nimport { getFileExtension, useGlobalContext } from 'strapi-helper-plugin';\nimport { formatBytes, getType, getTrad } from '../../utils';\n\nimport Border from '../CardBorder';\nimport CardImgWrapper from '../CardImgWrapper';\nimport CardPreview from '../CardPreview';\nimport ErrorMessage from '../CardErrorMessage';\nimport FileInfos from '../FileInfos';\nimport Title from '../CardTitle';\nimport Tag from '../Tag';\nimport Wrapper from '../CardWrapper';\n\nconst Card = ({\n  children,\n  options: {\n    checked,\n    errorMessage,\n    ext,\n    hasError,\n    height,\n    id,\n    isDisabled,\n    mime,\n    name,\n    onClick,\n    previewUrl,\n    small,\n    size = 0,\n    type,\n    url,\n    width,\n    withFileCaching = true,\n    withoutFileInfo,\n  },\n}) => {\n  const { formatMessage } = useGlobalContext();\n  const [tooltipIsDisplayed, setDisplayTooltip] = useState(false);\n  const fileSize = formatBytes(size, 0);\n  const fileType = mime || type;\n  const generatedExtension =\n    !ext && name.lastIndexOf('.') !== -1\n      ? name.substr(name.lastIndexOf('.') + 1, name.length)\n      : getFileExtension(ext);\n\n  const handleClick = () => {\n    if (!isDisabled || checked) {\n      onClick(id);\n    }\n  };\n\n  const handleTooltipToggle = () => {\n    setDisplayTooltip(prev => !prev);\n  };\n\n  return (\n    <Wrapper\n      title={isDisabled ? formatMessage({ id: getTrad('list.assets.type-not-allowed') }) : null}\n      onClick={handleClick}\n    >\n      <CardImgWrapper checked={checked} small={small}>\n        <CardPreview\n          extension={generatedExtension}\n          hasError={hasError}\n          previewUrl={previewUrl}\n          url={url}\n          type={fileType}\n          withFileCaching={withFileCaching}\n        />\n        <Border color={hasError ? 'orange' : 'mediumBlue'} shown={checked || hasError} />\n        {children}\n      </CardImgWrapper>\n      {!withoutFileInfo && (\n        <>\n          <Flex>\n            <Title\n              onMouseEnter={handleTooltipToggle}\n              onMouseLeave={handleTooltipToggle}\n              data-for={`${id}`}\n              data-tip={name}\n            >\n              {name}\n            </Title>\n            {tooltipIsDisplayed && <Tooltip id={`${id}`} />}\n            <Tag label={getType(fileType)} />\n          </Flex>\n          <FileInfos extension={generatedExtension} size={fileSize} width={width} height={height} />\n        </>\n      )}\n      {hasError && <ErrorMessage title={errorMessage}>{errorMessage}</ErrorMessage>}\n    </Wrapper>\n  );\n};\n\nCard.defaultProps = {\n  children: null,\n  options: {\n    checked: false,\n    errorMessage: null,\n    ext: null,\n    id: null,\n    isDisabled: false,\n    hasError: false,\n    height: null,\n    mime: null,\n    name: null,\n    onClick: () => {},\n    previewUrl: null,\n    size: 0,\n    small: false,\n    type: null,\n    url: null,\n    width: null,\n    withFileCaching: true,\n    withoutFileInfo: false,\n  },\n};\n\nCard.propTypes = {\n  children: PropTypes.node,\n  options: PropTypes.exact({\n    errorMessage: PropTypes.string,\n    ext: PropTypes.string,\n    hasError: PropTypes.bool,\n    height: PropTypes.number,\n    mime: PropTypes.string,\n    name: PropTypes.string,\n    onClick: PropTypes.func,\n    previewUrl: PropTypes.string,\n    size: PropTypes.number,\n    small: PropTypes.bool,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    width: PropTypes.number,\n    withFileCaching: PropTypes.bool,\n    withoutFileInfo: PropTypes.bool,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    isDisabled: PropTypes.bool,\n    checked: PropTypes.bool,\n  }),\n};\n\nexport default memo(Card);\n"]},"metadata":{},"sourceType":"script"}