{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar yup = _interopRequireWildcard(require(\"yup\"));\n\nvar _package = _interopRequireDefault(require(\"../../package.json\"));\n\nvar _logo = _interopRequireDefault(require(\"./assets/images/logo.svg\"));\n\nvar _CheckboxConfirmation = _interopRequireDefault(require(\"./components/CheckboxConfirmation\"));\n\nvar _CMEditViewInjectedComponents = _interopRequireDefault(require(\"./components/CMEditViewInjectedComponents\"));\n\nvar _Initializer = _interopRequireDefault(require(\"./containers/Initializer\"));\n\nvar _SettingsPage = _interopRequireDefault(require(\"./containers/SettingsPage\"));\n\nvar _LocalePicker = _interopRequireDefault(require(\"./components/LocalePicker\"));\n\nvar _middlewares = _interopRequireDefault(require(\"./middlewares\"));\n\nvar _permissions = _interopRequireDefault(require(\"./permissions\"));\n\nvar _pluginId = _interopRequireDefault(require(\"./pluginId\"));\n\nvar _translations = _interopRequireDefault(require(\"./translations\"));\n\nvar _utils = require(\"./utils\");\n\nvar _mutateCTBContentTypeSchema = _interopRequireDefault(require(\"./utils/mutateCTBContentTypeSchema\"));\n\nvar _localizedFields = _interopRequireDefault(require(\"./utils/localizedFields\"));\n\nvar _reducers = _interopRequireDefault(require(\"./hooks/reducers\"));\n\nvar _DeleteModalAdditionalInfos = _interopRequireDefault(require(\"./components/DeleteModalAdditionalInfos\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar _default = function _default(strapi) {\n  var pluginDescription = _package[\"default\"].strapi.description || _package[\"default\"].description;\n\n  _middlewares[\"default\"].forEach(function (middleware) {\n    strapi.middlewares.add(middleware);\n  });\n\n  var plugin = {\n    description: pluginDescription,\n    icon: _package[\"default\"].strapi.icon,\n    id: _pluginId[\"default\"],\n    isReady: false,\n    isRequired: _package[\"default\"].strapi.required || false,\n    mainComponent: null,\n    name: _package[\"default\"].strapi.name,\n    pluginLogo: _logo[\"default\"],\n    preventComponentRendering: false,\n    settings: {\n      global: {\n        links: [{\n          title: {\n            id: (0, _utils.getTrad)('plugin.name'),\n            defaultMessage: 'Internationalization'\n          },\n          name: 'internationalization',\n          to: \"\".concat(strapi.settingsBaseURL, \"/internationalization\"),\n          Component: function Component() {\n            return /*#__PURE__*/_react[\"default\"].createElement(_SettingsPage[\"default\"], null);\n          },\n          permissions: _permissions[\"default\"].accessMain\n        }]\n      }\n    },\n    trads: _translations[\"default\"],\n    reducers: _reducers[\"default\"],\n    boot: function boot(app) {\n      var ctbPlugin = app.getPlugin('content-type-builder');\n      var cmPlugin = app.getPlugin('content-manager');\n\n      if (cmPlugin) {\n        cmPlugin.injectComponent('editView', 'informations', {\n          name: 'i18n-locale-filter-edit-view',\n          Component: _CMEditViewInjectedComponents[\"default\"]\n        });\n        cmPlugin.injectComponent('listView', 'actions', {\n          name: 'i18n-locale-filter',\n          Component: _LocalePicker[\"default\"]\n        });\n        cmPlugin.injectComponent('listView', 'deleteModalAdditionalInfos', {\n          name: 'i18n-delete-bullets-in-modal',\n          Component: _DeleteModalAdditionalInfos[\"default\"]\n        });\n      }\n\n      if (ctbPlugin) {\n        var ctbFormsAPI = ctbPlugin.apis.forms;\n        ctbFormsAPI.addContentTypeSchemaMutation(_mutateCTBContentTypeSchema[\"default\"]);\n        ctbFormsAPI.components.add({\n          id: 'checkboxConfirmation',\n          component: _CheckboxConfirmation[\"default\"]\n        });\n        ctbFormsAPI.extendContentType({\n          validator: function validator() {\n            return {\n              i18n: yup.object().shape({\n                localized: yup.bool()\n              })\n            };\n          },\n          form: {\n            advanced: function advanced() {\n              return [[{\n                name: 'pluginOptions.i18n.localized',\n                description: {\n                  id: (0, _utils.getTrad)('plugin.schema.i18n.localized.description-content-type')\n                },\n                type: 'checkboxConfirmation',\n                label: {\n                  id: (0, _utils.getTrad)('plugin.schema.i18n.localized.label-content-type')\n                }\n              }]];\n            }\n          }\n        });\n        ctbFormsAPI.extendFields(_localizedFields[\"default\"], {\n          validator: function validator(args) {\n            return {\n              i18n: yup.object().shape({\n                localized: yup.bool().test({\n                  name: 'ensure-unique-localization',\n                  message: (0, _utils.getTrad)('plugin.schema.i18n.ensure-unique-localization'),\n                  test: function test(value) {\n                    if (value === undefined || value) {\n                      return true;\n                    }\n\n                    var unique = (0, _get[\"default\"])(args, ['3', 'modifiedData', 'unique'], null); // Unique fields must be localized\n\n                    if (unique && !value) {\n                      return false;\n                    }\n\n                    return true;\n                  }\n                })\n              })\n            };\n          },\n          form: {\n            advanced: function advanced(_ref) {\n              var contentTypeSchema = _ref.contentTypeSchema,\n                  forTarget = _ref.forTarget,\n                  type = _ref.type,\n                  step = _ref.step;\n\n              if (forTarget !== 'contentType') {\n                return [];\n              }\n\n              var hasI18nEnabled = (0, _get[\"default\"])(contentTypeSchema, ['schema', 'pluginOptions', 'i18n', 'localized'], false);\n\n              if (!hasI18nEnabled) {\n                return [];\n              }\n\n              if (type === 'component' && step === '1') {\n                return [];\n              }\n\n              return [[{\n                name: 'pluginOptions.i18n.localized',\n                description: {\n                  id: (0, _utils.getTrad)('plugin.schema.i18n.localized.description-field')\n                },\n                type: 'checkbox',\n                label: {\n                  id: (0, _utils.getTrad)('plugin.schema.i18n.localized.label-field')\n                }\n              }]];\n            }\n          }\n        });\n      }\n    },\n    initializer: _Initializer[\"default\"]\n  };\n  return strapi.registerPlugin(plugin);\n};\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/index.js"],"names":["strapi","pluginDescription","pluginPkg","description","middlewares","forEach","middleware","add","plugin","icon","id","pluginId","isReady","isRequired","required","mainComponent","name","pluginLogo","preventComponentRendering","settings","global","links","title","defaultMessage","to","settingsBaseURL","Component","permissions","pluginPermissions","accessMain","trads","reducers","i18nReducers","boot","app","ctbPlugin","getPlugin","cmPlugin","injectComponent","CMEditViewInjectedComponents","LocalePicker","DeleteModalAdditionalInfos","ctbFormsAPI","apis","forms","addContentTypeSchemaMutation","mutateCTBContentTypeSchema","components","component","CheckboxConfirmation","extendContentType","validator","i18n","yup","object","shape","localized","bool","form","advanced","type","label","extendFields","LOCALIZED_FIELDS","args","test","message","value","undefined","unique","contentTypeSchema","forTarget","step","hasI18nEnabled","initializer","Initializer","registerPlugin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport get from 'lodash/get';\nimport * as yup from 'yup';\nimport pluginPkg from '../../package.json';\nimport pluginLogo from './assets/images/logo.svg';\nimport CheckboxConfirmation from './components/CheckboxConfirmation';\nimport CMEditViewInjectedComponents from './components/CMEditViewInjectedComponents';\nimport Initializer from './containers/Initializer';\nimport SettingsPage from './containers/SettingsPage';\nimport LocalePicker from './components/LocalePicker';\nimport middlewares from './middlewares';\nimport pluginPermissions from './permissions';\nimport pluginId from './pluginId';\nimport trads from './translations';\nimport { getTrad } from './utils';\nimport mutateCTBContentTypeSchema from './utils/mutateCTBContentTypeSchema';\nimport LOCALIZED_FIELDS from './utils/localizedFields';\nimport i18nReducers from './hooks/reducers';\nimport DeleteModalAdditionalInfos from './components/DeleteModalAdditionalInfos';\n\nexport default strapi => {\n  const pluginDescription = pluginPkg.strapi.description || pluginPkg.description;\n\n  middlewares.forEach(middleware => {\n    strapi.middlewares.add(middleware);\n  });\n\n  const plugin = {\n    description: pluginDescription,\n    icon: pluginPkg.strapi.icon,\n    id: pluginId,\n    isReady: false,\n    isRequired: pluginPkg.strapi.required || false,\n    mainComponent: null,\n    name: pluginPkg.strapi.name,\n    pluginLogo,\n    preventComponentRendering: false,\n    settings: {\n      global: {\n        links: [\n          {\n            title: {\n              id: getTrad('plugin.name'),\n              defaultMessage: 'Internationalization',\n            },\n            name: 'internationalization',\n            to: `${strapi.settingsBaseURL}/internationalization`,\n            Component: () => <SettingsPage />,\n            permissions: pluginPermissions.accessMain,\n          },\n        ],\n      },\n    },\n    trads,\n    reducers: i18nReducers,\n    boot(app) {\n      const ctbPlugin = app.getPlugin('content-type-builder');\n      const cmPlugin = app.getPlugin('content-manager');\n\n      if (cmPlugin) {\n        cmPlugin.injectComponent('editView', 'informations', {\n          name: 'i18n-locale-filter-edit-view',\n          Component: CMEditViewInjectedComponents,\n        });\n        cmPlugin.injectComponent('listView', 'actions', {\n          name: 'i18n-locale-filter',\n          Component: LocalePicker,\n        });\n\n        cmPlugin.injectComponent('listView', 'deleteModalAdditionalInfos', {\n          name: 'i18n-delete-bullets-in-modal',\n          Component: DeleteModalAdditionalInfos,\n        });\n      }\n\n      if (ctbPlugin) {\n        const ctbFormsAPI = ctbPlugin.apis.forms;\n        ctbFormsAPI.addContentTypeSchemaMutation(mutateCTBContentTypeSchema);\n        ctbFormsAPI.components.add({ id: 'checkboxConfirmation', component: CheckboxConfirmation });\n\n        ctbFormsAPI.extendContentType({\n          validator: () => ({\n            i18n: yup.object().shape({\n              localized: yup.bool(),\n            }),\n          }),\n          form: {\n            advanced() {\n              return [\n                [\n                  {\n                    name: 'pluginOptions.i18n.localized',\n                    description: {\n                      id: getTrad('plugin.schema.i18n.localized.description-content-type'),\n                    },\n                    type: 'checkboxConfirmation',\n                    label: { id: getTrad('plugin.schema.i18n.localized.label-content-type') },\n                  },\n                ],\n              ];\n            },\n          },\n        });\n\n        ctbFormsAPI.extendFields(LOCALIZED_FIELDS, {\n          validator: args => ({\n            i18n: yup.object().shape({\n              localized: yup.bool().test({\n                name: 'ensure-unique-localization',\n                message: getTrad('plugin.schema.i18n.ensure-unique-localization'),\n                test(value) {\n                  if (value === undefined || value) {\n                    return true;\n                  }\n\n                  const unique = get(args, ['3', 'modifiedData', 'unique'], null);\n\n                  // Unique fields must be localized\n                  if (unique && !value) {\n                    return false;\n                  }\n\n                  return true;\n                },\n              }),\n            }),\n          }),\n          form: {\n            advanced({ contentTypeSchema, forTarget, type, step }) {\n              if (forTarget !== 'contentType') {\n                return [];\n              }\n\n              const hasI18nEnabled = get(\n                contentTypeSchema,\n                ['schema', 'pluginOptions', 'i18n', 'localized'],\n                false\n              );\n\n              if (!hasI18nEnabled) {\n                return [];\n              }\n\n              if (type === 'component' && step === '1') {\n                return [];\n              }\n\n              return [\n                [\n                  {\n                    name: 'pluginOptions.i18n.localized',\n                    description: {\n                      id: getTrad('plugin.schema.i18n.localized.description-field'),\n                    },\n                    type: 'checkbox',\n                    label: { id: getTrad('plugin.schema.i18n.localized.label-field') },\n                  },\n                ],\n              ];\n            },\n          },\n        });\n      }\n    },\n    initializer: Initializer,\n  };\n\n  return strapi.registerPlugin(plugin);\n};\n"]},"metadata":{},"sourceType":"script"}