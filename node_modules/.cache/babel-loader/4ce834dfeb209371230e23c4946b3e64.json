{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _getTrad = _interopRequireDefault(require(\"../../../utils/getTrad\"));\n\nvar nameField = {\n  autoFocus: true,\n  name: 'name',\n  type: 'text',\n  label: {\n    id: (0, _getTrad[\"default\"])('contentType.displayName.label')\n  },\n  validations: {\n    required: true\n  }\n};\nvar forms = {\n  advanced: {\n    \"default\": function _default() {\n      return {\n        items: [[{\n          type: 'dividerDraftPublish'\n        }], [{\n          label: {\n            id: (0, _getTrad[\"default\"])('contentType.draftAndPublish.label')\n          },\n          description: {\n            id: (0, _getTrad[\"default\"])('contentType.draftAndPublish.description')\n          },\n          name: 'draftAndPublish',\n          type: 'bool',\n          validations: {}\n        }], [{\n          type: 'divider'\n        }], [{\n          autoFocus: true,\n          label: {\n            id: (0, _getTrad[\"default\"])('contentType.collectionName.label')\n          },\n          description: {\n            id: (0, _getTrad[\"default\"])('contentType.collectionName.description')\n          },\n          name: 'collectionName',\n          type: 'text',\n          validations: {}\n        }]]\n      };\n    }\n  },\n  base: {\n    create: function create(value) {\n      return {\n        items: [[nameField, {\n          description: {\n            id: (0, _getTrad[\"default\"])('contentType.UID.description')\n          },\n          label: 'UID',\n          name: 'uid',\n          type: 'text',\n          readOnly: true,\n          disabled: true,\n          value: value\n        }]]\n      };\n    },\n    edit: function edit() {\n      return {\n        items: [[nameField, {\n          label: {\n            id: (0, _getTrad[\"default\"])('modalForm.attribute.text.type-selection')\n          },\n          name: 'kind',\n          type: 'booleanBox',\n          size: 12,\n          onChangeCallback: function onChangeCallback() {\n            return strapi.notification.toggle({\n              type: 'info',\n              message: {\n                id: (0, _getTrad[\"default\"])('contentType.kind.change.warning')\n              }\n            });\n          },\n          options: [{\n            headerId: (0, _getTrad[\"default\"])('menu.section.models.name.singular'),\n            descriptionId: (0, _getTrad[\"default\"])('form.button.collection-type.description'),\n            value: 'collectionType'\n          }, {\n            headerId: (0, _getTrad[\"default\"])('menu.section.single-types.name.singular'),\n            descriptionId: (0, _getTrad[\"default\"])('form.button.single-type.description'),\n            value: 'singleType'\n          }],\n          validations: {}\n        }]]\n      };\n    }\n  }\n};\nvar _default2 = forms;\nexports[\"default\"] = _default2;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-type-builder/admin/src/containers/FormModal/contentType/form.js"],"names":["nameField","autoFocus","name","type","label","id","validations","required","forms","advanced","items","description","base","create","value","readOnly","disabled","edit","size","onChangeCallback","strapi","notification","toggle","message","options","headerId","descriptionId"],"mappings":"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","sourcesContent":["import getTrad from '../../../utils/getTrad';\n\nconst nameField = {\n  autoFocus: true,\n  name: 'name',\n  type: 'text',\n  label: {\n    id: getTrad('contentType.displayName.label'),\n  },\n  validations: {\n    required: true,\n  },\n};\n\nconst forms = {\n  advanced: {\n    default: () => {\n      return {\n        items: [\n          [\n            {\n              type: 'dividerDraftPublish',\n            },\n          ],\n          [\n            {\n              label: {\n                id: getTrad('contentType.draftAndPublish.label'),\n              },\n              description: {\n                id: getTrad('contentType.draftAndPublish.description'),\n              },\n              name: 'draftAndPublish',\n              type: 'bool',\n              validations: {},\n            },\n          ],\n          [{ type: 'divider' }],\n          [\n            {\n              autoFocus: true,\n              label: {\n                id: getTrad('contentType.collectionName.label'),\n              },\n              description: {\n                id: getTrad('contentType.collectionName.description'),\n              },\n              name: 'collectionName',\n              type: 'text',\n              validations: {},\n            },\n          ],\n        ],\n      };\n    },\n  },\n  base: {\n    create: value => {\n      return {\n        items: [\n          [\n            nameField,\n            {\n              description: {\n                id: getTrad('contentType.UID.description'),\n              },\n              label: 'UID',\n              name: 'uid',\n              type: 'text',\n              readOnly: true,\n              disabled: true,\n              value,\n            },\n          ],\n        ],\n      };\n    },\n    edit: () => {\n      return {\n        items: [\n          [\n            nameField,\n            {\n              label: {\n                id: getTrad('modalForm.attribute.text.type-selection'),\n              },\n              name: 'kind',\n              type: 'booleanBox',\n              size: 12,\n              onChangeCallback: () =>\n                strapi.notification.toggle({\n                  type: 'info',\n                  message: { id: getTrad('contentType.kind.change.warning') },\n                }),\n              options: [\n                {\n                  headerId: getTrad('menu.section.models.name.singular'),\n                  descriptionId: getTrad('form.button.collection-type.description'),\n                  value: 'collectionType',\n                },\n                {\n                  headerId: getTrad('menu.section.single-types.name.singular'),\n                  descriptionId: getTrad('form.button.single-type.description'),\n                  value: 'singleType',\n                },\n              ],\n              validations: {},\n            },\n          ],\n        ],\n      };\n    },\n  },\n};\n\nexport default forms;\n"]},"metadata":{},"sourceType":"script"}