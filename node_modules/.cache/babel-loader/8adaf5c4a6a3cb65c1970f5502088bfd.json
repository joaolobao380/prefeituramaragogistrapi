{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _icons = require(\"@buffetjs/icons\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _lodash = require(\"lodash\");\n\nvar _reactstrap = require(\"reactstrap\");\n\nvar _permissions = _interopRequireDefault(require(\"../../permissions\"));\n\nvar _hooks = require(\"../../hooks\");\n\nvar _utils = require(\"../../utils\");\n\nvar _ListBaselineAlignment = _interopRequireDefault(require(\"../../components/ListBaselineAlignment\"));\n\nvar _ListRow = _interopRequireDefault(require(\"../../components/ListRow\"));\n\nvar _ModalForm = _interopRequireDefault(require(\"../../components/ModalForm\"));\n\nvar _createProvidersArray = _interopRequireDefault(require(\"./utils/createProvidersArray\"));\n\nvar _forms = _interopRequireDefault(require(\"./utils/forms\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar ProvidersPage = function ProvidersPage() {\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      emitEvent = _useGlobalContext.emitEvent;\n\n  var emitEventRef = (0, _react.useRef)(emitEvent);\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      isSubmiting = _useState4[0],\n      setIsSubmiting = _useState4[1];\n\n  var buttonSubmitRef = (0, _react.useRef)(null);\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      showForm = _useState6[0],\n      setShowForm = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(null),\n      _useState8 = (0, _slicedToArray2[\"default\"])(_useState7, 2),\n      providerToEditName = _useState8[0],\n      setProviderToEditName = _useState8[1];\n\n  var updatePermissions = (0, _react.useMemo)(function () {\n    return {\n      update: _permissions[\"default\"].updateProviders\n    };\n  }, []);\n\n  var _useForm = (0, _hooks.useForm)('providers', updatePermissions),\n      canUpdate = _useForm.allowedActions.canUpdate,\n      dispatchResetForm = _useForm.dispatchResetForm,\n      dispatchSetFormErrors = _useForm.dispatchSetFormErrors,\n      dispatchSubmitSucceeded = _useForm.dispatchSubmitSucceeded,\n      formErrors = _useForm.formErrors,\n      handleChange = _useForm.handleChange,\n      isLoading = _useForm.isLoading,\n      isLoadingForPermissions = _useForm.isLoadingForPermissions,\n      modifiedData = _useForm.modifiedData;\n\n  var providers = (0, _react.useMemo)(function () {\n    return (0, _createProvidersArray[\"default\"])(modifiedData);\n  }, [modifiedData]);\n  var enabledProvidersCount = (0, _react.useMemo)(function () {\n    return providers.filter(function (provider) {\n      return provider.enabled;\n    }).length;\n  }, [providers]);\n  var isProviderWithSubdomain = (0, _react.useMemo)(function () {\n    if (!providerToEditName) {\n      return false;\n    }\n\n    var providerToEdit = providers.find(function (obj) {\n      return obj.name === providerToEditName;\n    });\n    return (0, _lodash.has)(providerToEdit, 'subdomain');\n  }, [providers, providerToEditName]);\n  var disabledProvidersCount = (0, _react.useMemo)(function () {\n    return providers.length - enabledProvidersCount;\n  }, [providers, enabledProvidersCount]);\n  var listTitle = (0, _react.useMemo)(function () {\n    var enabledMessage = formatMessage({\n      id: (0, _utils.getTrad)(\"List.title.providers.enabled.\".concat(enabledProvidersCount > 1 ? 'plural' : 'singular'))\n    }, {\n      number: enabledProvidersCount\n    });\n    var disabledMessage = formatMessage({\n      id: (0, _utils.getTrad)(\"List.title.providers.disabled.\".concat(disabledProvidersCount > 1 ? 'plural' : 'singular'))\n    }, {\n      number: disabledProvidersCount\n    });\n    return \"\".concat(enabledMessage, \" \").concat(disabledMessage);\n  }, [formatMessage, enabledProvidersCount, disabledProvidersCount]);\n  var pageTitle = formatMessage({\n    id: (0, _utils.getTrad)('HeaderNav.link.providers')\n  });\n  var formToRender = (0, _react.useMemo)(function () {\n    if (providerToEditName === 'email') {\n      return _forms[\"default\"].email;\n    }\n\n    if (isProviderWithSubdomain) {\n      return _forms[\"default\"].providersWithSubdomain;\n    }\n\n    return _forms[\"default\"].providers;\n  }, [providerToEditName, isProviderWithSubdomain]);\n  var handleClick = (0, _react.useCallback)(function () {\n    buttonSubmitRef.current.click();\n  }, []);\n  var handleToggle = (0, _react.useCallback)(function () {\n    setIsOpen(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var handleClickEdit = (0, _react.useCallback)(function (provider) {\n    if (canUpdate) {\n      setProviderToEditName(provider.name);\n      handleToggle();\n    }\n  }, [canUpdate, handleToggle]);\n  var handleClosed = (0, _react.useCallback)(function () {\n    setProviderToEditName(null);\n    setShowForm(false);\n    dispatchResetForm();\n  }, [dispatchResetForm]);\n  var handleOpened = (0, _react.useCallback)(function () {\n    setShowForm(true);\n  }, []);\n  var handleSubmit = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(e) {\n      var schema, errors;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              schema = formToRender.schema;\n              errors = {};\n              setIsSubmiting(true);\n              _context.prev = 4;\n              _context.next = 7;\n              return schema.validate(modifiedData[providerToEditName], {\n                abortEarly: false\n              });\n\n            case 7:\n              strapi.lockAppWithOverlay();\n              _context.prev = 8;\n              emitEventRef.current('willEditAuthenticationProvider');\n              _context.next = 12;\n              return (0, _strapiHelperPlugin.request)((0, _utils.getRequestURL)('providers'), {\n                method: 'PUT',\n                body: {\n                  providers: modifiedData\n                }\n              });\n\n            case 12:\n              emitEventRef.current('didEditAuthenticationProvider');\n              strapi.notification.toggle({\n                type: 'success',\n                message: {\n                  id: (0, _utils.getTrad)('notification.success.submit')\n                }\n              });\n              dispatchSubmitSucceeded();\n              handleToggle();\n              _context.next = 22;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](8);\n              console.error(_context.t0);\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n\n            case 22:\n              _context.next = 29;\n              break;\n\n            case 24:\n              _context.prev = 24;\n              _context.t1 = _context[\"catch\"](4);\n              console.error(_context.t1);\n              errors = (0, _strapiHelperPlugin.getYupInnerErrors)(_context.t1);\n              console.log(errors);\n\n            case 29:\n              dispatchSetFormErrors(errors);\n              setIsSubmiting(false);\n              strapi.unlockApp();\n\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 24], [8, 18]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [dispatchSetFormErrors, dispatchSubmitSucceeded, formToRender, handleToggle, modifiedData, providerToEditName]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.SettingsPageTitle, {\n    name: pageTitle\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_custom.Header, {\n    title: {\n      label: pageTitle\n    },\n    isLoading: isLoadingForPermissions || isLoading\n  }), /*#__PURE__*/_react[\"default\"].createElement(_ListBaselineAlignment[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_custom.List, {\n    title: listTitle,\n    items: providers,\n    isLoading: isLoadingForPermissions || isLoading,\n    customRowComponent: function customRowComponent(provider) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_ListRow[\"default\"], (0, _extends2[\"default\"])({}, provider, {\n        onClick: function onClick() {\n          return handleClickEdit(provider);\n        },\n        links: [{\n          icon: canUpdate ? /*#__PURE__*/_react[\"default\"].createElement(_icons.Pencil, {\n            fill: \"#0e1622\"\n          }) : null,\n          onClick: function onClick(e) {\n            e.stopPropagation();\n            handleClickEdit(provider);\n          }\n        }]\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"td\", {\n        key: \"enabled\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n        fontWeight: \"semiBold\",\n        lineHeight: \"18px\",\n        color: provider.enabled ? 'green' : 'lightOrange'\n      }, provider.enabled ? 'Enabled' : 'Disabled')));\n    }\n  })), /*#__PURE__*/_react[\"default\"].createElement(_ModalForm[\"default\"], {\n    isOpen: isOpen,\n    onClick: handleClick,\n    onCancel: handleToggle,\n    isLoading: isSubmiting,\n    onOpened: handleOpened,\n    onClosed: handleClosed,\n    onToggle: handleToggle,\n    headerBreadcrumbs: [(0, _utils.getTrad)('PopUpForm.header.edit.providers'), (0, _lodash.upperFirst)(providerToEditName)]\n  }, showForm && /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactstrap.Row, null, formToRender.form.map(function (input) {\n    var label = input.label.params ? _objectSpread(_objectSpread({}, input.label), {}, {\n      params: {\n        provider: (0, _lodash.upperFirst)(providerToEditName)\n      }\n    }) : input.label;\n    var value = input.name === 'noName' ? \"\".concat(strapi.backendURL, \"/connect/\").concat(providerToEditName, \"/callback\") : (0, _lodash.get)(modifiedData, [providerToEditName].concat((0, _toConsumableArray2[\"default\"])(input.name.split('.'))), '');\n    return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.SizedInput, (0, _extends2[\"default\"])({\n      key: input.name\n    }, input, {\n      label: label,\n      error: formErrors[input.name],\n      name: \"\".concat(providerToEditName, \".\").concat(input.name),\n      onChange: handleChange,\n      value: value\n    }));\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      display: 'none'\n    },\n    ref: buttonSubmitRef\n  }, \"hidden button to use the native form event\"))));\n};\n\nvar _default = ProvidersPage;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-users-permissions/admin/src/containers/Providers/index.js"],"names":["ProvidersPage","formatMessage","emitEvent","emitEventRef","isOpen","setIsOpen","isSubmiting","setIsSubmiting","buttonSubmitRef","showForm","setShowForm","providerToEditName","setProviderToEditName","updatePermissions","update","pluginPermissions","updateProviders","canUpdate","allowedActions","dispatchResetForm","dispatchSetFormErrors","dispatchSubmitSucceeded","formErrors","handleChange","isLoading","isLoadingForPermissions","modifiedData","providers","enabledProvidersCount","filter","provider","enabled","length","isProviderWithSubdomain","providerToEdit","find","obj","name","disabledProvidersCount","listTitle","enabledMessage","id","number","disabledMessage","pageTitle","formToRender","forms","email","providersWithSubdomain","handleClick","current","click","handleToggle","prev","handleClickEdit","handleClosed","handleOpened","handleSubmit","e","preventDefault","schema","errors","validate","abortEarly","strapi","lockAppWithOverlay","method","body","notification","toggle","type","message","console","error","log","unlockApp","label","icon","onClick","stopPropagation","form","map","input","params","value","backendURL","split","display"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Header, List } from '@buffetjs/custom';\nimport { Text } from '@buffetjs/core';\nimport { Pencil } from '@buffetjs/icons';\nimport {\n  SettingsPageTitle,\n  SizedInput,\n  useGlobalContext,\n  getYupInnerErrors,\n  request,\n} from 'strapi-helper-plugin';\nimport { get, upperFirst, has } from 'lodash';\nimport { Row } from 'reactstrap';\nimport pluginPermissions from '../../permissions';\nimport { useForm } from '../../hooks';\nimport { getRequestURL, getTrad } from '../../utils';\nimport ListBaselineAlignment from '../../components/ListBaselineAlignment';\nimport ListRow from '../../components/ListRow';\nimport ModalForm from '../../components/ModalForm';\nimport createProvidersArray from './utils/createProvidersArray';\nimport forms from './utils/forms';\n\nconst ProvidersPage = () => {\n  const { formatMessage } = useIntl();\n  const { emitEvent } = useGlobalContext();\n  const emitEventRef = useRef(emitEvent);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSubmiting, setIsSubmiting] = useState(false);\n  const buttonSubmitRef = useRef(null);\n  const [showForm, setShowForm] = useState(false);\n  const [providerToEditName, setProviderToEditName] = useState(null);\n\n  const updatePermissions = useMemo(() => {\n    return { update: pluginPermissions.updateProviders };\n  }, []);\n\n  const {\n    allowedActions: { canUpdate },\n    dispatchResetForm,\n    dispatchSetFormErrors,\n    dispatchSubmitSucceeded,\n    formErrors,\n    handleChange,\n    isLoading,\n    isLoadingForPermissions,\n    modifiedData,\n  } = useForm('providers', updatePermissions);\n\n  const providers = useMemo(() => createProvidersArray(modifiedData), [modifiedData]);\n  const enabledProvidersCount = useMemo(\n    () => providers.filter(provider => provider.enabled).length,\n    [providers]\n  );\n  const isProviderWithSubdomain = useMemo(() => {\n    if (!providerToEditName) {\n      return false;\n    }\n\n    const providerToEdit = providers.find(obj => obj.name === providerToEditName);\n\n    return has(providerToEdit, 'subdomain');\n  }, [providers, providerToEditName]);\n  const disabledProvidersCount = useMemo(() => {\n    return providers.length - enabledProvidersCount;\n  }, [providers, enabledProvidersCount]);\n\n  const listTitle = useMemo(() => {\n    const enabledMessage = formatMessage(\n      {\n        id: getTrad(\n          `List.title.providers.enabled.${enabledProvidersCount > 1 ? 'plural' : 'singular'}`\n        ),\n      },\n      { number: enabledProvidersCount }\n    );\n    const disabledMessage = formatMessage(\n      {\n        id: getTrad(\n          `List.title.providers.disabled.${disabledProvidersCount > 1 ? 'plural' : 'singular'}`\n        ),\n      },\n      { number: disabledProvidersCount }\n    );\n\n    return `${enabledMessage} ${disabledMessage}`;\n  }, [formatMessage, enabledProvidersCount, disabledProvidersCount]);\n\n  const pageTitle = formatMessage({ id: getTrad('HeaderNav.link.providers') });\n\n  const formToRender = useMemo(() => {\n    if (providerToEditName === 'email') {\n      return forms.email;\n    }\n\n    if (isProviderWithSubdomain) {\n      return forms.providersWithSubdomain;\n    }\n\n    return forms.providers;\n  }, [providerToEditName, isProviderWithSubdomain]);\n\n  const handleClick = useCallback(() => {\n    buttonSubmitRef.current.click();\n  }, []);\n\n  const handleToggle = useCallback(() => {\n    setIsOpen(prev => !prev);\n  }, []);\n\n  const handleClickEdit = useCallback(\n    provider => {\n      if (canUpdate) {\n        setProviderToEditName(provider.name);\n        handleToggle();\n      }\n    },\n    [canUpdate, handleToggle]\n  );\n\n  const handleClosed = useCallback(() => {\n    setProviderToEditName(null);\n    setShowForm(false);\n    dispatchResetForm();\n  }, [dispatchResetForm]);\n\n  const handleOpened = useCallback(() => {\n    setShowForm(true);\n  }, []);\n\n  const handleSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      const { schema } = formToRender;\n      let errors = {};\n\n      setIsSubmiting(true);\n\n      try {\n        await schema.validate(modifiedData[providerToEditName], { abortEarly: false });\n        strapi.lockAppWithOverlay();\n\n        try {\n          emitEventRef.current('willEditAuthenticationProvider');\n\n          await request(getRequestURL('providers'), {\n            method: 'PUT',\n            body: { providers: modifiedData },\n          });\n\n          emitEventRef.current('didEditAuthenticationProvider');\n\n          strapi.notification.toggle({\n            type: 'success',\n            message: { id: getTrad('notification.success.submit') },\n          });\n\n          dispatchSubmitSucceeded();\n\n          handleToggle();\n        } catch (err) {\n          console.error(err);\n          strapi.notification.toggle({\n            type: 'warning',\n            message: { id: 'notification.error' },\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        errors = getYupInnerErrors(err);\n        console.log(errors);\n      }\n\n      dispatchSetFormErrors(errors);\n\n      setIsSubmiting(false);\n      strapi.unlockApp();\n    },\n    [\n      dispatchSetFormErrors,\n      dispatchSubmitSucceeded,\n      formToRender,\n      handleToggle,\n      modifiedData,\n      providerToEditName,\n    ]\n  );\n\n  return (\n    <>\n      <SettingsPageTitle name={pageTitle} />\n      <div>\n        <Header title={{ label: pageTitle }} isLoading={isLoadingForPermissions || isLoading} />\n        <ListBaselineAlignment />\n        <List\n          title={listTitle}\n          items={providers}\n          isLoading={isLoadingForPermissions || isLoading}\n          customRowComponent={provider => (\n            <ListRow\n              {...provider}\n              onClick={() => handleClickEdit(provider)}\n              links={[\n                {\n                  icon: canUpdate ? <Pencil fill=\"#0e1622\" /> : null,\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleClickEdit(provider);\n                  },\n                },\n              ]}\n            >\n              <td key=\"enabled\">\n                <Text\n                  fontWeight=\"semiBold\"\n                  lineHeight=\"18px\"\n                  color={provider.enabled ? 'green' : 'lightOrange'}\n                >\n                  {provider.enabled ? 'Enabled' : 'Disabled'}\n                </Text>\n              </td>\n            </ListRow>\n          )}\n        />\n      </div>\n      <ModalForm\n        isOpen={isOpen}\n        onClick={handleClick}\n        onCancel={handleToggle}\n        isLoading={isSubmiting}\n        onOpened={handleOpened}\n        onClosed={handleClosed}\n        onToggle={handleToggle}\n        headerBreadcrumbs={[\n          getTrad('PopUpForm.header.edit.providers'),\n          upperFirst(providerToEditName),\n        ]}\n      >\n        {showForm && (\n          <form onSubmit={handleSubmit}>\n            <Row>\n              {formToRender.form.map(input => {\n                const label = input.label.params\n                  ? { ...input.label, params: { provider: upperFirst(providerToEditName) } }\n                  : input.label;\n\n                const value =\n                  input.name === 'noName'\n                    ? `${strapi.backendURL}/connect/${providerToEditName}/callback`\n                    : get(modifiedData, [providerToEditName, ...input.name.split('.')], '');\n\n                return (\n                  <SizedInput\n                    key={input.name}\n                    {...input}\n                    label={label}\n                    error={formErrors[input.name]}\n                    name={`${providerToEditName}.${input.name}`}\n                    onChange={handleChange}\n                    value={value}\n                  />\n                );\n              })}\n            </Row>\n            <button type=\"submit\" style={{ display: 'none' }} ref={buttonSubmitRef}>\n              hidden button to use the native form event\n            </button>\n          </form>\n        )}\n      </ModalForm>\n    </>\n  );\n};\n\nexport default ProvidersPage;\n"]},"metadata":{},"sourceType":"script"}