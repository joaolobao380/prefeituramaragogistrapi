{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _icons = require(\"@buffetjs/icons\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactCopyToClipboard = require(\"react-copy-to-clipboard\");\n\nvar _IconWrapper = _interopRequireDefault(require(\"./IconWrapper\"));\n\nvar _Envelope = _interopRequireDefault(require(\"./Envelope\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\n// This component is a work in progress\n// It's made to be used when the users API is ready\nvar LinkNotification = function LinkNotification(_ref) {\n  var target = _ref.target,\n      children = _ref.children;\n\n  var handleCopy = function handleCopy() {\n    strapi.notification.toggle({\n      type: 'info',\n      message: {\n        id: 'notification.link-copied'\n      }\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_IconWrapper[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_Envelope[\"default\"], null)), /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, {\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    fontWeight: \"semiBold\",\n    color: \"black\",\n    fontSize: \"md\",\n    lineHeight: \"18px\"\n  }, target, /*#__PURE__*/_react[\"default\"].createElement(_reactCopyToClipboard.CopyToClipboard, {\n    onCopy: handleCopy,\n    text: target\n  }, /*#__PURE__*/_react[\"default\"].createElement(_icons.Duplicate, {\n    fill: \"#8B91A0\",\n    className: \"icon-duplicate\"\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    fontWeight: \"regular\",\n    color: \"grey\",\n    fontSize: \"sm\",\n    lineHeight: \"18px\"\n  }, children)));\n};\n\nLinkNotification.defaultProps = {\n  target: '',\n  children: ''\n};\nLinkNotification.propTypes = {\n  target: _propTypes[\"default\"].string,\n  children: _propTypes[\"default\"].string\n};\nvar _default = LinkNotification;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/components/Users/LinkNotification/index.js"],"names":["LinkNotification","target","children","handleCopy","strapi","notification","toggle","type","message","id","defaultProps","propTypes","PropTypes","string"],"mappings":";;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AATA;AACA;AAUA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA0B;AAAA,MAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACjD,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2B;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN;AAAzB,KAA3B;AACD,GAFD;;AAIA,sBACE,gCAAC,mBAAD,qBACE,gCAAC,uBAAD,qBACE,gCAAC,oBAAD,OADF,CADF,eAIE,gCAAC,UAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAA6B,IAAA,cAAc,EAAC;AAA5C,kBACE,gCAAC,UAAD;AAAM,IAAA,UAAU,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAC,OAAlC;AAA0C,IAAA,QAAQ,EAAC,IAAnD;AAAwD,IAAA,UAAU,EAAC;AAAnE,KACGR,MADH,eAEE,gCAAC,qCAAD;AAAiB,IAAA,MAAM,EAAEE,UAAzB;AAAqC,IAAA,IAAI,EAAEF;AAA3C,kBACE,gCAAC,gBAAD;AAAW,IAAA,IAAI,EAAC,SAAhB;AAA0B,IAAA,SAAS,EAAC;AAApC,IADF,CAFF,CADF,eAOE,gCAAC,UAAD;AAAM,IAAA,UAAU,EAAC,SAAjB;AAA2B,IAAA,KAAK,EAAC,MAAjC;AAAwC,IAAA,QAAQ,EAAC,IAAjD;AAAsD,IAAA,UAAU,EAAC;AAAjE,KACGC,QADH,CAPF,CAJF,CADF;AAkBD,CAvBD;;AAyBAF,gBAAgB,CAACU,YAAjB,GAAgC;AAC9BT,EAAAA,MAAM,EAAE,EADsB;AAE9BC,EAAAA,QAAQ,EAAE;AAFoB,CAAhC;AAKAF,gBAAgB,CAACW,SAAjB,GAA6B;AAC3BV,EAAAA,MAAM,EAAEW,sBAAUC,MADS;AAE3BX,EAAAA,QAAQ,EAAEU,sBAAUC;AAFO,CAA7B;eAKeb,gB","sourcesContent":["// This component is a work in progress\n// It's made to be used when the users API is ready\nimport React from 'react';\nimport { Flex, Text } from '@buffetjs/core';\nimport { Duplicate } from '@buffetjs/icons';\nimport PropTypes from 'prop-types';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport IconWrapper from './IconWrapper';\nimport Envelope from './Envelope';\nimport Wrapper from './Wrapper';\n\nconst LinkNotification = ({ target, children }) => {\n  const handleCopy = () => {\n    strapi.notification.toggle({ type: 'info', message: { id: 'notification.link-copied' } });\n  };\n\n  return (\n    <Wrapper>\n      <IconWrapper>\n        <Envelope />\n      </IconWrapper>\n      <Flex flexDirection=\"column\" justifyContent=\"center\">\n        <Text fontWeight=\"semiBold\" color=\"black\" fontSize=\"md\" lineHeight=\"18px\">\n          {target}\n          <CopyToClipboard onCopy={handleCopy} text={target}>\n            <Duplicate fill=\"#8B91A0\" className=\"icon-duplicate\" />\n          </CopyToClipboard>\n        </Text>\n        <Text fontWeight=\"regular\" color=\"grey\" fontSize=\"sm\" lineHeight=\"18px\">\n          {children}\n        </Text>\n      </Flex>\n    </Wrapper>\n  );\n};\n\nLinkNotification.defaultProps = {\n  target: '',\n  children: '',\n};\n\nLinkNotification.propTypes = {\n  target: PropTypes.string,\n  children: PropTypes.string,\n};\n\nexport default LinkNotification;\n"]},"metadata":{},"sourceType":"script"}