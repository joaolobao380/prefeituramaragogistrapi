{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBlockStyle = getBlockStyle;\nexports.getBlockContent = getBlockContent;\nexports.getOffSets = getOffSets;\nexports.getKeyCommandData = getKeyCommandData;\nexports.getDefaultSelectionOffsets = void 0;\n\nvar _lodash = require(\"lodash\");\n\n/**\n * Override the editor css\n * @param  {[type]} block [description]\n * @return {[type]}       [description]\n */\nfunction getBlockStyle() {\n  return null;\n}\n\nfunction getBlockContent(style) {\n  switch (style) {\n    case 'IMG':\n      return {\n        innerContent: 'link',\n        endReplacer: ')',\n        startReplacer: '![text]('\n      };\n\n    case 'CODE':\n      return {\n        innerContent: 'code block',\n        endReplacer: '`',\n        startReplacer: '`'\n      };\n\n    case 'BLOCKQUOTE':\n      return {\n        innerContent: 'quote',\n        endReplacer: '',\n        startReplacer: '> '\n      };\n\n    case 'BOLD':\n      return {\n        innerContent: 'bold text',\n        endReplacer: '*',\n        startReplacer: '*'\n      };\n\n    case 'ITALIC':\n      return {\n        innerContent: 'italic text',\n        endReplacer: '*',\n        startReplacer: '*'\n      };\n\n    case 'STRIKED':\n      return {\n        innerContent: 'striked out',\n        endReplacer: '~',\n        startReplacer: '~'\n      };\n\n    case 'UNDERLINE':\n      return {\n        innerContent: 'underlined text',\n        endReplacer: '<u>',\n        startReplacer: '</u>'\n      };\n\n    case 'LINK':\n      return {\n        innerContent: 'text',\n        endReplacer: ']',\n        startReplacer: '['\n      };\n\n    default:\n      return {\n        innerContent: '',\n        endReplacer: '',\n        startReplacer: ''\n      };\n  }\n}\n\nvar getDefaultSelectionOffsets = function getDefaultSelectionOffsets(content, startReplacer, endReplacer) {\n  var initPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return {\n    anchorOffset: initPosition + content.length - (0, _lodash.trimStart)(content, startReplacer).length,\n    focusOffset: initPosition + (0, _lodash.trimEnd)(content, endReplacer).length\n  };\n};\n/**\n * Get the start and end offset\n * @param  {Object} selection\n * @return {Object}\n */\n\n\nexports.getDefaultSelectionOffsets = getDefaultSelectionOffsets;\n\nfunction getOffSets(selection) {\n  return {\n    end: selection.getEndOffset(),\n    start: selection.getStartOffset()\n  };\n}\n\nfunction getKeyCommandData(command) {\n  var content;\n  var style;\n\n  switch (command) {\n    case 'bold':\n      content = '**textToReplace**';\n      style = 'BOLD';\n      break;\n\n    case 'italic':\n      content = '*textToReplace*';\n      style = 'ITALIC';\n      break;\n\n    case 'underline':\n      content = '<u>textToReplace</u>';\n      style = 'UNDERLINE';\n      break;\n\n    default:\n      content = '';\n      style = '';\n  }\n\n  return {\n    content: content,\n    style: style\n  };\n}","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-content-manager/admin/src/components/Wysiwyg/helpers.js"],"names":["getBlockStyle","getBlockContent","style","innerContent","endReplacer","startReplacer","getDefaultSelectionOffsets","content","initPosition","anchorOffset","length","focusOffset","getOffSets","selection","end","getEndOffset","start","getStartOffset","getKeyCommandData","command"],"mappings":"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","sourcesContent":["import { trimEnd, trimStart } from 'lodash';\n/**\n * Override the editor css\n * @param  {[type]} block [description]\n * @return {[type]}       [description]\n */\n\nexport function getBlockStyle() {\n  return null;\n}\n\nexport function getBlockContent(style) {\n  switch (style) {\n    case 'IMG':\n      return {\n        innerContent: 'link',\n        endReplacer: ')',\n        startReplacer: '![text](',\n      };\n    case 'CODE':\n      return {\n        innerContent: 'code block',\n        endReplacer: '`',\n        startReplacer: '`',\n      };\n    case 'BLOCKQUOTE':\n      return {\n        innerContent: 'quote',\n        endReplacer: '',\n        startReplacer: '> ',\n      };\n    case 'BOLD':\n      return {\n        innerContent: 'bold text',\n        endReplacer: '*',\n        startReplacer: '*',\n      };\n    case 'ITALIC':\n      return {\n        innerContent: 'italic text',\n        endReplacer: '*',\n        startReplacer: '*',\n      };\n    case 'STRIKED':\n      return {\n        innerContent: 'striked out',\n        endReplacer: '~',\n        startReplacer: '~',\n      };\n    case 'UNDERLINE':\n      return {\n        innerContent: 'underlined text',\n        endReplacer: '<u>',\n        startReplacer: '</u>',\n      };\n    case 'LINK':\n      return {\n        innerContent: 'text',\n        endReplacer: ']',\n        startReplacer: '[',\n      };\n    default:\n      return {\n        innerContent: '',\n        endReplacer: '',\n        startReplacer: '',\n      };\n  }\n}\n\nexport const getDefaultSelectionOffsets = (\n  content,\n  startReplacer,\n  endReplacer,\n  initPosition = 0\n) => ({\n  anchorOffset: initPosition + content.length - trimStart(content, startReplacer).length,\n  focusOffset: initPosition + trimEnd(content, endReplacer).length,\n});\n\n/**\n * Get the start and end offset\n * @param  {Object} selection\n * @return {Object}\n */\nexport function getOffSets(selection) {\n  return {\n    end: selection.getEndOffset(),\n    start: selection.getStartOffset(),\n  };\n}\n\nexport function getKeyCommandData(command) {\n  let content;\n  let style;\n\n  switch (command) {\n    case 'bold':\n      content = '**textToReplace**';\n      style = 'BOLD';\n      break;\n    case 'italic':\n      content = '*textToReplace*';\n      style = 'ITALIC';\n      break;\n    case 'underline':\n      content = '<u>textToReplace</u>';\n      style = 'UNDERLINE';\n      break;\n    default:\n      content = '';\n      style = '';\n  }\n\n  return { content, style };\n}\n"]},"metadata":{},"sourceType":"script"}