{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _immer = _interopRequireDefault(require(\"immer\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _constants = require(\"./constants\");\n\nvar initialState = {\n  notifId: 0,\n  notifications: []\n};\n\nvar notificationReducer = function notificationReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return (// eslint-disable-next-line consistent-return\n    (0, _immer[\"default\"])(state, function (draftState) {\n      switch (action.type) {\n        case _constants.SHOW_NEW_NOTIFICATION:\n          {\n            draftState.notifications.push({\n              // No action.config spread to limit the notification API and avoid customization\n              id: state.notifId,\n              type: (0, _lodash.get)(action, ['config', 'type'], 'success'),\n              message: (0, _lodash.get)(action, ['config', 'message'], {\n                id: 'notification.success.saved',\n                defaultMessage: 'Saved'\n              }),\n              title: (0, _lodash.get)(action, ['config', 'title'], null),\n              link: (0, _lodash.get)(action, ['config', 'link'], null),\n              timeout: (0, _lodash.get)(action, ['config', 'timeout'], 2500),\n              blockTransition: (0, _lodash.get)(action, ['config', 'blockTransition'], false),\n              uid: (0, _lodash.get)(action, ['config', 'uid'], null),\n              onClose: (0, _lodash.get)(action, ['config', 'onClose'], null),\n              centered: (0, _lodash.get)(action, ['config', 'centered'], false)\n            });\n            draftState.notifId = state.notifId + 1;\n            break;\n          }\n\n        case _constants.HIDE_NEW_NOTIFICATION:\n          {\n            var indexToRemove = state.notifications.findIndex(function (notif) {\n              return notif.id === action.id;\n            });\n\n            if (indexToRemove !== -1) {\n              draftState.notifications.splice(indexToRemove, 1);\n            }\n\n            break;\n          }\n\n        default:\n          {\n            return draftState;\n          }\n      }\n    })\n  );\n};\n\nvar _default = notificationReducer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/containers/NewNotification/reducer.js"],"names":["initialState","notifId","notifications","notificationReducer","state","action","draftState","type","SHOW_NEW_NOTIFICATION","push","id","message","defaultMessage","title","link","timeout","blockTransition","uid","onClose","centered","HIDE_NEW_NOTIFICATION","indexToRemove","findIndex","notif","splice"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,aAAa,EAAE;AAFI,CAArB;;AAKA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,MAACC,KAAD,uEAASJ,YAAT;AAAA,MAAuBK,MAAvB;AAAA,SAC1B;AACA,2BAAQD,KAAR,EAAe,UAAAE,UAAU,EAAI;AAC3B,cAAQD,MAAM,CAACE,IAAf;AACE,aAAKC,gCAAL;AAA4B;AAC1BF,YAAAA,UAAU,CAACJ,aAAX,CAAyBO,IAAzB,CAA8B;AAC5B;AACAC,cAAAA,EAAE,EAAEN,KAAK,CAACH,OAFkB;AAG5BM,cAAAA,IAAI,EAAE,iBAAIF,MAAJ,EAAY,CAAC,QAAD,EAAW,MAAX,CAAZ,EAAgC,SAAhC,CAHsB;AAI5BM,cAAAA,OAAO,EAAE,iBAAIN,MAAJ,EAAY,CAAC,QAAD,EAAW,SAAX,CAAZ,EAAmC;AAC1CK,gBAAAA,EAAE,EAAE,4BADsC;AAE1CE,gBAAAA,cAAc,EAAE;AAF0B,eAAnC,CAJmB;AAQ5BC,cAAAA,KAAK,EAAE,iBAAIR,MAAJ,EAAY,CAAC,QAAD,EAAW,OAAX,CAAZ,EAAiC,IAAjC,CARqB;AAS5BS,cAAAA,IAAI,EAAE,iBAAIT,MAAJ,EAAY,CAAC,QAAD,EAAW,MAAX,CAAZ,EAAgC,IAAhC,CATsB;AAU5BU,cAAAA,OAAO,EAAE,iBAAIV,MAAJ,EAAY,CAAC,QAAD,EAAW,SAAX,CAAZ,EAAmC,IAAnC,CAVmB;AAW5BW,cAAAA,eAAe,EAAE,iBAAIX,MAAJ,EAAY,CAAC,QAAD,EAAW,iBAAX,CAAZ,EAA2C,KAA3C,CAXW;AAY5BY,cAAAA,GAAG,EAAE,iBAAIZ,MAAJ,EAAY,CAAC,QAAD,EAAW,KAAX,CAAZ,EAA+B,IAA/B,CAZuB;AAa5Ba,cAAAA,OAAO,EAAE,iBAAIb,MAAJ,EAAY,CAAC,QAAD,EAAW,SAAX,CAAZ,EAAmC,IAAnC,CAbmB;AAc5Bc,cAAAA,QAAQ,EAAE,iBAAId,MAAJ,EAAY,CAAC,QAAD,EAAW,UAAX,CAAZ,EAAoC,KAApC;AAdkB,aAA9B;AAgBAC,YAAAA,UAAU,CAACL,OAAX,GAAqBG,KAAK,CAACH,OAAN,GAAgB,CAArC;AACA;AACD;;AACD,aAAKmB,gCAAL;AAA4B;AAC1B,gBAAMC,aAAa,GAAGjB,KAAK,CAACF,aAAN,CAAoBoB,SAApB,CAA8B,UAAAC,KAAK;AAAA,qBAAIA,KAAK,CAACb,EAAN,KAAaL,MAAM,CAACK,EAAxB;AAAA,aAAnC,CAAtB;;AAEA,gBAAIW,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBf,cAAAA,UAAU,CAACJ,aAAX,CAAyBsB,MAAzB,CAAgCH,aAAhC,EAA+C,CAA/C;AACD;;AACD;AACD;;AAED;AAAS;AACP,mBAAOf,UAAP;AACD;AAhCH;AAkCD,KAnCD;AAF0B;AAAA,CAA5B;;eAuCeH,mB","sourcesContent":["import produce from 'immer';\nimport { get } from 'lodash';\nimport { SHOW_NEW_NOTIFICATION, HIDE_NEW_NOTIFICATION } from './constants';\n\nconst initialState = {\n  notifId: 0,\n  notifications: [],\n};\n\nconst notificationReducer = (state = initialState, action) =>\n  // eslint-disable-next-line consistent-return\n  produce(state, draftState => {\n    switch (action.type) {\n      case SHOW_NEW_NOTIFICATION: {\n        draftState.notifications.push({\n          // No action.config spread to limit the notification API and avoid customization\n          id: state.notifId,\n          type: get(action, ['config', 'type'], 'success'),\n          message: get(action, ['config', 'message'], {\n            id: 'notification.success.saved',\n            defaultMessage: 'Saved',\n          }),\n          title: get(action, ['config', 'title'], null),\n          link: get(action, ['config', 'link'], null),\n          timeout: get(action, ['config', 'timeout'], 2500),\n          blockTransition: get(action, ['config', 'blockTransition'], false),\n          uid: get(action, ['config', 'uid'], null),\n          onClose: get(action, ['config', 'onClose'], null),\n          centered: get(action, ['config', 'centered'], false),\n        });\n        draftState.notifId = state.notifId + 1;\n        break;\n      }\n      case HIDE_NEW_NOTIFICATION: {\n        const indexToRemove = state.notifications.findIndex(notif => notif.id === action.id);\n\n        if (indexToRemove !== -1) {\n          draftState.notifications.splice(indexToRemove, 1);\n        }\n        break;\n      }\n\n      default: {\n        return draftState;\n      }\n    }\n  });\n\nexport default notificationReducer;\n"]},"metadata":{},"sourceType":"script"}