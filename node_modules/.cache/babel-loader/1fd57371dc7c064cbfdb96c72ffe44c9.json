{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = require(\"prop-types\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _NameInput = _interopRequireDefault(require(\"./NameInput\"));\n\nvar _FormBloc = _interopRequireDefault(require(\"../../FormBloc\"));\n\nvar _SizedInput = _interopRequireDefault(require(\"../../SizedInput\"));\n\nvar _ButtonWithNumber = _interopRequireDefault(require(\"../ButtonWithNumber\"));\n\nvar RoleForm = function RoleForm(_ref) {\n  var disabled = _ref.disabled,\n      role = _ref.role,\n      values = _ref.values,\n      errors = _ref.errors,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      isLoading = _ref.isLoading;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var actions = [/*#__PURE__*/_react[\"default\"].createElement(_ButtonWithNumber[\"default\"], {\n    number: role.usersCount,\n    onClick: function onClick() {\n      return console.log('Open user modal');\n    },\n    key: \"user-button\"\n  }, formatMessage({\n    id: 'Settings.roles.form.button.users-with-role',\n    defaultMessage: 'Users with this role'\n  }))];\n  return /*#__PURE__*/_react[\"default\"].createElement(_FormBloc[\"default\"], {\n    actions: actions,\n    isLoading: isLoading,\n    title:\n    /* eslint-disable indent */\n    role ? role.name : formatMessage({\n      id: 'Settings.roles.form.title',\n      defaultMessage: 'Details'\n    }),\n    subtitle: role ? role.description : formatMessage({\n      id: 'Settings.roles.form.description',\n      defaultMessage: 'Name and description of the role'\n    })\n    /* eslint-enable indent */\n\n  }, /*#__PURE__*/_react[\"default\"].createElement(_NameInput[\"default\"], {\n    disabled: disabled,\n    label: \"Settings.roles.form.input.name\",\n    defaultMessage: \"Name\",\n    name: \"name\",\n    type: \"text\",\n    error: errors.name ? {\n      id: errors.name\n    } : null,\n    onBlur: onBlur,\n    value: values.name,\n    onChange: onChange\n  }), /*#__PURE__*/_react[\"default\"].createElement(_SizedInput[\"default\"], {\n    disabled: disabled,\n    label: \"Settings.roles.form.input.description\",\n    defaultMessage: \"Description\",\n    name: \"description\",\n    type: \"textarea\",\n    onBlur: onBlur,\n    value: values.description,\n    onChange: onChange // Override the default height of the textarea\n    ,\n    style: {\n      height: 115\n    }\n  }));\n};\n\nRoleForm.defaultProps = {\n  disabled: false,\n  isLoading: false,\n  role: null,\n  values: {\n    name: '',\n    description: ''\n  }\n};\nRoleForm.propTypes = {\n  disabled: _propTypes.PropTypes.bool,\n  errors: _propTypes.PropTypes.object.isRequired,\n  isLoading: _propTypes.PropTypes.bool,\n  onBlur: _propTypes.PropTypes.func.isRequired,\n  onChange: _propTypes.PropTypes.func.isRequired,\n  role: _propTypes.PropTypes.object,\n  values: _propTypes.PropTypes.object\n};\nvar _default = RoleForm;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/components/Roles/RoleForm/RoleForm.js"],"names":["RoleForm","disabled","role","values","errors","onChange","onBlur","isLoading","formatMessage","actions","usersCount","console","log","id","defaultMessage","name","description","height","defaultProps","propTypes","PropTypes","bool","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport NameInput from './NameInput';\n\nimport FormCard from '../../FormBloc';\nimport SizedInput from '../../SizedInput';\nimport ButtonWithNumber from '../ButtonWithNumber';\n\nconst RoleForm = ({ disabled, role, values, errors, onChange, onBlur, isLoading }) => {\n  const { formatMessage } = useIntl();\n\n  const actions = [\n    <ButtonWithNumber\n      number={role.usersCount}\n      onClick={() => console.log('Open user modal')}\n      key=\"user-button\"\n    >\n      {formatMessage({\n        id: 'Settings.roles.form.button.users-with-role',\n        defaultMessage: 'Users with this role',\n      })}\n    </ButtonWithNumber>,\n  ];\n\n  return (\n    <FormCard\n      actions={actions}\n      isLoading={isLoading}\n      title={\n        /* eslint-disable indent */\n        role\n          ? role.name\n          : formatMessage({\n              id: 'Settings.roles.form.title',\n              defaultMessage: 'Details',\n            })\n      }\n      subtitle={\n        role\n          ? role.description\n          : formatMessage({\n              id: 'Settings.roles.form.description',\n              defaultMessage: 'Name and description of the role',\n            })\n      }\n      /* eslint-enable indent */\n    >\n      <NameInput\n        disabled={disabled}\n        label=\"Settings.roles.form.input.name\"\n        defaultMessage=\"Name\"\n        name=\"name\"\n        type=\"text\"\n        error={errors.name ? { id: errors.name } : null}\n        onBlur={onBlur}\n        value={values.name}\n        onChange={onChange}\n      />\n\n      <SizedInput\n        disabled={disabled}\n        label=\"Settings.roles.form.input.description\"\n        defaultMessage=\"Description\"\n        name=\"description\"\n        type=\"textarea\"\n        onBlur={onBlur}\n        value={values.description}\n        onChange={onChange}\n        // Override the default height of the textarea\n        style={{ height: 115 }}\n      />\n    </FormCard>\n  );\n};\n\nRoleForm.defaultProps = {\n  disabled: false,\n  isLoading: false,\n  role: null,\n  values: { name: '', description: '' },\n};\nRoleForm.propTypes = {\n  disabled: PropTypes.bool,\n  errors: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool,\n  onBlur: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  role: PropTypes.object,\n  values: PropTypes.object,\n};\n\nexport default RoleForm;\n"]},"metadata":{},"sourceType":"script"}