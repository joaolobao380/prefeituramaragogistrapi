{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _merge = _interopRequireDefault(require(\"lodash/merge\"));\n\nvar _cloneDeep = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\nvar _qs = require(\"qs\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _pluginId = _interopRequireDefault(require(\"../pluginId\"));\n\nvar addCommonFieldsToInitialDataMiddleware = function addCommonFieldsToInitialDataMiddleware() {\n  return function (_ref) {\n    var getState = _ref.getState,\n        dispatch = _ref.dispatch;\n    return function (next) {\n      return function (action) {\n        if (action.type !== 'ContentManager/CrudReducer/INIT_FORM') {\n          return next(action);\n        }\n\n        if (!action.rawQuery) {\n          return next(action);\n        }\n\n        var search = action.rawQuery.substring(1);\n        var query = (0, _qs.parse)(search);\n        var relatedEntityId = (0, _get[\"default\"])(query, 'plugins.i18n.relatedEntityId', null);\n        var locale = (0, _get[\"default\"])(query, 'plugins.i18n.locale', null);\n        var isSingleType = action.isSingleType;\n\n        if (!relatedEntityId && !isSingleType) {\n          return next(action);\n        }\n\n        var cmDataStore = getState().get('content-manager_editViewCrudReducer');\n        var cmLayoutStore = getState().get('content-manager_editViewLayoutManager');\n        var contentTypeDataStructure = cmDataStore.contentTypeDataStructure;\n        var currentLayout = cmLayoutStore.currentLayout;\n\n        var getData = /*#__PURE__*/function () {\n          var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n            var defaultDataStructure, requestURL, body, data, nonLocalizedFields, localizations, merged, fieldsToRemove, cleanedMerged;\n            return _regenerator[\"default\"].wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    // Show a loader\n                    dispatch({\n                      type: 'ContentManager/CrudReducer/GET_DATA'\n                    });\n                    defaultDataStructure = (0, _cloneDeep[\"default\"])(contentTypeDataStructure);\n                    _context.prev = 2;\n                    requestURL = \"/\".concat(_pluginId[\"default\"], \"/content-manager/actions/get-non-localized-fields\");\n                    body = {\n                      model: currentLayout.contentType.uid,\n                      id: relatedEntityId,\n                      locale: locale\n                    };\n                    _context.next = 7;\n                    return (0, _strapiHelperPlugin.request)(requestURL, {\n                      method: 'POST',\n                      body: body\n                    });\n\n                  case 7:\n                    data = _context.sent;\n                    nonLocalizedFields = data.nonLocalizedFields, localizations = data.localizations;\n                    merged = (0, _merge[\"default\"])(defaultDataStructure, nonLocalizedFields);\n                    fieldsToRemove = ['created_by', 'updated_by', 'published_at', 'id', '_id', 'updated_at', 'created_at'];\n                    cleanedMerged = (0, _strapiHelperPlugin.contentManagementUtilRemoveFieldsFromData)(merged, currentLayout.contentType, currentLayout.components, fieldsToRemove);\n                    cleanedMerged.localizations = localizations;\n                    action.data = (0, _strapiHelperPlugin.formatComponentData)(cleanedMerged, currentLayout.contentType, currentLayout.components);\n                    _context.next = 18;\n                    break;\n\n                  case 16:\n                    _context.prev = 16;\n                    _context.t0 = _context[\"catch\"](2);\n\n                  case 18:\n                    return _context.abrupt(\"return\", next(action));\n\n                  case 19:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[2, 16]]);\n          }));\n\n          return function getData() {\n            return _ref2.apply(this, arguments);\n          };\n        }();\n\n        return getData();\n      };\n    };\n  };\n};\n\nvar _default = addCommonFieldsToInitialDataMiddleware;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-i18n/admin/src/middlewares/addCommonFieldsToInitialDataMiddleware.js"],"names":["addCommonFieldsToInitialDataMiddleware","getState","dispatch","next","action","type","rawQuery","search","substring","query","relatedEntityId","locale","isSingleType","cmDataStore","get","cmLayoutStore","contentTypeDataStructure","currentLayout","getData","defaultDataStructure","requestURL","pluginId","body","model","contentType","uid","id","method","data","nonLocalizedFields","localizations","merged","fieldsToRemove","cleanedMerged","components"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { parse } from 'qs';\nimport {\n  request,\n  formatComponentData,\n  contentManagementUtilRemoveFieldsFromData,\n} from 'strapi-helper-plugin';\nimport pluginId from '../pluginId';\n\nconst addCommonFieldsToInitialDataMiddleware = () => ({ getState, dispatch }) => next => action => {\n  if (action.type !== 'ContentManager/CrudReducer/INIT_FORM') {\n    return next(action);\n  }\n\n  if (!action.rawQuery) {\n    return next(action);\n  }\n\n  const search = action.rawQuery.substring(1);\n  const query = parse(search);\n  const relatedEntityId = get(query, 'plugins.i18n.relatedEntityId', null);\n  const locale = get(query, 'plugins.i18n.locale', null);\n  const isSingleType = action.isSingleType;\n\n  if (!relatedEntityId && !isSingleType) {\n    return next(action);\n  }\n\n  const cmDataStore = getState().get('content-manager_editViewCrudReducer');\n  const cmLayoutStore = getState().get('content-manager_editViewLayoutManager');\n  const { contentTypeDataStructure } = cmDataStore;\n  const { currentLayout } = cmLayoutStore;\n\n  const getData = async () => {\n    // Show a loader\n    dispatch({ type: 'ContentManager/CrudReducer/GET_DATA' });\n    const defaultDataStructure = cloneDeep(contentTypeDataStructure);\n\n    try {\n      const requestURL = `/${pluginId}/content-manager/actions/get-non-localized-fields`;\n      const body = { model: currentLayout.contentType.uid, id: relatedEntityId, locale };\n\n      const data = await request(requestURL, { method: 'POST', body });\n\n      const { nonLocalizedFields, localizations } = data;\n\n      const merged = merge(defaultDataStructure, nonLocalizedFields);\n\n      const fieldsToRemove = [\n        'created_by',\n        'updated_by',\n        'published_at',\n        'id',\n        '_id',\n        'updated_at',\n        'created_at',\n      ];\n      const cleanedMerged = contentManagementUtilRemoveFieldsFromData(\n        merged,\n        currentLayout.contentType,\n        currentLayout.components,\n        fieldsToRemove\n      );\n      cleanedMerged.localizations = localizations;\n\n      action.data = formatComponentData(\n        cleanedMerged,\n        currentLayout.contentType,\n        currentLayout.components\n      );\n    } catch (err) {\n      // Silent\n    }\n\n    return next(action);\n  };\n\n  return getData();\n};\n\nexport default addCommonFieldsToInitialDataMiddleware;\n"]},"metadata":{},"sourceType":"script"}