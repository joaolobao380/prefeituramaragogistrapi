{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapDispatchToProps = mapDispatchToProps;\nexports[\"default\"] = exports.LocaleToggle = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reselect = require(\"reselect\");\n\nvar _redux = require(\"redux\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _reactstrap = require(\"reactstrap\");\n\nvar _selectors = _interopRequireDefault(require(\"../LanguageProvider/selectors\"));\n\nvar _actions = require(\"../LanguageProvider/actions\");\n\nvar _i18n = require(\"../../i18n\");\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar LocaleToggle = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(LocaleToggle, _React$Component);\n\n  var _super = _createSuper(LocaleToggle);\n\n  function LocaleToggle() {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, LocaleToggle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      isOpen: false\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"toggle\", function () {\n      return _this.setState(function (prevState) {\n        return {\n          isOpen: !prevState.isOpen\n        };\n      });\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(LocaleToggle, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          locale = _this$props.currentLocale.locale,\n          className = _this$props.className;\n      var style = (0, _classnames[\"default\"])('localeDropdownMenu', className);\n      return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_reactstrap.ButtonDropdown, {\n        isOpen: this.state.isOpen,\n        toggle: this.toggle\n      }, /*#__PURE__*/_react[\"default\"].createElement(_reactstrap.DropdownToggle, {\n        className: \"localeDropdownContent\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", null, _i18n.languageNativeNames[locale])), /*#__PURE__*/_react[\"default\"].createElement(_reactstrap.DropdownMenu, {\n        className: style\n      }, _i18n.languages.map(function (language) {\n        return /*#__PURE__*/_react[\"default\"].createElement(_reactstrap.DropdownItem, {\n          key: language,\n          onClick: function onClick() {\n            return _this2.props.changeLocale(language);\n          },\n          className: (0, _classnames[\"default\"])('localeToggleItem', locale === language ? 'localeToggleItemActive' : '')\n        }, _i18n.languageNativeNames[language]);\n      }))));\n    }\n  }]);\n  return LocaleToggle;\n}(_react[\"default\"].Component);\n\nexports.LocaleToggle = LocaleToggle;\nLocaleToggle.defaultProps = {\n  className: null\n};\nLocaleToggle.propTypes = {\n  className: _propTypes[\"default\"].string,\n  changeLocale: _propTypes[\"default\"].func.isRequired,\n  currentLocale: _propTypes[\"default\"].object.isRequired\n};\nvar mapStateToProps = (0, _reselect.createStructuredSelector)({\n  currentLocale: (0, _selectors[\"default\"])()\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return (0, _redux.bindActionCreators)({\n    changeLocale: _actions.changeLocale\n  }, dispatch);\n}\n\nvar withConnect = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps);\n\nvar _default = (0, _redux.compose)(withConnect)(LocaleToggle);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/admin/src/containers/LocaleToggle/index.js"],"names":["LocaleToggle","isOpen","setState","prevState","props","locale","currentLocale","className","style","state","toggle","languageNativeNames","languages","map","language","changeLocale","React","Component","defaultProps","propTypes","PropTypes","string","func","isRequired","object","mapStateToProps","mapDispatchToProps","dispatch","withConnect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAMA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;IAEaA,Y;;;;;;;;;;;;;;;8FAEH;AAAEC,MAAAA,MAAM,EAAE;AAAV,K;+FAEC;AAAA,aAAM,MAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAAEF,UAAAA,MAAM,EAAE,CAACE,SAAS,CAACF;AAArB,SAAL;AAAA,OAAvB,CAAN;AAAA,K;;;;;;WAET,kBAAS;AAAA;;AACP,wBAGI,KAAKG,KAHT;AAAA,UACmBC,MADnB,eACEC,aADF,CACmBD,MADnB;AAAA,UAEEE,SAFF,eAEEA,SAFF;AAIA,UAAMC,KAAK,GAAG,4BAAG,oBAAH,EAAyBD,SAAzB,CAAd;AAEA,0BACE,gCAAC,mBAAD,qBACE,gCAAC,0BAAD;AAAgB,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAWR,MAAnC;AAA2C,QAAA,MAAM,EAAE,KAAKS;AAAxD,sBACE,gCAAC,0BAAD;AAAgB,QAAA,SAAS,EAAC;AAA1B,sBACE,8CAAOC,0BAAoBN,MAApB,CAAP,CADF,CADF,eAKE,gCAAC,wBAAD;AAAc,QAAA,SAAS,EAAEG;AAAzB,SACGI,gBAAUC,GAAV,CAAc,UAAAC,QAAQ;AAAA,4BACrB,gCAAC,wBAAD;AACE,UAAA,GAAG,EAAEA,QADP;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACV,KAAL,CAAWW,YAAX,CAAwBD,QAAxB,CAAN;AAAA,WAFX;AAGE,UAAA,SAAS,EAAE,4BACT,kBADS,EAETT,MAAM,KAAKS,QAAX,GAAsB,wBAAtB,GAAiD,EAFxC;AAHb,WAQGH,0BAAoBG,QAApB,CARH,CADqB;AAAA,OAAtB,CADH,CALF,CADF,CADF;AAwBD;;;EArC+BE,kBAAMC,S;;;AAwCxCjB,YAAY,CAACkB,YAAb,GAA4B;AAC1BX,EAAAA,SAAS,EAAE;AADe,CAA5B;AAIAP,YAAY,CAACmB,SAAb,GAAyB;AACvBZ,EAAAA,SAAS,EAAEa,sBAAUC,MADE;AAEvBN,EAAAA,YAAY,EAAEK,sBAAUE,IAAV,CAAeC,UAFN;AAGvBjB,EAAAA,aAAa,EAAEc,sBAAUI,MAAV,CAAiBD;AAHT,CAAzB;AAMA,IAAME,eAAe,GAAG,wCAAyB;AAC/CnB,EAAAA,aAAa,EAAE;AADgC,CAAzB,CAAxB;;AAIO,SAASoB,kBAAT,CAA4BC,QAA5B,EAAsC;AAC3C,SAAO,+BACL;AACEZ,IAAAA,YAAY,EAAZA;AADF,GADK,EAILY,QAJK,CAAP;AAMD;;AAED,IAAMC,WAAW,GAAG,yBAAQH,eAAR,EAAyBC,kBAAzB,CAApB;;eAEe,oBAAQE,WAAR,EAAqB5B,YAArB,C","sourcesContent":["/*\n *\n * LanguageToggle\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { bindActionCreators, compose } from 'redux';\nimport cn from 'classnames';\nimport { ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport makeSelectLocale from '../LanguageProvider/selectors';\nimport { changeLocale } from '../LanguageProvider/actions';\nimport { languages, languageNativeNames } from '../../i18n';\nimport Wrapper from './Wrapper';\n\nexport class LocaleToggle extends React.Component {\n  // eslint-disable-line\n  state = { isOpen: false };\n\n  toggle = () => this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n\n  render() {\n    const {\n      currentLocale: { locale },\n      className,\n    } = this.props;\n    const style = cn('localeDropdownMenu', className);\n\n    return (\n      <Wrapper>\n        <ButtonDropdown isOpen={this.state.isOpen} toggle={this.toggle}>\n          <DropdownToggle className=\"localeDropdownContent\">\n            <span>{languageNativeNames[locale]}</span>\n          </DropdownToggle>\n\n          <DropdownMenu className={style}>\n            {languages.map(language => (\n              <DropdownItem\n                key={language}\n                onClick={() => this.props.changeLocale(language)}\n                className={cn(\n                  'localeToggleItem',\n                  locale === language ? 'localeToggleItemActive' : ''\n                )}\n              >\n                {languageNativeNames[language]}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </ButtonDropdown>\n      </Wrapper>\n    );\n  }\n}\n\nLocaleToggle.defaultProps = {\n  className: null,\n};\n\nLocaleToggle.propTypes = {\n  className: PropTypes.string,\n  changeLocale: PropTypes.func.isRequired,\n  currentLocale: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentLocale: makeSelectLocale(),\n});\n\nexport function mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      changeLocale,\n    },\n    dispatch\n  );\n}\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(LocaleToggle);\n"]},"metadata":{},"sourceType":"script"}