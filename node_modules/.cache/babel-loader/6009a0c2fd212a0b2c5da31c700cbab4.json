{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _lodash = require(\"lodash\");\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _icons = require(\"@buffetjs/icons\");\n\nvar _styles = require(\"@buffetjs/styles\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _getTrad = _interopRequireDefault(require(\"../../utils/getTrad\"));\n\nvar _components = require(\"./components\");\n\nvar _schema = _interopRequireDefault(require(\"../../utils/schema\"));\n\nvar _permissions = _interopRequireDefault(require(\"../../permissions\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar SettingsPage = function SettingsPage() {\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useState = (0, _react.useState)({}),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      formErrors = _useState2[0],\n      setFormErrors = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      isTestButtonLoading = _useState4[0],\n      setIsTestButtonLoading = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      showLoader = _useState6[0],\n      setShowLoader = _useState6[1];\n\n  var _useState7 = (0, _react.useState)({\n    provider: '',\n    settings: {\n      defaultFrom: '',\n      defaultReplyTo: '',\n      testAddress: ''\n    }\n  }),\n      _useState8 = (0, _slicedToArray2[\"default\"])(_useState7, 2),\n      config = _useState8[0],\n      setConfig = _useState8[1];\n\n  var _useState9 = (0, _react.useState)([]),\n      _useState10 = (0, _slicedToArray2[\"default\"])(_useState9, 2),\n      providers = _useState10[0],\n      setProviders = _useState10[1];\n\n  var _useState11 = (0, _react.useState)(),\n      _useState12 = (0, _slicedToArray2[\"default\"])(_useState11, 2),\n      testAddress = _useState12[0],\n      setTestAddress = _useState12[1];\n\n  var _useState13 = (0, _react.useState)(false),\n      _useState14 = (0, _slicedToArray2[\"default\"])(_useState13, 2),\n      testSuccess = _useState14[0],\n      setTestSuccess = _useState14[1];\n\n  var isMounted = (0, _react.useRef)(true);\n  var title = formatMessage({\n    id: (0, _getTrad[\"default\"])('Settings.title')\n  });\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(event) {\n      var errors;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              errors = {};\n              _context.prev = 2;\n              _context.next = 5;\n              return _schema[\"default\"].validate({\n                email: testAddress\n              }, {\n                abortEarly: false\n              });\n\n            case 5:\n              _context.prev = 5;\n              setIsTestButtonLoading(true);\n              _context.next = 9;\n              return (0, _strapiHelperPlugin.request)('/email/test', {\n                method: 'POST',\n                body: {\n                  to: testAddress\n                }\n              });\n\n            case 9:\n              setTestSuccess(true);\n              strapi.notification.success(formatMessage({\n                id: (0, _getTrad[\"default\"])('Settings.notification.test.success')\n              }, {\n                to: testAddress\n              }));\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](5);\n              strapi.notification.error(formatMessage({\n                id: (0, _getTrad[\"default\"])('Settings.notification.test.error')\n              }, {\n                to: testAddress\n              }));\n\n            case 16:\n              _context.prev = 16;\n\n              if (isMounted.current) {\n                setIsTestButtonLoading(false);\n              }\n\n              return _context.finish(16);\n\n            case 19:\n              _context.next = 26;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t1 = _context[\"catch\"](2);\n              errors = (0, _strapiHelperPlugin.getYupInnerErrors)(_context.t1);\n              setFormErrors(errors);\n              console.log(errors);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 21], [5, 13, 16, 19]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  (0, _react.useEffect)(function () {\n    var fetchEmailSettings = function fetchEmailSettings() {\n      setShowLoader(true);\n      (0, _strapiHelperPlugin.request)('/email/settings', {\n        method: 'GET'\n      }).then(function (data) {\n        setConfig(data.config);\n        setProviders([data.config.provider]);\n        setTestAddress((0, _lodash.get)(data, 'config.settings.testAddress'));\n      })[\"catch\"](function () {\n        return strapi.notification.error(formatMessage({\n          id: (0, _getTrad[\"default\"])('Settings.notification.config.error')\n        }));\n      })[\"finally\"](function () {\n        return setShowLoader(false);\n      });\n    };\n\n    fetchEmailSettings();\n  }, [formatMessage]);\n  (0, _react.useEffect)(function () {\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.CheckPagePermissions, {\n    permissions: _permissions[\"default\"].settings\n  }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.SettingsPageTitle, {\n    name: title\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/_react[\"default\"].createElement(_custom.Header, {\n    title: {\n      label: title\n    },\n    content: formatMessage({\n      id: (0, _getTrad[\"default\"])('Settings.subTitle')\n    }),\n    isLoading: showLoader\n  }), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.BaselineAlignment, {\n    top: true,\n    size: \"3px\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.FormBloc, {\n    title: formatMessage({\n      id: (0, _getTrad[\"default\"])('Settings.form.title.config')\n    }),\n    isLoading: showLoader\n  }, /*#__PURE__*/_react[\"default\"].createElement(_components.Text, {\n    fontSize: \"md\",\n    lineHeight: \"18px\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n    id: (0, _getTrad[\"default\"])('Settings.form.text.configuration'),\n    values: {\n      file: /*#__PURE__*/_react[\"default\"].createElement(\"code\", null, \"./config/plugins.js\"),\n      link: /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n        href: \"https://strapi.io/documentation/developer-docs/latest/development/plugins/email.html#configure-the-plugin\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\"\n      }, \"link\")\n    }\n  })), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.SizedInput, {\n    disabled: true,\n    label: (0, _getTrad[\"default\"])('Settings.form.label.defaultFrom'),\n    name: \"default-from\",\n    placeholder: (0, _getTrad[\"default\"])('Settings.form.placeholder.defaultFrom'),\n    size: {\n      xs: 6\n    },\n    type: \"email\",\n    value: config.settings.defaultFrom\n  }), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.SizedInput, {\n    disabled: true,\n    label: (0, _getTrad[\"default\"])('Settings.form.label.defaultReplyTo'),\n    name: \"default-reply-to\",\n    placeholder: (0, _getTrad[\"default\"])('Settings.form.placeholder.defaultReplyTo'),\n    size: {\n      xs: 6\n    },\n    type: \"email\",\n    value: config.settings.defaultReplyTo\n  }), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.SizedInput, {\n    disabled: true,\n    label: (0, _getTrad[\"default\"])('Settings.form.label.provider'),\n    name: \"provider\",\n    options: providers,\n    size: {\n      xs: 6\n    },\n    type: \"select\",\n    value: \"strapi-provider-email-\".concat(config.provider)\n  })), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.BaselineAlignment, {\n    top: true,\n    size: \"32px\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.FormBloc, {\n    title: formatMessage({\n      id: (0, _getTrad[\"default\"])('Settings.form.title.test')\n    }),\n    isLoading: showLoader\n  }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.SizedInput, {\n    label: (0, _getTrad[\"default\"])('Settings.form.label.testAddress'),\n    name: \"test-address\",\n    placeholder: (0, _getTrad[\"default\"])('Settings.form.placeholder.testAddress'),\n    onChange: function onChange(event) {\n      return setTestAddress(event.target.value);\n    },\n    size: {\n      xs: 6\n    },\n    type: \"email\",\n    value: testAddress,\n    error: formErrors.email\n  }), /*#__PURE__*/_react[\"default\"].createElement(_components.AlignedButton, {\n    color: \"success\",\n    disabled: testSuccess,\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.Envelope, {\n      fill: testSuccess ? _styles.colors.button.disabled.color : null,\n      style: {\n        verticalAlign: 'middle',\n        marginRight: '10px'\n      }\n    }),\n    isLoading: isTestButtonLoading,\n    style: {\n      fontWeight: 600\n    },\n    type: \"submit\"\n  }, formatMessage({\n    id: (0, _getTrad[\"default\"])('Settings.button.test-email')\n  })))))));\n};\n\nvar _default = SettingsPage;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/joaovictorlobao/prefeituramaragogistrapi/.cache/plugins/strapi-plugin-email/admin/src/containers/Settings/index.js"],"names":["SettingsPage","formatMessage","formErrors","setFormErrors","isTestButtonLoading","setIsTestButtonLoading","showLoader","setShowLoader","provider","settings","defaultFrom","defaultReplyTo","testAddress","config","setConfig","providers","setProviders","setTestAddress","testSuccess","setTestSuccess","isMounted","title","id","handleSubmit","event","preventDefault","errors","schema","validate","email","abortEarly","method","body","to","strapi","notification","success","error","current","console","log","fetchEmailSettings","then","data","pluginPermissions","label","file","link","xs","target","value","colors","button","disabled","color","verticalAlign","marginRight","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { get } from 'lodash';\nimport { Header } from '@buffetjs/custom';\nimport { Envelope } from '@buffetjs/icons';\nimport { colors } from '@buffetjs/styles';\nimport {\n  FormBloc,\n  request,\n  SettingsPageTitle,\n  SizedInput,\n  getYupInnerErrors,\n  BaselineAlignment,\n  CheckPagePermissions,\n} from 'strapi-helper-plugin';\nimport getTrad from '../../utils/getTrad';\nimport { AlignedButton, Text } from './components';\nimport schema from '../../utils/schema';\nimport pluginPermissions from '../../permissions';\n\nconst SettingsPage = () => {\n  const { formatMessage } = useIntl();\n  const [formErrors, setFormErrors] = useState({});\n  const [isTestButtonLoading, setIsTestButtonLoading] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [config, setConfig] = useState({\n    provider: '',\n    settings: { defaultFrom: '', defaultReplyTo: '', testAddress: '' },\n  });\n  const [providers, setProviders] = useState([]);\n  const [testAddress, setTestAddress] = useState();\n  const [testSuccess, setTestSuccess] = useState(false);\n  const isMounted = useRef(true);\n\n  const title = formatMessage({ id: getTrad('Settings.title') });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let errors = {};\n\n    try {\n      await schema.validate({ email: testAddress }, { abortEarly: false });\n\n      try {\n        setIsTestButtonLoading(true);\n\n        await request('/email/test', {\n          method: 'POST',\n          body: { to: testAddress },\n        });\n\n        setTestSuccess(true);\n\n        strapi.notification.success(\n          formatMessage({ id: getTrad('Settings.notification.test.success') }, { to: testAddress })\n        );\n      } catch (err) {\n        strapi.notification.error(\n          formatMessage({ id: getTrad('Settings.notification.test.error') }, { to: testAddress })\n        );\n      } finally {\n        if (isMounted.current) {\n          setIsTestButtonLoading(false);\n        }\n      }\n    } catch (error) {\n      errors = getYupInnerErrors(error);\n      setFormErrors(errors);\n      console.log(errors);\n    }\n  };\n\n  useEffect(() => {\n    const fetchEmailSettings = () => {\n      setShowLoader(true);\n\n      request('/email/settings', {\n        method: 'GET',\n      })\n        .then(data => {\n          setConfig(data.config);\n          setProviders([data.config.provider]);\n          setTestAddress(get(data, 'config.settings.testAddress'));\n        })\n        .catch(() =>\n          strapi.notification.error(\n            formatMessage({ id: getTrad('Settings.notification.config.error') })\n          )\n        )\n        .finally(() => setShowLoader(false));\n    };\n\n    fetchEmailSettings();\n  }, [formatMessage]);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return (\n    <>\n      <CheckPagePermissions permissions={pluginPermissions.settings}>\n        <SettingsPageTitle name={title} />\n        <div>\n          <form onSubmit={handleSubmit}>\n            <Header\n              title={{ label: title }}\n              content={formatMessage({ id: getTrad('Settings.subTitle') })}\n              isLoading={showLoader}\n            />\n            <BaselineAlignment top size=\"3px\" />\n            <FormBloc\n              title={formatMessage({ id: getTrad('Settings.form.title.config') })}\n              isLoading={showLoader}\n            >\n              <Text fontSize=\"md\" lineHeight=\"18px\">\n                <FormattedMessage\n                  id={getTrad('Settings.form.text.configuration')}\n                  values={{\n                    file: <code>./config/plugins.js</code>,\n                    link: (\n                      <a\n                        href=\"https://strapi.io/documentation/developer-docs/latest/development/plugins/email.html#configure-the-plugin\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        link\n                      </a>\n                    ),\n                  }}\n                />\n              </Text>\n              <SizedInput\n                disabled\n                label={getTrad('Settings.form.label.defaultFrom')}\n                name=\"default-from\"\n                placeholder={getTrad('Settings.form.placeholder.defaultFrom')}\n                size={{ xs: 6 }}\n                type=\"email\"\n                value={config.settings.defaultFrom}\n              />\n              <SizedInput\n                disabled\n                label={getTrad('Settings.form.label.defaultReplyTo')}\n                name=\"default-reply-to\"\n                placeholder={getTrad('Settings.form.placeholder.defaultReplyTo')}\n                size={{ xs: 6 }}\n                type=\"email\"\n                value={config.settings.defaultReplyTo}\n              />\n              <SizedInput\n                disabled\n                label={getTrad('Settings.form.label.provider')}\n                name=\"provider\"\n                options={providers}\n                size={{ xs: 6 }}\n                type=\"select\"\n                value={`strapi-provider-email-${config.provider}`}\n              />\n            </FormBloc>\n            <BaselineAlignment top size=\"32px\" />\n            <FormBloc\n              title={formatMessage({ id: getTrad('Settings.form.title.test') })}\n              isLoading={showLoader}\n            >\n              <SizedInput\n                label={getTrad('Settings.form.label.testAddress')}\n                name=\"test-address\"\n                placeholder={getTrad('Settings.form.placeholder.testAddress')}\n                onChange={event => setTestAddress(event.target.value)}\n                size={{ xs: 6 }}\n                type=\"email\"\n                value={testAddress}\n                error={formErrors.email}\n              />\n              <AlignedButton\n                color=\"success\"\n                disabled={testSuccess}\n                icon={(\n                  <Envelope\n                    fill={testSuccess ? colors.button.disabled.color : null}\n                    style={{ verticalAlign: 'middle', marginRight: '10px' }}\n                  />\n                )}\n                isLoading={isTestButtonLoading}\n                style={{ fontWeight: 600 }}\n                type=\"submit\"\n              >\n                {formatMessage({ id: getTrad('Settings.button.test-email') })}\n              </AlignedButton>\n            </FormBloc>\n          </form>\n        </div>\n      </CheckPagePermissions>\n    </>\n  );\n};\n\nexport default SettingsPage;\n"]},"metadata":{},"sourceType":"script"}